var Network = {};
Network.addServerPacket = function() {};
Network.server = {};
Network.server.onClientConnected = function() {};
Network.server.onStateChanged = function() {};
Network.server.sendToAll = function() {};
Network.server.addWatchdogAction = function() {};
Network.server.addUntypedInitializationPacketListener = function() {};
Network.server.getConnectedPlayers = function() {};
Network.server.connectedClients = [];
Network.server.hashCode = function() {};
Network.server.addOnClientDisconnectedListener = function() {};
Network.server.getInitializingClients = function() {};
Network.server.initializingClients = [];
Network.server.sendMessageToAll = function() {};
Network.server.connectedPlayers = [-51539607551];
Network.server.onDisconnect = function() {};
Network.server.networkThreadLoop = function() {};
Network.server.getConnectedClientForPlayer = function() {};
Network.server.start = function() {};
Network.server.addInitializationPacketListener = function() {};
Network.server.addShutdownListener = function() {};
Network.server.runOnNetworkThread = function() {};
Network.server.getConfig = function() {};
Network.server.addOnClientConnectedListener = function() {};
Network.server.getConnectedClients = function() {};
Network.server.addPacketReceivedListener = function() {};
Network.server.addOnClientConnectionRequestedListener = function() {};
Network.server.onNativeChannelConnected = function() {};
Network.server.connectedClientForPlayer = null;
Network.server.addUntypedPacketReceivedListener = function() {};
Network.server.openLocalClientChannel = function() {};
Network.server.toString = function() {};
Network.server.config = {};
Network.server.config.getNativeChannelPingPongTimeout = function() {};
Network.server.config.setLocalNativeProtocolForced = function() {};
Network.server.config.setDefaultPort = function() {};
Network.server.config.setInitializationTimeout = function() {};
Network.server.config.getClientProtocolId = function() {};
Network.server.config.defaultPort = 2304;
Network.server.config.getInitializationTimeout = function() {};
Network.server.config.socketConnectionAllowed = false;
Network.server.config.localNativeProtocolForced = false;
Network.server.config.hashCode = function() {};
Network.server.config.isLocalNativeProtocolForced = function() {};
Network.server.config.nativeProtocolPrioritizedForRemoteConnection = false;
Network.server.config.isSocketConnectionAllowed = function() {};
Network.server.config.setClientProtocolId = function() {};
Network.server.config.setSocketConnectionAllowed = function() {};
Network.server.config.isNativeProtocolPrioritizedForRemoteConnection = function() {};
Network.server.config.getDefaultPort = function() {};
Network.server.config.nativeChannelPingPongTimeout = 30000;
Network.server.config.updateFromEngineConfig = function() {};
Network.server.config.clientProtocolId = 1;
Network.server.config.initializationTimeout = 90000;
Network.server.config.toString = function() {};
Network.server.config.setNativeProtocolPrioritizedForRemoteConnection = function() {};
Network.server.config.setNativeChannelPingPongTimeout = function() {};
Network.server.shutdown = function() {};
Network.networkInstance = {};
Network.networkInstance.getClientThreadJobExecutor = function() {};
Network.networkInstance.addServerPacket = function() {};
Network.networkInstance.server = {};
Network.networkInstance.server.onClientConnected = function() {};
Network.networkInstance.server.onStateChanged = function() {};
Network.networkInstance.server.sendToAll = function() {};
Network.networkInstance.server.addWatchdogAction = function() {};
Network.networkInstance.server.addUntypedInitializationPacketListener = function() {};
Network.networkInstance.server.getConnectedPlayers = function() {};
Network.networkInstance.server.connectedClients = [];
Network.networkInstance.server.hashCode = function() {};
Network.networkInstance.server.addOnClientDisconnectedListener = function() {};
Network.networkInstance.server.getInitializingClients = function() {};
Network.networkInstance.server.initializingClients = [];
Network.networkInstance.server.sendMessageToAll = function() {};
Network.networkInstance.server.connectedPlayers = [-51539607551];
Network.networkInstance.server.onDisconnect = function() {};
Network.networkInstance.server.networkThreadLoop = function() {};
Network.networkInstance.server.getConnectedClientForPlayer = function() {};
Network.networkInstance.server.start = function() {};
Network.networkInstance.server.addInitializationPacketListener = function() {};
Network.networkInstance.server.addShutdownListener = function() {};
Network.networkInstance.server.runOnNetworkThread = function() {};
Network.networkInstance.server.getConfig = function() {};
Network.networkInstance.server.addOnClientConnectedListener = function() {};
Network.networkInstance.server.getConnectedClients = function() {};
Network.networkInstance.server.addPacketReceivedListener = function() {};
Network.networkInstance.server.addOnClientConnectionRequestedListener = function() {};
Network.networkInstance.server.onNativeChannelConnected = function() {};
Network.networkInstance.server.connectedClientForPlayer = null;
Network.networkInstance.server.addUntypedPacketReceivedListener = function() {};
Network.networkInstance.server.openLocalClientChannel = function() {};
Network.networkInstance.server.toString = function() {};
Network.networkInstance.server.config = {};
Network.networkInstance.server.config.getNativeChannelPingPongTimeout = function() {};
Network.networkInstance.server.config.setLocalNativeProtocolForced = function() {};
Network.networkInstance.server.config.setDefaultPort = function() {};
Network.networkInstance.server.config.setInitializationTimeout = function() {};
Network.networkInstance.server.config.getClientProtocolId = function() {};
Network.networkInstance.server.config.defaultPort = 2304;
Network.networkInstance.server.config.getInitializationTimeout = function() {};
Network.networkInstance.server.config.socketConnectionAllowed = false;
Network.networkInstance.server.config.localNativeProtocolForced = false;
Network.networkInstance.server.config.hashCode = function() {};
Network.networkInstance.server.config.isLocalNativeProtocolForced = function() {};
Network.networkInstance.server.config.nativeProtocolPrioritizedForRemoteConnection = false;
Network.networkInstance.server.config.isSocketConnectionAllowed = function() {};
Network.networkInstance.server.config.setClientProtocolId = function() {};
Network.networkInstance.server.config.setSocketConnectionAllowed = function() {};
Network.networkInstance.server.config.isNativeProtocolPrioritizedForRemoteConnection = function() {};
Network.networkInstance.server.config.getDefaultPort = function() {};
Network.networkInstance.server.config.nativeChannelPingPongTimeout = 30000;
Network.networkInstance.server.config.updateFromEngineConfig = function() {};
Network.networkInstance.server.config.clientProtocolId = 1;
Network.networkInstance.server.config.initializationTimeout = 90000;
Network.networkInstance.server.config.toString = function() {};
Network.networkInstance.server.config.setNativeProtocolPrioritizedForRemoteConnection = function() {};
Network.networkInstance.server.config.setNativeChannelPingPongTimeout = function() {};
Network.networkInstance.server.shutdown = function() {};
Network.networkInstance.startClient = function() {};
Network.networkInstance.addServerInitializationPacket = function() {};
Network.networkInstance.hashCode = function() {};
Network.networkInstance.client = {};
Network.networkInstance.client.playerUid = -51539607551;
Network.networkInstance.client.setPlayerUid = function() {};
Network.networkInstance.client.connectionEstablished = true;
Network.networkInstance.client.addOnDisconnectedListener = function() {};
Network.networkInstance.client.isConnectionEstablished = function() {};
Network.networkInstance.client.addUntypedInitializationPacketListener = function() {};
Network.networkInstance.client.running = true;
Network.networkInstance.client.awaitAllInitializationPackets = function() {};
Network.networkInstance.client.isRunning = function() {};
Network.networkInstance.client.hashCode = function() {};
Network.networkInstance.client.addOnConnectedListener = function() {};
Network.networkInstance.client.getPlayerUid = function() {};
Network.networkInstance.client.start = function() {};
Network.networkInstance.client.addInitializationPacketListener = function() {};
Network.networkInstance.client.addShutdownListener = function() {};
Network.networkInstance.client.onPacketReceived = function() {};
Network.networkInstance.client.addPacketReceivedListener = function() {};
Network.networkInstance.client.addUntypedPacketReceivedListener = function() {};
Network.networkInstance.client.toString = function() {};
Network.networkInstance.client.addOnRequestingConnectionListener = function() {};
Network.networkInstance.client.send = function() {};
Network.networkInstance.client.shutdown = function() {};
Network.networkInstance.shutdownClient = function() {};
Network.networkInstance.startLanServer = function() {};
Network.networkInstance.addClientPacket = function() {};
Network.networkInstance.getServer = function() {};
Network.networkInstance.addServerShutdownListener = function() {};
Network.networkInstance.getClient = function() {};
Network.networkInstance.getConfig = function() {};
Network.networkInstance.instantJobExecutor = {};
Network.networkInstance.instantJobExecutor.add = function() {};
Network.networkInstance.instantJobExecutor.hashCode = function() {};
Network.networkInstance.instantJobExecutor.toString = function() {};
Network.networkInstance.addClientInitializationPacket = function() {};
Network.networkInstance.shutdownServer = function() {};
Network.networkInstance.startServer = function() {};
Network.networkInstance.serverThreadJobExecutor = {};
Network.networkInstance.serverThreadJobExecutor.add = function() {};
Network.networkInstance.serverThreadJobExecutor.hashCode = function() {};
Network.networkInstance.serverThreadJobExecutor.toString = function() {};
Network.networkInstance.getServerThreadJobExecutor = function() {};
Network.networkInstance.toString = function() {};
Network.networkInstance.addClientShutdownListener = function() {};
Network.networkInstance.getInstantJobExecutor = function() {};
Network.networkInstance.config = {};
Network.networkInstance.config.getNativeChannelPingPongTimeout = function() {};
Network.networkInstance.config.setLocalNativeProtocolForced = function() {};
Network.networkInstance.config.setDefaultPort = function() {};
Network.networkInstance.config.setInitializationTimeout = function() {};
Network.networkInstance.config.getClientProtocolId = function() {};
Network.networkInstance.config.defaultPort = 2304;
Network.networkInstance.config.getInitializationTimeout = function() {};
Network.networkInstance.config.socketConnectionAllowed = false;
Network.networkInstance.config.localNativeProtocolForced = false;
Network.networkInstance.config.hashCode = function() {};
Network.networkInstance.config.isLocalNativeProtocolForced = function() {};
Network.networkInstance.config.nativeProtocolPrioritizedForRemoteConnection = false;
Network.networkInstance.config.isSocketConnectionAllowed = function() {};
Network.networkInstance.config.setClientProtocolId = function() {};
Network.networkInstance.config.setSocketConnectionAllowed = function() {};
Network.networkInstance.config.isNativeProtocolPrioritizedForRemoteConnection = function() {};
Network.networkInstance.config.getDefaultPort = function() {};
Network.networkInstance.config.nativeChannelPingPongTimeout = 30000;
Network.networkInstance.config.updateFromEngineConfig = function() {};
Network.networkInstance.config.clientProtocolId = 1;
Network.networkInstance.config.initializationTimeout = 90000;
Network.networkInstance.config.toString = function() {};
Network.networkInstance.config.setNativeProtocolPrioritizedForRemoteConnection = function() {};
Network.networkInstance.config.setNativeChannelPingPongTimeout = function() {};
Network.networkInstance.shutdown = function() {};
Network.networkInstance.clientThreadJobExecutor = {};
Network.networkInstance.clientThreadJobExecutor.add = function() {};
Network.networkInstance.clientThreadJobExecutor.hashCode = function() {};
Network.networkInstance.clientThreadJobExecutor.toString = function() {};
Network.getHandlerForPlayer = function() {};
Network.getConnectedPlayers = function() {};
Network.addServerInitializationPacket = function() {};
Network.connectedClients = null;
Network.hashCode = function() {};
Network.client = {};
Network.client.playerUid = -51539607551;
Network.client.setPlayerUid = function() {};
Network.client.connectionEstablished = true;
Network.client.addOnDisconnectedListener = function() {};
Network.client.isConnectionEstablished = function() {};
Network.client.addUntypedInitializationPacketListener = function() {};
Network.client.running = true;
Network.client.awaitAllInitializationPackets = function() {};
Network.client.isRunning = function() {};
Network.client.hashCode = function() {};
Network.client.addOnConnectedListener = function() {};
Network.client.getPlayerUid = function() {};
Network.client.start = function() {};
Network.client.addInitializationPacketListener = function() {};
Network.client.addShutdownListener = function() {};
Network.client.onPacketReceived = function() {};
Network.client.addPacketReceivedListener = function() {};
Network.client.addUntypedPacketReceivedListener = function() {};
Network.client.toString = function() {};
Network.client.addOnRequestingConnectionListener = function() {};
Network.client.send = function() {};
Network.client.shutdown = function() {};
Network.throwInitializationPacketError = function() {};
Network.addClientPacket = function() {};
Network.serverToLocalId = function() {};
Network.connectedPlayers = [ -51539607551 ];
Network.getServer = function() {};
Network.localToServerId = function() {};
Network.handlerForPlayer = null;
Network.sendToAllClients = function() {};
Network.getClientForPlayer = function() {};
Network.sendToServer = function() {};
Network.getClient = function() {};
Network.getNetworkInstance = function() {};
Network.sendServerMessage = function() {};
Network.getConnectedClients = function() {};
Network.addClientInitializationPacket = function() {};
Network.clientForPlayer = null;
Network.inRemoteWorld = function() {};
Network.toString = function() {};
