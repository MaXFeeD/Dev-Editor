var CoreAPI = {};
CoreAPI.getCoreAPILevel = function() {
	return CORE_ENGINE_API_LEVEL;
};
CoreAPI.runOnMainThread = function() {};
CoreAPI.runOnClientThread = function() {};
CoreAPI.getMCPEVersion = getMCPEVersion;
CoreAPI.Debug = {};
CoreAPI.Debug.sysTime = function() {
	return java.lang.System.currentTimeMillis();
};
CoreAPI.Debug.addParticle = function(id, x, y, z, vx, vy, vz, data) {};
CoreAPI.Debug.message = function(message) {};
CoreAPI.Debug.warning = function(message) {};
CoreAPI.Debug.error = function(message) {};
CoreAPI.Debug.m = function() {};
CoreAPI.Debug.bitmap = function(bitmap, title) {};
CoreAPI.Debug.big = function() {};
CoreAPI.Network = Network;
CoreAPI.Resources = Resources;
CoreAPI.Dimensions = Dimensions;
CoreAPI.FileTools = FileTools;
CoreAPI.Threading = Threading;
CoreAPI.TileEntity = TileEntity;
CoreAPI.MobRegistry = MobRegistry;
CoreAPI.MobSpawnRegistry = EntitySpawnRegistry;
CoreAPI.GameObject = GameObject;
CoreAPI.GameObjectRegistry = GameObjectRegistry;
CoreAPI.ModAPI = ModAPI;
CoreAPI.Saver = SaverAPI;
CoreAPI.World = WorldAPI;
CoreAPI.Entity = EntityAPI;
CoreAPI.AddonEntityRegistry = AddonEntityRegistry;
CoreAPI.Player = PlayerAPI;
CoreAPI.Game = GameAPI;
CoreAPI.Render = RenderAPI;
CoreAPI.Texture = Texture;
CoreAPI.EntityModel = ModelAPI;
CoreAPI.EntityModelWatcher = ModelWatcher;
CoreAPI.EntityAIClass = EntityAI;
CoreAPI.EntityAIWatcher = EntityAIWatcher;
CoreAPI.EntityAI = {};
CoreAPI.EntityAI.Idle = EntityAIIdle;
CoreAPI.EntityAI.Follow = EntityAIFollow;
CoreAPI.EntityAI.Panic = EntityAIPanic;
CoreAPI.EntityAI.Wander = EntityAIWander;
CoreAPI.EntityAI.Attack = EntityAIAttack;
CoreAPI.EntityAI.Swim = EntityAISwim;
CoreAPI.EntityAI.PanicWatcher = EntityAIPanicWatcher;
CoreAPI.GenerationUtils = WorldGenerationUtils;
CoreAPI.Animation = {};
CoreAPI.Animation.base = AnimationBase;
CoreAPI.Animation.Base = AnimationBase;
CoreAPI.Animation.item = AnimationItem;
CoreAPI.Animation.Item = AnimationItem;
CoreAPI.Particles = ParticleAnimator;
CoreAPI.IDData = {};
CoreAPI.IDData.item = ItemID;
CoreAPI.IDData.block = BlockID;
CoreAPI.ItemID = ItemID;
CoreAPI.BlockID = BlockID;
CoreAPI.Block = BlockRegistry;
CoreAPI.Item = ItemRegistry;
CoreAPI.ToolAPI = ToolAPI;
CoreAPI.Armor = ArmorRegistry;
CoreAPI.LiquidRegistry = LiquidRegistry;
CoreAPI.Native = {};
CoreAPI.Native.ArmorType = ArmorType;
CoreAPI.Native.ItemCategory = ItemCategory;
CoreAPI.Native.ParticleType = ParticleType;
CoreAPI.Native.Color = ChatColor;
CoreAPI.Native.EntityType = EntityType;
CoreAPI.Native.MobRenderType = EntityRenderType;
CoreAPI.Native.PotionEffect = MobEffect;
CoreAPI.Native.Dimension = DimensionId;
CoreAPI.Native.ItemAnimation = UseAnimation;
CoreAPI.Native.BlockSide = BlockFace;
CoreAPI.Native.Enchantment = Enchantment;
CoreAPI.Native.EnchantType = EnchantType;
CoreAPI.Native.BlockRenderLayer = BlockRenderLayer;
CoreAPI.Native.GameMode = GameMode;
CoreAPI.Native.GameDifficulty = GameDifficulty;
CoreAPI.Native.PlayerAbility = PlayerAbility;
CoreAPI.Native.TileEntityType = TileEntityType;
CoreAPI.Native.NbtDataType = NbtDataType;

function injectCoreAPI(scope) {
	for (var name in CoreAPI) {
		scope[name] = CoreAPI[name];
	}
}

// AdaptedScript
// CoreAPI.NetworkEntity = NetworkEntity;
// CoreAPI.NetworkEntityType = NetworkEntityType;
// CoreAPI.NetworkConnectedClientList = NetworkConnectedClientList;
// CoreAPI.SyncedNetworkData = SyncedNetworkData;
// CoreAPI.BlockSource = BlockSource;
// CoreAPI.BlockState = BlockState;
// CoreAPI.PlayerActor = PlayerActor;
// CoreAPI.ItemContainer = ItemContainer;
// CoreAPI.AttachableRender = AttachableRender;
// CoreAPI.ActorRenderer = ActorRenderer;
CoreAPI.LowLevelUtils = MCSystem;
// CoreAPI.NBT = NBT;
CoreAPI.TagRegistry = TagRegistry;
CoreAPI.WorldRenderer = WorldRenderer;
// CoreAPI.CustomBiome = CustomBiome;
CoreAPI.Commands = Commands;
CoreAPI.Logger = Logger;
CoreAPI.Translation = Translation;
// CoreAPI.Config = Config;
CoreAPI.UI = UI;
CoreAPI.UpdatableAPI = Updatable;
CoreAPI.Updatable = Updatable;
CoreAPI.Callback = Callback;
CoreAPI.IDRegistry = IDRegistry;
CoreAPI.ItemModel = ItemModel;
CoreAPI.CustomEnchant = CustomEnchant;
CoreAPI.BlockRenderer = BlockRenderer;
CoreAPI.ICRender = ICRender;
CoreAPI.Recipes = Recipes;
CoreAPI.alert = print;
