var __mod__ = new com.zhekasmirnov.innercore.mod.build.Mod();
var __name__ = "Dump Creator";
var __dir__ = "/storage/emulated/0/games/horizon/packs/Inner_Core/innercore/mods/Dump Creator/";
var __config__ = new com.zhekasmirnov.innercore.mod.build.Config();
function __debug_typecheck__() {};
function runCustomSource() {};

var BlockID = {};
BlockID.test = 8192;

var ItemID = {};

var VanillaItemID = {};
VanillaItemID.record_11 = 510;
VanillaItemID.record_ward = 509;
VanillaItemID.cooked_rabbit = 412;
VanillaItemID.record_stal = 507;
VanillaItemID.record_blocks = 502;
VanillaItemID.hopper_minecart = 408;
VanillaItemID.enchanted_book = 403;
VanillaItemID.rabbit_hide = 415;
VanillaItemID.iron_boots = 309;
VanillaItemID.beetroot_soup = 459;
VanillaItemID.fireball = 385;
VanillaItemID.netherstar = 399;
VanillaItemID.spawn_egg = 383;
VanillaItemID.writable_book = 386;
VanillaItemID.speckled_melon = 382;
VanillaItemID.ender_eye = 381;
VanillaItemID.glass_bottle = 374;
VanillaItemID.quartz = 406;
VanillaItemID.baked_potato = 393;
VanillaItemID.potion = 373;
VanillaItemID.ender_pearl = 368;
VanillaItemID.record_cat = 501;
VanillaItemID.shears = 359;
VanillaItemID.map = 358;
VanillaItemID.bone = 352;
VanillaItemID.fishing_rod = 346;
VanillaItemID.redstone = 331;
VanillaItemID.slime_ball = 341;
VanillaItemID.clay_ball = 337;
VanillaItemID.horsearmorleather = 416;
VanillaItemID.pumpkin_seeds = 361;
VanillaItemID.experience_bottle = 384;
VanillaItemID.brick = 336;
VanillaItemID.boat = 333;
VanillaItemID.minecart = 328;
VanillaItemID.sign = 323;
VanillaItemID.flint = 318;
VanillaItemID.saddle = 329;
VanillaItemID.iron_chestplate = 307;
VanillaItemID.bread = 297;
VanillaItemID.totem = 450;
VanillaItemID.shield = 513;
VanillaItemID.end_crystal = 426;
VanillaItemID.iron_axe = 258;
VanillaItemID.book = 340;
VanillaItemID.armor_stand = 425;
VanillaItemID.wooden_sword = 268;
VanillaItemID.stick = 280;
VanillaItemID.muttonraw = 423;
VanillaItemID.flint_and_steel = 259;
VanillaItemID.trident = 455;
VanillaItemID.golden_leggings = 316;
VanillaItemID.chainmail_boots = 305;
VanillaItemID.netherbrick = 405;
VanillaItemID.wooden_hoe = 290;
VanillaItemID.melon_seeds = 362;
VanillaItemID.gold_nugget = 371;
VanillaItemID.chicken = 365;
VanillaItemID.poisonous_potato = 394;
VanillaItemID.emptymap = 395;
VanillaItemID.wooden_pickaxe = 270;
VanillaItemID.string = 287;
VanillaItemID.clownfish = 461;
VanillaItemID.golden_carrot = 396;
VanillaItemID.paper = 339;
VanillaItemID.potato = 392;
VanillaItemID.comparator = 404;
VanillaItemID.banner = 446;
VanillaItemID.carrotonastick = 398;
VanillaItemID.beetroot_seeds = 458;
VanillaItemID.emerald = 388;
VanillaItemID.rabbit = 411;
VanillaItemID.ghast_tear = 370;
VanillaItemID.appleenchanted = 466;
VanillaItemID.dragon_breath = 437;
VanillaItemID.bucket = 325;
VanillaItemID.gunpowder = 289;
VanillaItemID.mushroom_stew = 282;
VanillaItemID.iron_pickaxe = 257;
VanillaItemID.carrot = 391;
VanillaItemID.chest_minecart = 342;
VanillaItemID.record_chirp = 503;
VanillaItemID.prismarine_crystals = 422;
VanillaItemID.dye = 351;
VanillaItemID.golden_apple = 322;
VanillaItemID.diamond_sword = 276;
VanillaItemID.chainmail_helmet = 302;
VanillaItemID.record_far = 504;
VanillaItemID.record_mall = 505;
VanillaItemID.repeater = 356;
VanillaItemID.pufferfish = 462;
VanillaItemID.iron_ingot = 265;
VanillaItemID.record_strad = 508;
VanillaItemID.beef = 363;
VanillaItemID.cooked_chicken = 366;
VanillaItemID.iron_helmet = 306;
VanillaItemID.muttoncooked = 424;
VanillaItemID.leather_boots = 301;
VanillaItemID.snowball = 332;
VanillaItemID.cooked_salmon = 463;
VanillaItemID.lead = 420;
VanillaItemID.dried_kelp = 464;
VanillaItemID.diamond_hoe = 293;
VanillaItemID.sweet_berries = 477;
VanillaItemID.cookie = 357;
VanillaItemID.stone_pickaxe = 274;
VanillaItemID.melon = 360;
VanillaItemID.diamond_leggings = 312;
VanillaItemID.record_13 = 500;
VanillaItemID.wooden_shovel = 269;
VanillaItemID.cooked_beef = 364;
VanillaItemID.stone_hoe = 291;
VanillaItemID.record_wait = 511;
VanillaItemID.jungle_sign = 474;
VanillaItemID.golden_chestplate = 315;
VanillaItemID.rotten_flesh = 367;
VanillaItemID.diamond = 264;
VanillaItemID.horsearmoriron = 417;
VanillaItemID.leather_leggings = 300;
VanillaItemID.bow = 261;
VanillaItemID.sugar = 353;
VanillaItemID.leather = 334;
VanillaItemID.rapid_fertilizer = 449;
VanillaItemID.stone_shovel = 273;
VanillaItemID.apple = 260;
VanillaItemID.stone_axe = 275;
VanillaItemID.rabbit_foot = 414;
VanillaItemID.magma_cream = 378;
VanillaItemID.porkchop = 319;
VanillaItemID.diamond_axe = 279;
VanillaItemID.fireworkscharge = 402;
VanillaItemID.bowl = 281;
VanillaItemID.blaze_powder = 377;
VanillaItemID.clock = 347;
VanillaItemID.gold_ingot = 266;
VanillaItemID.golden_sword = 283;
VanillaItemID.cooked_fish = 350;
VanillaItemID.golden_hoe = 294;
VanillaItemID.record_mellohi = 506;
VanillaItemID.iron_leggings = 308;
VanillaItemID.cooked_porkchop = 320;
VanillaItemID.diamond_chestplate = 311;
VanillaItemID.feather = 288;
VanillaItemID.wooden_axe = 271;
VanillaItemID.iron_hoe = 292;
VanillaItemID.painting = 321;
VanillaItemID.ice_bomb = 453;
VanillaItemID.arrow = 262;
VanillaItemID.stone_sword = 272;
VanillaItemID.diamond_helmet = 310;
VanillaItemID.iron_shovel = 256;
VanillaItemID.diamond_pickaxe = 278;
VanillaItemID.leather_chestplate = 299;
VanillaItemID.salmon = 460;
VanillaItemID.splash_potion = 438;
VanillaItemID.written_book = 387;
VanillaItemID.golden_shovel = 284;
VanillaItemID.golden_helmet = 314;
VanillaItemID.diamond_boots = 313;
VanillaItemID.golden_boots = 317;
VanillaItemID.prismarine_shard = 409;
VanillaItemID.chorus_fruit = 432;
VanillaItemID.chorus_fruit_popped = 433;
VanillaItemID.iron_sword = 267;
VanillaItemID.lingering_potion = 441;
VanillaItemID.command_block_minecart = 443;
VanillaItemID.elytra = 444;
VanillaItemID.fish = 349;
VanillaItemID.shulker_shell = 445;
VanillaItemID.iron_nugget = 452;
VanillaItemID.nautilus_shell = 465;
VanillaItemID.darkoak_sign = 476;
VanillaItemID.heart_of_the_sea = 467;
VanillaItemID.turtle_shell_piece = 468;
VanillaItemID.turtle_helmet = 469;
VanillaItemID.phantom_membrane = 470;
VanillaItemID.crossbow = 471;
VanillaItemID.birch_sign = 473;
VanillaItemID.fireworks = 401;
VanillaItemID.acacia_sign = 475;
VanillaItemID.wheat_seeds = 295;
VanillaItemID.banner_pattern = 434;
VanillaItemID.compound = 499;
VanillaItemID.bleach = 451;
VanillaItemID.balloon = 448;
VanillaItemID.medicine = 447;
VanillaItemID.name_tag = 421;
VanillaItemID.sparkler = 442;
VanillaItemID.golden_pickaxe = 285;
VanillaItemID.glow_stick = 166;
VanillaItemID.egg = 344;
VanillaItemID.fermented_spider_eye = 376;
VanillaItemID.real_double_stone_slab2 = 181;
VanillaItemID.compass = 345;
VanillaItemID.real_double_stone_slab3 = -167;
VanillaItemID.real_double_stone_slab4 = -168;
VanillaItemID.horsearmorgold = 418;
VanillaItemID.spruce_sign = 472;
VanillaItemID.concrete_powder = 237;
VanillaItemID.horsearmordiamond = 419;
VanillaItemID.tnt_minecart = 407;
VanillaItemID.glowstone_dust = 348;
VanillaItemID.leather_helmet = 298;
VanillaItemID.pumpkin_pie = 400;
VanillaItemID.chainmail_leggings = 304;
VanillaItemID.rabbit_stew = 413;
VanillaItemID.chainmail_chestplate = 303;
VanillaItemID.blaze_rod = 369;
VanillaItemID.diamond_shovel = 277;
VanillaItemID.brewingstandblock = 117;
VanillaItemID.coal = 263;
VanillaItemID.spider_eye = 375;
VanillaItemID.golden_axe = 286;
VanillaItemID.real_double_stone_slab = 43;

var VanillaBlockID = {};
VanillaBlockID.element_117 = -128;
VanillaBlockID.element_115 = -126;
VanillaBlockID.element_114 = -125;
VanillaBlockID.element_113 = -124;
VanillaBlockID.element_111 = -122;
VanillaBlockID.element_110 = -121;
VanillaBlockID.element_116 = -127;
VanillaBlockID.element_109 = -120;
VanillaBlockID.element_106 = -117;
VanillaBlockID.element_105 = -116;
VanillaBlockID.element_101 = -112;
VanillaBlockID.element_103 = -114;
VanillaBlockID.element_99 = -110;
VanillaBlockID.element_97 = -108;
VanillaBlockID.tallgrass = 31;
VanillaBlockID.beacon = 138;
VanillaBlockID.element_79 = -90;
VanillaBlockID.nether_wart = 372;
VanillaBlockID.element_7 = -18;
VanillaBlockID.barrel = -203;
VanillaBlockID.element_57 = -68;
VanillaBlockID.element_55 = -66;
VanillaBlockID.element_102 = -113;
VanillaBlockID.element_10 = -21;
VanillaBlockID.skull = 397;
VanillaBlockID.brown_mushroom_block = 99;
VanillaBlockID.element_27 = -38;
VanillaBlockID.cake = 354;
VanillaBlockID.blast_furnace = -196;
VanillaBlockID.element_25 = -36;
VanillaBlockID.element_21 = -32;
VanillaBlockID.element_100 = -111;
VanillaBlockID.element_69 = -80;
VanillaBlockID.iron_door = 330;
VanillaBlockID.element_51 = -62;
VanillaBlockID.sapling = 6;
VanillaBlockID.element_108 = -119;
VanillaBlockID.wooden_door = 324;
VanillaBlockID.element_84 = -95;
VanillaBlockID.element_12 = -23;
VanillaBlockID.element_76 = -87;
VanillaBlockID.element_16 = -27;
VanillaBlockID.element_40 = -51;
VanillaBlockID.jungle_door = 429;
VanillaBlockID.element_19 = -30;
VanillaBlockID.carpet = 171;
VanillaBlockID.spruce_door = 427;
VanillaBlockID.colored_torch_bp = 204;
VanillaBlockID.element_90 = -101;
VanillaBlockID.cauldron = 380;
VanillaBlockID.element_78 = -89;
VanillaBlockID.element_50 = -61;
VanillaBlockID.element_74 = -85;
VanillaBlockID.element_81 = -92;
VanillaBlockID.coral_fan = -133;
VanillaBlockID.element_95 = -106;
VanillaBlockID.element_73 = -84;
VanillaBlockID.element_87 = -98;
VanillaBlockID.element_60 = -71;
VanillaBlockID.element_67 = -78;
VanillaBlockID.brewing_stand = 379;
VanillaBlockID.double_plant = 175;
VanillaBlockID.hopper = 410;
VanillaBlockID.element_20 = -31;
VanillaBlockID.element_32 = -43;
VanillaBlockID.piston = 33;
VanillaBlockID.element_118 = -129;
VanillaBlockID.element_53 = -64;
VanillaBlockID.sand = 12;
VanillaBlockID.dark_oak_door = 431;
VanillaBlockID.element_49 = -60;
VanillaBlockID.flower_pot = 390;
VanillaBlockID.log = 17;
VanillaBlockID.element_24 = -35;
VanillaBlockID.fletching_table = -201;
VanillaBlockID.wheat = 296;
VanillaBlockID.planks = 5;
VanillaBlockID.element_66 = -77;
VanillaBlockID.element_2 = -13;
VanillaBlockID.element_68 = -79;
VanillaBlockID.composter = -213;
VanillaBlockID.element_70 = -81;
VanillaBlockID.turtle_egg = -159;
VanillaBlockID.sandstone = 24;
VanillaBlockID.smithing_table = -202;
VanillaBlockID.acacia_door = 430;
VanillaBlockID.element_88 = -99;
VanillaBlockID.bell = -206;
VanillaBlockID.element_89 = -100;
VanillaBlockID.leaves2 = 161;
VanillaBlockID.fence = 85;
VanillaBlockID.element_112 = -123;
VanillaBlockID.element_64 = -75;
VanillaBlockID.element_34 = -45;
VanillaBlockID.element_30 = -41;
VanillaBlockID.element_98 = -109;
VanillaBlockID.element_44 = -55;
VanillaBlockID.element_45 = -56;
VanillaBlockID.undyed_shulker_box = 205;
VanillaBlockID.anvil = 145;
VanillaBlockID.colored_torch_rg = 202;
VanillaBlockID.element_58 = -69;
VanillaBlockID.element_11 = -22;
VanillaBlockID.element_15 = -26;
VanillaBlockID.element_1 = -12;
VanillaBlockID.dirt = 3;
VanillaBlockID.campfire = 720;
VanillaBlockID.element_31 = -42;
VanillaBlockID.wool = 35;
VanillaBlockID.stonebrick = 98;
VanillaBlockID.coral_block = -132;
VanillaBlockID.double_stone_slab = 44;
VanillaBlockID.element_38 = -49;
VanillaBlockID.element_42 = -53;
VanillaBlockID.stained_hardened_clay = 159;
VanillaBlockID.double_stone_slab2 = 182;
VanillaBlockID.element_77 = -88;
VanillaBlockID.element_104 = -115;
VanillaBlockID.double_stone_slab4 = -166;
VanillaBlockID.element_13 = -24;
VanillaBlockID.leaves = 18;
VanillaBlockID.element_5 = -16;
VanillaBlockID.red_sandstone = 179;
VanillaBlockID.monster_egg = 97;
VanillaBlockID.quartz_block = 155;
VanillaBlockID.lantern = -208;
VanillaBlockID.tnt = 46;
VanillaBlockID.beetroot = 457;
VanillaBlockID.sea_pickle = -156;
VanillaBlockID.yellow_flower = 37;
VanillaBlockID.red_flower = 38;
VanillaBlockID.waterlily = 111;
VanillaBlockID.sponge = 19;
VanillaBlockID.grindstone = -195;
VanillaBlockID.snow_layer = 78;
VanillaBlockID.element_17 = -28;
VanillaBlockID.element_28 = -39;
VanillaBlockID.purpur_block = 201;
VanillaBlockID.cobblestone_wall = 139;
VanillaBlockID.coral = -131;
VanillaBlockID.seagrass = -130;
VanillaBlockID.red_mushroom_block = 100;
VanillaBlockID.element_61 = -72;
VanillaBlockID.log2 = 162;
VanillaBlockID.element_26 = -37;
VanillaBlockID.end_portal_frame = 120;
VanillaBlockID.element_43 = -54;
VanillaBlockID.conduit = -157;
VanillaBlockID.prismarine = 168;
VanillaBlockID.wooden_slab = 158;
VanillaBlockID.sealantern = 169;
VanillaBlockID.concrete = 236;
VanillaBlockID.element_72 = -83;
VanillaBlockID.magma = 213;
VanillaBlockID.stained_glass = 241;
VanillaBlockID.shulker_box = 218;
VanillaBlockID.element_18 = -29;
VanillaBlockID.sticky_piston = 29;
VanillaBlockID.stained_glass_pane = 160;
VanillaBlockID.bamboo = -163;
VanillaBlockID.scaffolding = -165;
VanillaBlockID.smoker = -198;
VanillaBlockID.loom = -204;
VanillaBlockID.element_47 = -58;
VanillaBlockID.cartography_table = -200;
VanillaBlockID.wood = -212;
VanillaBlockID.element_71 = -82;
VanillaBlockID.element_107 = -118;
VanillaBlockID.frame = 389;
VanillaBlockID.chemistry_table = 238;
VanillaBlockID.kelp = 335;
VanillaBlockID.element_75 = -86;
VanillaBlockID.hard_stained_glass = 254;
VanillaBlockID.hard_stained_glass_pane = 191;
VanillaBlockID.element_4 = -15;
VanillaBlockID.element_3 = -14;
VanillaBlockID.element_6 = -17;
VanillaBlockID.stone = 1;
VanillaBlockID.element_8 = -19;
VanillaBlockID.element_9 = -20;
VanillaBlockID.element_14 = -25;
VanillaBlockID.element_22 = -33;
VanillaBlockID.element_23 = -34;
VanillaBlockID.element_29 = -40;
VanillaBlockID.air = -158;
VanillaBlockID.double_stone_slab3 = -162;
VanillaBlockID.element_33 = -44;
VanillaBlockID.element_35 = -46;
VanillaBlockID.element_37 = -48;
VanillaBlockID.element_39 = -50;
VanillaBlockID.element_41 = -52;
VanillaBlockID.bed = 355;
VanillaBlockID.birch_door = 428;
VanillaBlockID.element_46 = -57;
VanillaBlockID.element_48 = -59;
VanillaBlockID.coral_fan_dead = -134;
VanillaBlockID.element_52 = -63;
VanillaBlockID.element_54 = -65;
VanillaBlockID.element_0 = 36;
VanillaBlockID.element_56 = -67;
VanillaBlockID.element_59 = -70;
VanillaBlockID.element_62 = -73;
VanillaBlockID.element_63 = -74;
VanillaBlockID.element_80 = -91;
VanillaBlockID.reeds = 338;
VanillaBlockID.element_82 = -93;
VanillaBlockID.element_65 = -76;
VanillaBlockID.element_83 = -94;
VanillaBlockID.element_85 = -96;
VanillaBlockID.element_86 = -97;
VanillaBlockID.element_91 = -102;
VanillaBlockID.element_92 = -103;
VanillaBlockID.element_36 = -47;
VanillaBlockID.element_93 = -104;
VanillaBlockID.element_94 = -105;
VanillaBlockID.element_96 = -107;
VanillaBlockID.lit_blast_furnace = -214;
VanillaBlockID.jigsaw = -211;
VanillaBlockID.sweet_berry_bush = -207;
VanillaBlockID.lit_smoker = -199;
VanillaBlockID.lectern = -194;
VanillaBlockID.darkoak_wall_sign = -193;
VanillaBlockID.darkoak_standing_sign = -192;
VanillaBlockID.acacia_wall_sign = -191;
VanillaBlockID.acacia_standing_sign = -190;
VanillaBlockID.jungle_wall_sign = -189;
VanillaBlockID.birch_wall_sign = -187;
VanillaBlockID.birch_standing_sign = -186;
VanillaBlockID.spruce_wall_sign = -182;
VanillaBlockID.red_nether_brick_stairs = -184;
VanillaBlockID.smooth_stone = -183;
VanillaBlockID.spruce_standing_sign = -181;
VanillaBlockID.normal_stone_stairs = -180;
VanillaBlockID.mossy_cobblestone_stairs = -179;
VanillaBlockID.end_brick_stairs = -178;
VanillaBlockID.polished_diorite_stairs = -173;
VanillaBlockID.andesite_stairs = -171;
VanillaBlockID.diorite_stairs = -170;
VanillaBlockID.chorus_flower = 200;
VanillaBlockID.grass_path = 198;
VanillaBlockID.redstone_ore = 73;
VanillaBlockID.dark_oak_trapdoor = -147;
VanillaBlockID.chain_command_block = 189;
VanillaBlockID.acacia_fence_gate = 187;
VanillaBlockID.standing_banner = 176;
VanillaBlockID.jungle_trapdoor = -148;
VanillaBlockID.powered_repeater = 94;
VanillaBlockID.daylight_detector_inverted = 178;
VanillaBlockID.slime = 165;
VanillaBlockID.melon_stem = 105;
VanillaBlockID.netherrack = 87;
VanillaBlockID.double_wooden_slab = 157;
VanillaBlockID.quartz_stairs = 156;
VanillaBlockID.emerald_ore = 129;
VanillaBlockID.ender_chest = 130;
VanillaBlockID.smooth_red_sandstone_stairs = -176;
VanillaBlockID.stripped_oak_log = -10;
VanillaBlockID.powered_comparator = 150;
VanillaBlockID.quartz_ore = 153;
VanillaBlockID.light_weighted_pressure_plate = 147;
VanillaBlockID.smooth_quartz_stairs = -185;
VanillaBlockID.info_update2 = 249;
VanillaBlockID.carrots = 141;
VanillaBlockID.command_block = 137;
VanillaBlockID.jungle_stairs = 136;
VanillaBlockID.packed_ice = 174;
VanillaBlockID.birch_stairs = 135;
VanillaBlockID.tripwire = 132;
VanillaBlockID.gold_ore = 14;
VanillaBlockID.spruce_stairs = 134;
VanillaBlockID.dark_oak_stairs = 164;
VanillaBlockID.redstone_lamp = 123;
VanillaBlockID.purple_glazed_terracotta = 219;
VanillaBlockID.enchanting_table = 116;
VanillaBlockID.dragon_egg = 122;
VanillaBlockID.wall_banner = 177;
VanillaBlockID.nether_brick_fence = 113;
VanillaBlockID.snow = 80;
VanillaBlockID.mycelium = 110;
VanillaBlockID.fence_gate = 107;
VanillaBlockID.iron_trapdoor = 167;
VanillaBlockID.pumpkin_stem = 104;
VanillaBlockID.melon_block = 103;
VanillaBlockID.redstone_block = 152;
VanillaBlockID.iron_bars = 101;
VanillaBlockID.diamond_ore = 56;
VanillaBlockID.chorus_plant = 240;
VanillaBlockID.hardened_clay = 172;
VanillaBlockID.invisiblebedrock = 95;
VanillaBlockID.magenta_glazed_terracotta = 222;
VanillaBlockID.activator_rail = 126;
VanillaBlockID.torch = 50;
VanillaBlockID.stripped_jungle_log = -7;
VanillaBlockID.acacia_button = -140;
VanillaBlockID.deadbush = 32;
VanillaBlockID.repeating_command_block = 188;
VanillaBlockID.dropper = 125;
VanillaBlockID.heavy_weighted_pressure_plate = 148;
VanillaBlockID.iron_ore = 15;
VanillaBlockID.barrier = -161;
VanillaBlockID.glass_pane = 102;
VanillaBlockID.jukebox = 84;
VanillaBlockID.stripped_birch_log = -6;
VanillaBlockID.brown_mushroom = 39;
VanillaBlockID.brick_block = 45;
VanillaBlockID.wooden_pressure_plate = 72;
VanillaBlockID.cocoa = 127;
VanillaBlockID.redstone_torch = 76;
VanillaBlockID.nether_brick = 112;
VanillaBlockID.hay_block = 170;
VanillaBlockID.stonecutter = 245;
VanillaBlockID.potatoes = 142;
VanillaBlockID.noteblock = 25;
VanillaBlockID.mossy_stone_brick_stairs = -175;
VanillaBlockID.green_glazed_terracotta = 233;
VanillaBlockID.wall_sign = 68;
VanillaBlockID.vine = 106;
VanillaBlockID.portal = 90;
VanillaBlockID.unlit_redstone_torch = 75;
VanillaBlockID.dispenser = 23;
VanillaBlockID.water = 9;
VanillaBlockID.grass = 2;
VanillaBlockID.smooth_sandstone_stairs = -177;
VanillaBlockID.detector_rail = 28;
VanillaBlockID.end_stone = 121;
VanillaBlockID.spruce_trapdoor = -149;
VanillaBlockID.oak_stairs = 53;
VanillaBlockID.red_sandstone_stairs = 180;
VanillaBlockID.emerald_block = 133;
VanillaBlockID.lapis_ore = 21;
VanillaBlockID.stone_pressure_plate = 70;
VanillaBlockID.red_mushroom = 40;
VanillaBlockID.bookshelf = 47;
VanillaBlockID.crafting_table = 58;
VanillaBlockID.chest = 54;
VanillaBlockID.yellow_glazed_terracotta = 224;
VanillaBlockID.lava = 11;
VanillaBlockID.obsidian = 49;
VanillaBlockID.lit_furnace = 62;
VanillaBlockID.lit_redstone_lamp = 124;
VanillaBlockID.coal_ore = 16;
VanillaBlockID.gravel = 13;
VanillaBlockID.gold_block = 41;
VanillaBlockID.acacia_stairs = 163;
VanillaBlockID.iron_block = 42;
VanillaBlockID.acacia_pressure_plate = -150;
VanillaBlockID.glass = 20;
VanillaBlockID.golden_rail = 27;
VanillaBlockID.lit_pumpkin = 91;
VanillaBlockID.stone_brick_stairs = 109;
VanillaBlockID.redstone_wire = 55;
VanillaBlockID.rail = 66;
VanillaBlockID.mob_spawner = 52;
VanillaBlockID.dark_oak_pressure_plate = -152;
VanillaBlockID.diamond_block = 57;
VanillaBlockID.furnace = 61;
VanillaBlockID.standing_sign = 63;
VanillaBlockID.stone_stairs = 67;
VanillaBlockID.wooden_button = 143;
VanillaBlockID.pistonarmcollision = 34;
VanillaBlockID.coal_block = 173;
VanillaBlockID.ice = 79;
VanillaBlockID.soul_sand = 88;
VanillaBlockID.jungle_standing_sign = -188;
VanillaBlockID.brick_stairs = 108;
VanillaBlockID.lapis_block = 22;
VanillaBlockID.glowstone = 89;
VanillaBlockID.birch_trapdoor = -146;
VanillaBlockID.cactus = 81;
VanillaBlockID.gray_glazed_terracotta = 227;
VanillaBlockID.clay = 82;
VanillaBlockID.unpowered_comparator = 149;
VanillaBlockID.bedrock = 7;
VanillaBlockID.observer = 251;
VanillaBlockID.daylight_detector = 151;
VanillaBlockID.underwater_torch = 239;
VanillaBlockID.pumpkin = 86;
VanillaBlockID.ladder = 65;
VanillaBlockID.coral_fan_hang3 = -137;
VanillaBlockID.cyan_glazed_terracotta = 229;
VanillaBlockID.unpowered_repeater = 93;
VanillaBlockID.cobblestone = 4;
VanillaBlockID.red_nether_brick = 215;
VanillaBlockID.purpur_stairs = 203;
VanillaBlockID.trapdoor = 96;
VanillaBlockID.stone_button = 77;
VanillaBlockID.frosted_ice = 207;
VanillaBlockID.end_rod = 208;
VanillaBlockID.jungle_fence_gate = 185;
VanillaBlockID.end_gateway = 209;
VanillaBlockID.bone_block = 216;
VanillaBlockID.white_glazed_terracotta = 220;
VanillaBlockID.orange_glazed_terracotta = 221;
VanillaBlockID.flowing_water = 8;
VanillaBlockID.flowing_lava = 10;
VanillaBlockID.light_blue_glazed_terracotta = 223;
VanillaBlockID.carved_pumpkin = -155;
VanillaBlockID.lime_glazed_terracotta = 225;
VanillaBlockID.pink_glazed_terracotta = 226;
VanillaBlockID.blue_glazed_terracotta = 231;
VanillaBlockID.brown_glazed_terracotta = 232;
VanillaBlockID.red_glazed_terracotta = 234;
VanillaBlockID.web = 30;
VanillaBlockID.lever = 69;
VanillaBlockID.black_glazed_terracotta = 235;
VanillaBlockID.sandstone_stairs = 128;
VanillaBlockID.podzol = 243;
VanillaBlockID.stonecutter_block = -197;
VanillaBlockID.glowingobsidian = 246;
VanillaBlockID.dark_oak_fence_gate = 186;
VanillaBlockID.netherreactor = 247;
VanillaBlockID.info_update = 248;
VanillaBlockID.movingblock = 250;
VanillaBlockID.nether_brick_stairs = 114;
VanillaBlockID.structure_block = 252;
VanillaBlockID.reserved6 = 255;
VanillaBlockID.prismarine_stairs = -2;
VanillaBlockID.acacia_trapdoor = -145;
VanillaBlockID.dark_prismarine_stairs = -3;
VanillaBlockID.prismarine_bricks_stairs = -4;
VanillaBlockID.stripped_spruce_log = -5;
VanillaBlockID.stripped_dark_oak_log = -9;
VanillaBlockID.polished_granite_stairs = -172;
VanillaBlockID.tripwire_hook = 131;
VanillaBlockID.blue_ice = -11;
VanillaBlockID.fire = 51;
VanillaBlockID.dark_oak_button = -142;
VanillaBlockID.birch_button = -141;
VanillaBlockID.hard_glass_pane = 190;
VanillaBlockID.chemical_heat = 192;
VanillaBlockID.trapped_chest = 146;
VanillaBlockID.polished_andesite_stairs = -174;
VanillaBlockID.lava_cauldron = -210;
VanillaBlockID.hard_glass = 253;
VanillaBlockID.lit_redstone_ore = 74;
VanillaBlockID.bamboo_sapling = -164;
VanillaBlockID.farmland = 60;
VanillaBlockID.granite_stairs = -169;
VanillaBlockID.spruce_fence_gate = 183;
VanillaBlockID.nether_wart_block = 214;
VanillaBlockID.stripped_acacia_log = -8;
VanillaBlockID.silver_glazed_terracotta = 228;
VanillaBlockID.coral_fan_hang = -135;
VanillaBlockID.coral_fan_hang2 = -136;
VanillaBlockID.dried_kelp_block = -139;
VanillaBlockID.mossy_cobblestone = 48;
VanillaBlockID.birch_fence_gate = 184;
VanillaBlockID.jungle_button = -143;
VanillaBlockID.end_bricks = 206;
VanillaBlockID.spruce_button = -144;
VanillaBlockID.end_portal = 119;
VanillaBlockID.birch_pressure_plate = -151;
VanillaBlockID.jungle_pressure_plate = -153;
VanillaBlockID.spruce_pressure_plate = -154;
VanillaBlockID.bubble_column = -160;

var VanillaTileID = {};
VanillaTileID.lit_blast_furnace = 469;
VanillaTileID.wood = 467;
VanillaTileID.jigsaw = 466;
VanillaTileID.sweet_berry_bush = 462;
VanillaTileID.barrel = 458;
VanillaTileID.smithing_table = 457;
VanillaTileID.cartography_table = 455;
VanillaTileID.lit_smoker = 454;
VanillaTileID.smoker = 453;
VanillaTileID.grindstone = 450;
VanillaTileID.lectern = 449;
VanillaTileID.darkoak_wall_sign = 448;
VanillaTileID.darkoak_standing_sign = 447;
VanillaTileID.acacia_wall_sign = 446;
VanillaTileID.acacia_standing_sign = 445;
VanillaTileID.jungle_wall_sign = 444;
VanillaTileID.birch_wall_sign = 442;
VanillaTileID.birch_standing_sign = 441;
VanillaTileID.spruce_wall_sign = 437;
VanillaTileID.red_nether_brick_stairs = 439;
VanillaTileID.smooth_stone = 438;
VanillaTileID.spruce_standing_sign = 436;
VanillaTileID.normal_stone_stairs = 435;
VanillaTileID.mossy_cobblestone_stairs = 434;
VanillaTileID.bell = 461;
VanillaTileID.end_brick_stairs = 433;
VanillaTileID.polished_diorite_stairs = 428;
VanillaTileID.andesite_stairs = 426;
VanillaTileID.diorite_stairs = 425;
VanillaTileID.stone_slab4 = 421;
VanillaTileID.stone_slab3 = 417;
VanillaTileID.undyed_shulker_box = 205;
VanillaTileID.chorus_flower = 200;
VanillaTileID.element_70 = 336;
VanillaTileID.grass_path = 198;
VanillaTileID.acacia_door = 196;
VanillaTileID.dark_oak_door = 197;
VanillaTileID.redstone_ore = 73;
VanillaTileID.jungle_door = 195;
VanillaTileID.dark_oak_trapdoor = 402;
VanillaTileID.chain_command_block = 189;
VanillaTileID.acacia_fence_gate = 187;
VanillaTileID.standing_banner = 176;
VanillaTileID.jungle_trapdoor = 403;
VanillaTileID.element_88 = 354;
VanillaTileID.stone_slab2 = 182;
VanillaTileID.element_23 = 289;
VanillaTileID.red_sandstone = 179;
VanillaTileID.powered_repeater = 94;
VanillaTileID.element_73 = 339;
VanillaTileID.daylight_detector_inverted = 178;
VanillaTileID.element_78 = 344;
VanillaTileID.double_plant = 175;
VanillaTileID.slime = 165;
VanillaTileID.cobblestone_wall = 139;
VanillaTileID.log2 = 162;
VanillaTileID.element_26 = 292;
VanillaTileID.stained_hardened_clay = 159;
VanillaTileID.double_stone_slab2 = 181;
VanillaTileID.melon_stem = 105;
VanillaTileID.netherrack = 87;
VanillaTileID.double_wooden_slab = 157;
VanillaTileID.quartz_stairs = 156;
VanillaTileID.emerald_ore = 129;
VanillaTileID.ender_chest = 130;
VanillaTileID.smooth_red_sandstone_stairs = 431;
VanillaTileID.stripped_oak_log = 265;
VanillaTileID.element_44 = 310;
VanillaTileID.powered_comparator = 150;
VanillaTileID.blast_furnace = 451;
VanillaTileID.quartz_ore = 153;
VanillaTileID.light_weighted_pressure_plate = 147;
VanillaTileID.smooth_quartz_stairs = 440;
VanillaTileID.skull = 144;
VanillaTileID.brown_mushroom_block = 99;
VanillaTileID.bamboo = 418;
VanillaTileID.stained_glass_pane = 160;
VanillaTileID.info_update2 = 249;
VanillaTileID.carrots = 141;
VanillaTileID.beacon = 138;
VanillaTileID.monster_egg = 97;
VanillaTileID.command_block = 137;
VanillaTileID.log = 17;
VanillaTileID.composter = 468;
VanillaTileID.jungle_stairs = 136;
VanillaTileID.packed_ice = 174;
VanillaTileID.birch_stairs = 135;
VanillaTileID.tripwire = 132;
VanillaTileID.gold_ore = 14;
VanillaTileID.element_45 = 311;
VanillaTileID.flower_pot = 140;
VanillaTileID.spruce_stairs = 134;
VanillaTileID.dark_oak_stairs = 164;
VanillaTileID.anvil = 145;
VanillaTileID.redstone_lamp = 123;
VanillaTileID.purple_glazed_terracotta = 219;
VanillaTileID.concrete = 236;
VanillaTileID.element_72 = 338;
VanillaTileID.end_portal_frame = 120;
VanillaTileID.element_43 = 309;
VanillaTileID.cauldron = 118;
VanillaTileID.brewing_stand = 117;
VanillaTileID.enchanting_table = 116;
VanillaTileID.spruce_door = 193;
VanillaTileID.dragon_egg = 122;
VanillaTileID.nether_wart = 115;
VanillaTileID.element_7 = 273;
VanillaTileID.wall_banner = 177;
VanillaTileID.nether_brick_fence = 113;
VanillaTileID.snow = 80;
VanillaTileID.element_67 = 333;
VanillaTileID.waterlily = 111;
VanillaTileID.lantern = 463;
VanillaTileID.quartz_block = 155;
VanillaTileID.stone_slab = 44;
VanillaTileID.mycelium = 110;
VanillaTileID.conduit = 412;
VanillaTileID.fence_gate = 107;
VanillaTileID.iron_trapdoor = 167;
VanillaTileID.element_95 = 361;
VanillaTileID.pumpkin_stem = 104;
VanillaTileID.element_94 = 360;
VanillaTileID.melon_block = 103;
VanillaTileID.element_57 = 323;
VanillaTileID.red_mushroom_block = 100;
VanillaTileID.element_61 = 327;
VanillaTileID.stonebrick = 98;
VanillaTileID.redstone_block = 152;
VanillaTileID.iron_bars = 101;
VanillaTileID.diamond_ore = 56;
VanillaTileID.coral_block = 387;
VanillaTileID.red_flower = 38;
VanillaTileID.scaffolding = 420;
VanillaTileID.chorus_plant = 240;
VanillaTileID.wool = 35;
VanillaTileID.hardened_clay = 172;
VanillaTileID.invisiblebedrock = 95;
VanillaTileID.magenta_glazed_terracotta = 222;
VanillaTileID.activator_rail = 126;
VanillaTileID.torch = 50;
VanillaTileID.stripped_jungle_log = 262;
VanillaTileID.element_21 = 287;
VanillaTileID.acacia_button = 395;
VanillaTileID.deadbush = 32;
VanillaTileID.purpur_block = 201;
VanillaTileID.repeating_command_block = 188;
VanillaTileID.dropper = 125;
VanillaTileID.prismarine = 168;
VanillaTileID.heavy_weighted_pressure_plate = 148;
VanillaTileID.sandstone = 24;
VanillaTileID.element_11 = 277;
VanillaTileID.iron_ore = 15;
VanillaTileID.iron_door = 71;
VanillaTileID.barrier = 416;
VanillaTileID.element_51 = 317;
VanillaTileID.glass_pane = 102;
VanillaTileID.jukebox = 84;
VanillaTileID.element_1 = 267;
VanillaTileID.dirt = 3;
VanillaTileID.stripped_birch_log = 261;
VanillaTileID.brown_mushroom = 39;
VanillaTileID.element_63 = 329;
VanillaTileID.loom = 459;
VanillaTileID.brick_block = 45;
VanillaTileID.wooden_pressure_plate = 72;
VanillaTileID.cocoa = 127;
VanillaTileID.redstone_torch = 76;
VanillaTileID.nether_brick = 112;
VanillaTileID.hay_block = 170;
VanillaTileID.stonecutter = 245;
VanillaTileID.potatoes = 142;
VanillaTileID.noteblock = 25;
VanillaTileID.mossy_stone_brick_stairs = 430;
VanillaTileID.green_glazed_terracotta = 233;
VanillaTileID.tnt = 46;
VanillaTileID.sealantern = 169;
VanillaTileID.wooden_slab = 158;
VanillaTileID.sand = 12;
VanillaTileID.wall_sign = 68;
VanillaTileID.vine = 106;
VanillaTileID.portal = 90;
VanillaTileID.sponge = 19;
VanillaTileID.unlit_redstone_torch = 75;
VanillaTileID.carpet = 171;
VanillaTileID.dispenser = 23;
VanillaTileID.water = 9;
VanillaTileID.element_29 = 295;
VanillaTileID.grass = 2;
VanillaTileID.element_101 = 367;
VanillaTileID.smooth_sandstone_stairs = 432;
VanillaTileID.element_20 = 286;
VanillaTileID.element_31 = 297;
VanillaTileID.sapling = 6;
VanillaTileID.detector_rail = 28;
VanillaTileID.end_stone = 121;
VanillaTileID.element_92 = 358;
VanillaTileID.spruce_trapdoor = 404;
VanillaTileID.sticky_piston = 29;
VanillaTileID.oak_stairs = 53;
VanillaTileID.red_sandstone_stairs = 180;
VanillaTileID.element_75 = 341;
VanillaTileID.emerald_block = 133;
VanillaTileID.kelp = 393;
VanillaTileID.lapis_ore = 21;
VanillaTileID.element_66 = 332;
VanillaTileID.stone_pressure_plate = 70;
VanillaTileID.red_mushroom = 40;
VanillaTileID.element_108 = 374;
VanillaTileID.wooden_door = 64;
VanillaTileID.bookshelf = 47;
VanillaTileID.element_84 = 350;
VanillaTileID.crafting_table = 58;
VanillaTileID.chest = 54;
VanillaTileID.yellow_glazed_terracotta = 224;
VanillaTileID.lava = 11;
VanillaTileID.obsidian = 49;
VanillaTileID.stained_glass = 241;
VanillaTileID.lit_furnace = 62;
VanillaTileID.lit_redstone_lamp = 124;
VanillaTileID.coal_ore = 16;
VanillaTileID.gravel = 13;
VanillaTileID.element_58 = 324;
VanillaTileID.colored_torch_rg = 202;
VanillaTileID.colored_torch_bp = 204;
VanillaTileID.gold_block = 41;
VanillaTileID.acacia_stairs = 163;
VanillaTileID.piston = 33;
VanillaTileID.iron_block = 42;
VanillaTileID.acacia_pressure_plate = 405;
VanillaTileID.glass = 20;
VanillaTileID.golden_rail = 27;
VanillaTileID.lit_pumpkin = 91;
VanillaTileID.stone_brick_stairs = 109;
VanillaTileID.tallgrass = 31;
VanillaTileID.redstone_wire = 55;
VanillaTileID.rail = 66;
VanillaTileID.cake = 92;
VanillaTileID.mob_spawner = 52;
VanillaTileID.dark_oak_pressure_plate = 407;
VanillaTileID.diamond_block = 57;
VanillaTileID.element_71 = 337;
VanillaTileID.wheat = 59;
VanillaTileID.element_111 = 377;
VanillaTileID.furnace = 61;
VanillaTileID.standing_sign = 63;
VanillaTileID.stone_stairs = 67;
VanillaTileID.wooden_button = 143;
VanillaTileID.element_105 = 371;
VanillaTileID.pistonarmcollision = 34;
VanillaTileID.double_stone_slab = 43;
VanillaTileID.element_38 = 304;
VanillaTileID.element_42 = 308;
VanillaTileID.coal_block = 173;
VanillaTileID.element_41 = 307;
VanillaTileID.ice = 79;
VanillaTileID.soul_sand = 88;
VanillaTileID.jungle_standing_sign = 443;
VanillaTileID.brick_stairs = 108;
VanillaTileID.element_96 = 362;
VanillaTileID.lapis_block = 22;
VanillaTileID.shulker_box = 218;
VanillaTileID.element_18 = 284;
VanillaTileID.snow_layer = 78;
VanillaTileID.glowstone = 89;
VanillaTileID.element_17 = 283;
VanillaTileID.leaves2 = 161;
VanillaTileID.birch_trapdoor = 401;
VanillaTileID.cactus = 81;
VanillaTileID.gray_glazed_terracotta = 227;
VanillaTileID.clay = 82;
VanillaTileID.element_48 = 314;
VanillaTileID.unpowered_comparator = 149;
VanillaTileID.double_stone_slab3 = 422;
VanillaTileID.air = 0;
VanillaTileID.element_33 = 299;
VanillaTileID.bedrock = 7;
VanillaTileID.element_5 = 271;
VanillaTileID.observer = 251;
VanillaTileID.daylight_detector = 151;
VanillaTileID.underwater_torch = 239;
VanillaTileID.pumpkin = 86;
VanillaTileID.ladder = 65;
VanillaTileID.fence = 85;
VanillaTileID.element_112 = 378;
VanillaTileID.element_64 = 330;
VanillaTileID.coral_fan_hang3 = 392;
VanillaTileID.birch_door = 194;
VanillaTileID.element_46 = 312;
VanillaTileID.bed = 26;
VanillaTileID.cyan_glazed_terracotta = 229;
VanillaTileID.unpowered_repeater = 93;
VanillaTileID.cobblestone = 4;
VanillaTileID.red_nether_brick = 215;
VanillaTileID.purpur_stairs = 203;
VanillaTileID.trapdoor = 96;
VanillaTileID.coral_fan = 388;
VanillaTileID.stone_button = 77;
VanillaTileID.frosted_ice = 207;
VanillaTileID.end_rod = 208;
VanillaTileID.jungle_fence_gate = 185;
VanillaTileID.end_gateway = 209;
VanillaTileID.magma = 213;
VanillaTileID.coral = 386;
VanillaTileID.bone_block = 216;
VanillaTileID.white_glazed_terracotta = 220;
VanillaTileID.element_28 = 294;
VanillaTileID.orange_glazed_terracotta = 221;
VanillaTileID.flowing_water = 8;
VanillaTileID.flowing_lava = 10;
VanillaTileID.element_14 = 280;
VanillaTileID.light_blue_glazed_terracotta = 223;
VanillaTileID.carved_pumpkin = 410;
VanillaTileID.lime_glazed_terracotta = 225;
VanillaTileID.element_2 = 268;
VanillaTileID.pink_glazed_terracotta = 226;
VanillaTileID.blue_glazed_terracotta = 231;
VanillaTileID.brown_glazed_terracotta = 232;
VanillaTileID.red_glazed_terracotta = 234;
VanillaTileID.element_15 = 281;
VanillaTileID.web = 30;
VanillaTileID.lever = 69;
VanillaTileID.black_glazed_terracotta = 235;
VanillaTileID.sandstone_stairs = 128;
VanillaTileID.concretepowder = 237;
VanillaTileID.podzol = 243;
VanillaTileID.element_90 = 356;
VanillaTileID.turtle_egg = 414;
VanillaTileID.stonecutter_block = 452;
VanillaTileID.element_79 = 345;
VanillaTileID.glowingobsidian = 246;
VanillaTileID.dark_oak_fence_gate = 186;
VanillaTileID.netherreactor = 247;
VanillaTileID.info_update = 248;
VanillaTileID.movingblock = 250;
VanillaTileID.nether_brick_stairs = 114;
VanillaTileID.structure_block = 252;
VanillaTileID.leaves = 18;
VanillaTileID.reserved6 = 255;
VanillaTileID.prismarine_stairs = 257;
VanillaTileID.acacia_trapdoor = 400;
VanillaTileID.dark_prismarine_stairs = 258;
VanillaTileID.prismarine_bricks_stairs = 259;
VanillaTileID.element_86 = 352;
VanillaTileID.element_118 = 384;
VanillaTileID.stripped_spruce_log = 260;
VanillaTileID.element_10 = 276;
VanillaTileID.stripped_dark_oak_log = 264;
VanillaTileID.polished_granite_stairs = 427;
VanillaTileID.tripwire_hook = 131;
VanillaTileID.element_53 = 319;
VanillaTileID.blue_ice = 266;
VanillaTileID.fire = 51;
VanillaTileID.campfire = 464;
VanillaTileID.dark_oak_button = 397;
VanillaTileID.birch_button = 396;
VanillaTileID.hard_stained_glass = 254;
VanillaTileID.element_83 = 349;
VanillaTileID.element_65 = 331;
VanillaTileID.element_97 = 363;
VanillaTileID.planks = 5;
VanillaTileID.hard_glass_pane = 190;
VanillaTileID.hard_stained_glass_pane = 191;
VanillaTileID.chemical_heat = 192;
VanillaTileID.element_16 = 282;
VanillaTileID.element_49 = 315;
VanillaTileID.element_3 = 269;
VanillaTileID.element_4 = 270;
VanillaTileID.trapped_chest = 146;
VanillaTileID.element_6 = 272;
VanillaTileID.stone = 1;
VanillaTileID.element_8 = 274;
VanillaTileID.element_9 = 275;
VanillaTileID.element_12 = 278;
VanillaTileID.element_76 = 342;
VanillaTileID.polished_andesite_stairs = 429;
VanillaTileID.element_13 = 279;
VanillaTileID.element_113 = 379;
VanillaTileID.element_19 = 285;
VanillaTileID.lava_cauldron = 465;
VanillaTileID.element_22 = 288;
VanillaTileID.fletching_table = 456;
VanillaTileID.element_24 = 290;
VanillaTileID.element_25 = 291;
VanillaTileID.hard_glass = 253;
VanillaTileID.element_30 = 296;
VanillaTileID.element_32 = 298;
VanillaTileID.element_34 = 300;
VanillaTileID.element_35 = 301;
VanillaTileID.element_37 = 303;
VanillaTileID.lit_redstone_ore = 74;
VanillaTileID.element_39 = 305;
VanillaTileID.element_40 = 306;
VanillaTileID.element_47 = 313;
VanillaTileID.bamboo_sapling = 419;
VanillaTileID.element_50 = 316;
VanillaTileID.farmland = 60;
VanillaTileID.element_74 = 340;
VanillaTileID.element_81 = 347;
VanillaTileID.element_54 = 320;
VanillaTileID.element_55 = 321;
VanillaTileID.element_0 = 36;
VanillaTileID.element_56 = 322;
VanillaTileID.element_59 = 325;
VanillaTileID.element_62 = 328;
VanillaTileID.element_68 = 334;
VanillaTileID.granite_stairs = 424;
VanillaTileID.spruce_fence_gate = 183;
VanillaTileID.element_77 = 343;
VanillaTileID.element_80 = 346;
VanillaTileID.reeds = 83;
VanillaTileID.element_82 = 348;
VanillaTileID.element_85 = 351;
VanillaTileID.element_60 = 326;
VanillaTileID.element_87 = 353;
VanillaTileID.element_89 = 355;
VanillaTileID.element_91 = 357;
VanillaTileID.element_36 = 302;
VanillaTileID.nether_wart_block = 214;
VanillaTileID.element_93 = 359;
VanillaTileID.element_98 = 364;
VanillaTileID.element_99 = 365;
VanillaTileID.element_103 = 369;
VanillaTileID.element_69 = 335;
VanillaTileID.element_100 = 366;
VanillaTileID.element_102 = 368;
VanillaTileID.double_stone_slab4 = 423;
VanillaTileID.element_104 = 370;
VanillaTileID.yellow_flower = 37;
VanillaTileID.beetroot = 244;
VanillaTileID.sea_pickle = 411;
VanillaTileID.element_106 = 372;
VanillaTileID.frame = 199;
VanillaTileID.chemistry_table = 238;
VanillaTileID.element_107 = 373;
VanillaTileID.element_116 = 382;
VanillaTileID.element_109 = 375;
VanillaTileID.stripped_acacia_log = 263;
VanillaTileID.element_110 = 376;
VanillaTileID.element_114 = 380;
VanillaTileID.element_115 = 381;
VanillaTileID.silver_glazed_terracotta = 228;
VanillaTileID.element_117 = 383;
VanillaTileID.element_52 = 318;
VanillaTileID.coral_fan_dead = 389;
VanillaTileID.coral_fan_hang = 390;
VanillaTileID.coral_fan_hang2 = 391;
VanillaTileID.dried_kelp_block = 394;
VanillaTileID.mossy_cobblestone = 48;
VanillaTileID.seagrass = 385;
VanillaTileID.birch_fence_gate = 184;
VanillaTileID.jungle_button = 398;
VanillaTileID.end_bricks = 206;
VanillaTileID.spruce_button = 399;
VanillaTileID.end_portal = 119;
VanillaTileID.birch_pressure_plate = 406;
VanillaTileID.hopper = 154;
VanillaTileID.jungle_pressure_plate = 408;
VanillaTileID.element_27 = 293;
VanillaTileID.spruce_pressure_plate = 409;
VanillaTileID.bubble_column = 415;
function importLib() {};
function IMPORT() {};
function IMPORT_NATIVE() {};
function WRAP_NATIVE() {};
var __packdir__ = "/storage/emulated/0/games/horizon/packs/Inner_Core/";
function getCoreAPILevel() {return 10;};
function runOnMainThread(func) {};
function getMCPEVersion() {return {"str":"1.11.4","array":[1,11,4],"main":28};};

var Debug = {};
Debug.sysTime = function() {return 1585498406986;};
Debug.addParticle = function(id, x, y, z, vx, vy, vz, data) {};
Debug.message = function(message) {};
Debug.warning = function(message) {};
Debug.error = function(message) {};
Debug.m = function() {};
Debug.bitmap = function(bitmap, title) {};

var Commands = {};

var FileTools = {};
FileTools.mntdir = "/mnt";
FileTools.root = "/storage/emulated/0/";
FileTools.moddir = "/storage/emulated/0/games/horizon/packs/Inner_Core/mods/";
FileTools.mkdir = function(dir) {};
FileTools.mkworkdirs = function() {};
FileTools.getFullPath = function(path) {return "/storage/emulated/0/sdcard";};
FileTools.isExists = function(path) {};
FileTools.WriteText = function(file, text, add) {/* java.io.FileNotFoundException: /storage/emulated/0/undefined (Is a directory) */};
FileTools.ReadText = function(file) {return null;};
FileTools.WriteImage = function(file, bitmap) {/* java.io.FileNotFoundException: /storage/emulated/0/undefined (Is a directory) */};
FileTools.ReadImage = function(file) {return null;};
FileTools.ReadTextAsset = function(name) {return null;};
FileTools.ReadImageAsset = function(name) {return null;};
FileTools.ReadBytesAsset = function(name) {return null;};
FileTools.GetListOfDirs = function(path) {return [];};
FileTools.GetListOfFiles = function(path, ext) {return [];};
FileTools.ReadKeyValueFile = function(dir, specialSeparator) {return {};};
FileTools.WriteKeyValueFile = function(dir, data, specialSeparator) {};
FileTools.ReadJSON = function(dir) {return {};};
FileTools.WriteJSON = function(dir, obj, beautify) {/* java.io.FileNotFoundException: /storage/emulated/0/undefined (Is a directory) */};

var Logger = {};

var Translation = {};

var Threading = {};
Threading.threads = [];
Threading.formatFatalErrorMessage = function(error, name, priority, formatFunc) {};
Threading.initThread = function() {};
Threading.getThread = function(name) {};
function Config() {};

var UI = {};

var UpdatableAPI = {};

var Updatable = {};

var TileEntity = {};
TileEntity.tileEntityPrototypes = {};
TileEntity.tileEntityList = [];
TileEntity.resetEngine = function() {};
TileEntity.registerPrototype = function(blockID, customPrototype) {/* Cannot read property "redstone" from undefined */};
TileEntity.getPrototype = function(blockID) {return {"remove":false,"isLoaded":false,"__initialized":false,"defaultValues":{},"blockID":1,"saverId":1390014972};};
TileEntity.isTileEntityBlock = function(blockID) {return true;};
TileEntity.createTileEntityForPrototype = function(Prototype, addToUpdate) {/* Cannot read property "defaultValues" from undefined */};
TileEntity.addTileEntity = function(x, y, z) {return null;};
TileEntity.addUpdatableAsTileEntity = function(updatable) {/* Cannot set property "remove" of undefined to "false" */};
TileEntity.getTileEntity = function(x, y, z) {return null;};
TileEntity.destroyTileEntity = function(tileEntity) {/* Cannot call method "destroy" of null */};
TileEntity.destroyTileEntityAtCoords = function(x, y, z) {};
TileEntity.isTileEntityLoaded = function(tileEntity) {/* Cannot read property "dimension" from null */};
TileEntity.checkTileEntityForIndex = function(index) {/* Cannot read property "dimension" from undefined */};
TileEntity.CheckTileEntities = function() {};
TileEntity.DeployDestroyChecker = function(tileEntity) {/* Cannot read property "__checkInProgress" from null */};

var MobRegistry = {};
MobRegistry.customEntities = {};
MobRegistry.loadedEntities = [];
MobRegistry.registerEntity = function(name) {return {"nameId":"test","controllers":{"event":{"parent":null,"__controller_name":"event"},"description":{"isDynamic":false,"parent":null,"__controller_name":"description"},"visual":{"modelWatchers":{},"modelWatcherStack":{},"parent":null,"__controller_name":"visual"},"AI":{"currentPriority":0,"loadedAI":{},"loadedData":{},"isAILoaded":false,"parent":null,"__controller_name":"AI"}},"isInstance":false,"entity":null,"age":0,"unloadedTime":0,"realPosition":null,"__base_type":28,"saverId":3556498,"lockRemovalHook":false,"event":{"parent":null,"__controller_name":"event"},"description":{"isDynamic":false,"parent":null,"__controller_name":"description"},"visual":{"modelWatchers":{},"modelWatcherStack":{},"parent":null,"__controller_name":"visual"},"AI":{"currentPriority":0,"loadedAI":{},"loadedData":{},"isAILoaded":false,"parent":null,"__controller_name":"AI"}};};
MobRegistry.registerUpdatableAsEntity = function(updatable) {};
MobRegistry.spawnEntityAsPrototype = function(typeName, coords, extraData) {/* Cannot read property "x" from undefined */};
MobRegistry.getEntityUpdatable = function(entity) {/* Cannot read property "entity" from undefined */};
MobRegistry.registerNativeEntity = function(entity) {};
MobRegistry.registerEntityRemove = function(entity) {/* Cannot read property "entity" from undefined */};
MobRegistry.resetEngine = function() {};

var MobSpawnRegistry = {};
MobSpawnRegistry.spawnData = [];
MobSpawnRegistry.registerSpawn = function(entityType, rarity, condition, denyNaturalDespawn) {};
MobSpawnRegistry.getRandomSpawn = function(rarityMultiplier) {};
MobSpawnRegistry.getRandPosition = function() {return {"x":-66.68296751491474,"z":-31.516610076632688};};
MobSpawnRegistry.executeSpawn = function(spawn, position) {/* Cannot read property "condition" from undefined */};
MobSpawnRegistry.counter = 554;
MobSpawnRegistry.tick = function() {};
MobSpawnRegistry.onChunkGenerated = function(x, z) {};

var Callback = {};
function GameObject(name, Prototype) {};

var GameObjectRegistry = {};
GameObjectRegistry.gameObjectTypes = {};
GameObjectRegistry.gameObjectTypes.test = this;
GameObjectRegistry.activeGameObjects = {};
GameObjectRegistry.genUniqueName = function(name) {return "_test";};
GameObjectRegistry.registerClass = function(gameObjectClass) {/* Cannot read property "gameobjectName" from undefined */};
GameObjectRegistry.deployGameObject = function(gameobject) {/* Cannot read property "isDeployed" from undefined */};
GameObjectRegistry.addGameObject = function(gameobject) {/* Cannot read property "originalName" from undefined */};
GameObjectRegistry.removeGameObject = function(gameobject) {/* Cannot read property "originalName" from undefined */};
GameObjectRegistry.resetEngine = function() {};
GameObjectRegistry.getAllByType = function(type, clone) {return [];};
GameObjectRegistry.callForType = function() {};
GameObjectRegistry.callForTypeSafe = function() {};

var ModAPI = {};
ModAPI.modAPIs = {};
ModAPI.registerAPI = function(name, api, descr) {};
ModAPI.requireAPI = function(name) {return null;};
ModAPI.requireGlobal = function(name) {return null;};
ModAPI.requireAPIdoc = function(name) {return {"name":"test","props":{}};};
ModAPI.requireAPIPropertyDoc = function(name, prop) {return null;};
ModAPI.getModByName = function(modName) {return null;};
ModAPI.isModLoaded = function(modName) {};
ModAPI.addAPICallback = function(apiName, func) {};
ModAPI.addModCallback = function(modName, func) {};
ModAPI.getModList = function() {return [];};
ModAPI.getModPEList = function() {return [];};
ModAPI.addTexturePack = function(path) {};
ModAPI.cloneAPI = function(api, deep) {return {};};
ModAPI.inheritPrototypes = function(source, target) {};
ModAPI.cloneObject = function(source, deep, rec) {};
ModAPI.debugCloneObject = function(source, deep, rec) {};

var Saver = {};
Saver.addSavesScope = function(name, loadFunc, saveFunc) {};
Saver.registerScopeSaver = function(name, saver) {/* Cannot convert undefined to com.zhekasmirnov.innercore.api.mod.adaptedscript.AdaptedScriptAPI$Saver$IScopeSaver (Core Engine#348) */};
Saver.registerObjectSaver = function(name, saver) {/* Cannot convert undefined to com.zhekasmirnov.innercore.api.mod.adaptedscript.AdaptedScriptAPI$Saver$IObjectSaver (Core Engine#350) */};
Saver.registerObject = function(obj, saverId) {/* java.lang.IllegalArgumentException: no saver found for id 0 use only registerObjectSaver return values */};
Saver.setObjectIgnored = function(obj, ignore) {/* java.lang.NullPointerException: Attempt to invoke virtual method 'void org.mozilla.javascript.ScriptableObject.put(java.lang.String, org.mozilla.javascript.Scriptable, java.lang.Object)' on a null object reference */};

var World = {};
World.isLoaded = true;
World.setLoaded = function(isLoaded) {};
World.isWorldLoaded = function() {};
World.getThreadTime = function() {return 563;};
World.getRelativeCoords = function(x, y, z, side) {/* Cannot read property "x" from undefined */};
World.canTileBeReplaced = function(id, data) {};
World.setBlockChangeCallbackEnabled = function(id, enabled) {};
World.blockChangeCallbacks = [];
World.registerBlockChangeCallback = function(ids, callback) {};
World.onBlockChanged = function(coords, block1, block2, int1, int2) {/* Cannot read property "id" from undefined */};
World.__inworld = {};
World.__inworld.nativeSetBlock = function(x, y, z, id, data) {};
World.__inworld.nativeGetBlockID = function(x, y, z) {return 1;};
World.__inworld.nativeGetBlockData = function(x, y, z) {};
World.__inworld.setBlock = function() {};
World.__inworld.setFullBlock = function(x, y, z, fullTile) {/* Cannot read property "id" from undefined */};
World.__inworld.getBlock = function(x, y, z) {return {"id":1,"data":0};};
World.__inworld.getBlockID = function() {};
World.__inworld.getBlockData = function() {};
World.__inworld.destroyBlock = function(x, y, z, drop) {};
World.__inworld.getLightLevel = function() {};
World.__inworld.isChunkLoaded = function(x, z) {return true;};
World.__inworld.isChunkLoadedAt = function(x, y, z) {return true;};
World.__inworld.getTileEntity = function(x, y, z) {return null;};
World.__inworld.addTileEntity = function(x, y, z) {return null;};
World.__inworld.removeTileEntity = function(x, y, z) {};
World.__inworld.getContainer = function(x, y, z) {return null;};
World.__inworld.getWorldTime = function() {};
World.__inworld.setWorldTime = function(time) {};
World.__inworld.setDayMode = function(day) {};
World.__inworld.setNightMode = function(night) {};
World.__inworld.getWeather = function() {return {"rain":0,"thunder":0};};
World.__inworld.setWeather = function(weather) {};
World.__inworld.drop = function() {};
World.__inworld.explode = function(x, y, z, power, someBoolean) {};
World.__inworld.getBiome = function(x, z) {return 1;};
World.__inworld.getBiomeName = function(x, z) {return "Unknown";};
World.__inworld.getGrassColor = function(x, z) {return -7883949;};
World.__inworld.setGrassColor = function(x, z, color) {};
World.__inworld.getGrassColorRGB = function(x, z) {return {"r":135,"g":179,"b":83};};
World.__inworld.setGrassColorRGB = function(x, z, rgb) {/* Cannot read property "r" from undefined */};
World.__inworld.canSeeSky = function(x, y, z) {};
World.__inworld.playSound = function(x, y, z, name, volume, pitch) {};
World.__inworld.playSoundAtEntity = function(entity, name, volume, pitch) {};
World.__inmenu = {};
World.__inmenu.nativeSetBlock = function() {};
World.__inmenu.nativeGetBlockID = function() {};
World.__inmenu.nativeGetBlockData = function(x, y, z) {};
World.__inmenu.setBlock = function(x, y, z, id, data) {};
World.__inmenu.setFullBlock = function(x, y, z, fullTile) {};
World.__inmenu.getBlock = function(x, y, z) {return {"id":0,"data":0};};
World.__inmenu.getBlockID = function(x, y, z) {};
World.__inmenu.getBlockData = function(x, y, z) {};
World.__inmenu.destroyBlock = function(x, y, z, drop) {};
World.__inmenu.getLightLevel = function(x, y, z) {};
World.__inmenu.isChunkLoaded = function(x, z) {};
World.__inmenu.isChunkLoadedAt = function(x, y, z) {};
World.__inmenu.getTileEntity = function(x, y, z) {return null;};
World.__inmenu.addTileEntity = function(x, y, z) {return null;};
World.__inmenu.removeTileEntity = function(x, y, z) {};
World.__inmenu.getContainer = function(x, y, z) {return null;};
World.__inmenu.getWorldTime = function() {};
World.__inmenu.setWorldTime = function(time) {};
World.__inmenu.setDayMode = function(day) {};
World.__inmenu.setNightMode = function(night) {};
World.__inmenu.getWeather = function() {return {"rain":0,"thunder":0};};
World.__inmenu.setWeather = function(weather) {};
World.__inmenu.drop = function(x, y, z, id, count, data, extra) {return null;};
World.__inmenu.explode = function(x, y, z, power, someBoolean) {};
World.__inmenu.getBiome = function(x, z) {return -1;};
World.__inmenu.getBiomeName = function(x, z) {return "error: level not loaded";};
World.__inmenu.getGrassColor = function(x, z) {};
World.__inmenu.setGrassColor = function(x, z, color) {};
World.__inmenu.getGrassColorRGB = function(x, z) {return {"r":0,"g":0,"b":0};};
World.__inmenu.setGrassColorRGB = function(x, z, rgb) {};
World.__inmenu.canSeeSky = function(x, y, z) {};
World.__inmenu.playSound = function(x, y, z, name, volume, pitch) {};
World.__inmenu.playSoundAtEntity = function(entity, name, volume, pitch) {};
World.nativeSetBlock = function() {};
World.nativeGetBlockID = function() {};
World.nativeGetBlockData = function(x, y, z) {};
World.setBlock = function(x, y, z, id, data) {};
World.setFullBlock = function(x, y, z, fullTile) {};
World.getBlock = function(x, y, z) {return {"id":0,"data":0};};
World.getBlockID = function(x, y, z) {};
World.getBlockData = function(x, y, z) {};
World.destroyBlock = function(x, y, z, drop) {};
World.getLightLevel = function(x, y, z) {};
World.isChunkLoaded = function(x, z) {};
World.isChunkLoadedAt = function(x, y, z) {};
World.getTileEntity = function(x, y, z) {return null;};
World.addTileEntity = function(x, y, z) {return null;};
World.removeTileEntity = function(x, y, z) {};
World.getContainer = function(x, y, z) {return null;};
World.getWorldTime = function() {};
World.setWorldTime = function(time) {};
World.setDayMode = function(day) {};
World.setNightMode = function(night) {};
World.getWeather = function() {return {"rain":0,"thunder":0};};
World.setWeather = function(weather) {};
World.drop = function(x, y, z, id, count, data, extra) {return null;};
World.explode = function(x, y, z, power, someBoolean) {};
World.getBiome = function(x, z) {return -1;};
World.getBiomeName = function(x, z) {return "error: level not loaded";};
World.getGrassColor = function(x, z) {};
World.setGrassColor = function(x, z, color) {};
World.getGrassColorRGB = function(x, z) {return {"r":0,"g":0,"b":0};};
World.setGrassColorRGB = function(x, z, rgb) {};
World.canSeeSky = function(x, y, z) {};
World.playSound = function(x, y, z, name, volume, pitch) {};
World.playSoundAtEntity = function(entity, name, volume, pitch) {};

var Entity = {};
Entity.getAll = function() {return [-4294967295,-4294967295,-236223201264,-236223201265,-236223201279,-227633266677,-231928233983,-201863462910];};
Entity.getAllJS = function() {return [-4294967295,-4294967295,-236223201264,-236223201265,-236223201279,-227633266677,-231928233983,-201863462910];};
Entity.getExtra = function(ent, name) {return null;};
Entity.putExtra = function(ent, name, extra) {};
Entity.getExtraJson = function(ent, name) {return {};};
Entity.putExtraJson = function(ent, name, obj) {};
Entity.addEffect = function(ent, effectId, effectData, effectTime, ambiance, particles) {};
Entity.clearEffect = function(ent, id) {};
Entity.clearEffects = function(ent) {};
Entity.damageEntity = function(ent, damage, cause, params) {};
Entity.healEntity = function(ent, heal) {};
Entity.getType = function(ent) {return 1;};
Entity.setHitbox = function(ent, w, h) {};
Entity.isExist = function(entity) {return true;};
Entity.spawn = function() {};
Entity.spawnCustom = function(name, x, y, z, extra) {/* Cyclic {0} value not allowed. */};
Entity.spawnCustomAtCoords = function(name, coords, extra) {/* Cyclic {0} value not allowed. */};
Entity.spawnAtCoords = function() {};
Entity.remove = function(entity) {};
Entity.getCustom = function(entity) {return null;};
Entity.getAge = function(ent) {};
Entity.setAge = function(ent, age) {};
Entity.getSkin = function(ent) {return "missing_texture.png";};
Entity.setSkin = function(ent, skin) {};
Entity.setTexture = function(ent, texture) {};
Entity.getRender = function(ent) {};
Entity.setRender = function(ent, render) {};
Entity.rideAnimal = function(ent1, ent2) {};
Entity.getNameTag = function(ent) {return "MaXFeeD";};
Entity.setNameTag = function(ent, tag) {};
Entity.getTarget = function() {};
Entity.setTarget = function(ent, target) {};
Entity.getMobile = function(ent, mobile) {};
Entity.setMobile = function(ent, mobile) {};
Entity.getSneaking = function(ent) {};
Entity.setSneaking = function(ent, sneak) {};
Entity.getRider = function() {};
Entity.getRiding = function() {};
Entity.setFire = function(ent, fire, force) {};
Entity.health = function(entity) {return {};};
Entity.getHealth = function(ent) {};
Entity.setHealth = function(ent, health) {};
Entity.getMaxHealth = function(ent) {return 10;};
Entity.setMaxHealth = function(ent, health) {};
Entity.setPosition = function(ent, x, y, z) {};
Entity.getPosition = function(ent) {return {"x":0,"y":0,"z":0};};
Entity.addPosition = function(ent, x, y, z) {};
Entity.setVelocity = function(ent, x, y, z) {};
Entity.getVelocity = function(ent) {return {"x":0,"y":0,"z":0};};
Entity.addVelocity = function(ent, x, y, z) {};
Entity.getDistanceBetweenCoords = function(coords1, coords2) {return 2.23606797749979;};
Entity.getDistanceToCoords = function(ent, coords) {return 1;};
Entity.getDistanceToEntity = function(ent1, ent2) {/* java.lang.ClassCastException: org.mozilla.javascript.Undefined cannot be cast to java.lang.Number */};
Entity.getXZPlayerDis = function(entity) {};
Entity.getLookAngle = function(ent) {return {"pitch":0,"yaw":0.7284046518569895};};
Entity.setLookAngle = function(ent, yaw, pitch) {};
Entity.getLookVectorByAngle = function(angle) {return {"x":0,"y":0,"z":1};};
Entity.getLookVector = function(ent) {return {"x":0,"y":0,"z":1};};
Entity.getLookAt = function(ent, x, y, z) {return {"yaw":null,"pitch":null};};
Entity.lookAt = function(ent, x, y, z) {};
Entity.lookAtCoords = function(ent, coords) {};
Entity.moveToTarget = function(ent, target, params) {/* Cannot read property "x" from undefined */};
Entity.moveToAngle = function(ent, angle, params) {/* Cannot read property "speed" from undefined */};
Entity.moveToLook = function(ent, params) {/* Cannot read property "speed" from undefined */};
Entity.getMovingVector = function(ent) {return {"x":null,"y":null,"z":null,"size":0,"xzsize":0};};
Entity.getMovingAngle = function(ent) {return {"pitch":0,"yaw":0};};
Entity.getMovingAngleByPositions = function(pos1, pos2) {};
Entity.findNearest = function(coords, type, maxRange) {return -240518168566;};
Entity.getAllInRange = function(coords, maxRange, type) {return [-240518168571,-240518168566];};
Entity.getInventory = function(ent, handleNames, handleEnchant) {/* java.lang.RuntimeException: Entity.getInventory() method is deprecated */};
Entity.getArmorSlot = function(ent, slot) {return {"id":0,"count":0,"data":0,"extra":null};};
Entity.setArmorSlot = function(ent, slot, id, count, data, extra) {};
Entity.getCarriedItem = function(ent, bool1, bool2) {return {"id":0,"count":0,"data":0,"extra":null};};
Entity.setCarriedItem = function(ent, id, count, data, extra) {};
Entity.getOffhandItem = function(ent, bool1, bool2) {return {"id":0,"count":0,"data":0,"extra":null};};
Entity.setOffhandItem = function(ent, id, count, data, extra) {};
Entity.getDroppedItem = function(ent) {return {"id":0,"count":0,"data":0,"extra":null};};
Entity.setDroppedItem = function(ent, id, count, data, extra) {};
Entity.getProjectileItem = function(projectile) {return {"id":0,"count":0,"data":0,"extra":null};};

var Player = {};
Player.get = function() {};
Player.getNameForEnt = function(ent) {};
Player.getName = function() {};
Player.getDimension = function() {};
Player.isPlayer = function(ent) {};
Player.getPointed = function() {return {"pos":{"x":0,"y":0,"z":0,"side":0},"vec":{"x":0,"y":0,"z":0},"entity":-1,"block":{"id":0,"data":0}};};
Player.getInventory = function(loadPart, handleEnchant, handleNames) {/* java.lang.RuntimeException: Player.getInventory() method is deprecated */};
Player.addItemToInventory = function(id, count, data, extra, preventDrop) {};
Player.getCarriedItem = function(handleEnchant, handleNames) {return {"id":1,"count":2,"data":0,"extra":null};};
Player.setCarriedItem = function(id, count, data, extra) {};
Player.getOffhandItem = function() {return {"id":1,"count":1,"data":0,"extra":null};};
Player.setOffhandItem = function(id, count, data, extra) {};
Player.decreaseCarriedItem = function(count) {};
Player.getInventorySlot = function(slot) {return {"id":0,"count":0,"data":0,"extra":null};};
Player.setInventorySlot = function(slot, id, count, data, extra) {};
Player.getArmorSlot = function(slot) {return {"id":1,"count":1,"data":0,"extra":null};};
Player.setArmorSlot = function(slot, id, count, data, extra) {};
Player.getSelectedSlotId = function() {return 8;};
Player.setSelectedSlotId = function(slot) {};
Player.setPosition = function(x, y, z) {};
Player.getPosition = function() {return {"x":0,"y":0,"z":0};};
Player.addPosition = function(x, y, z) {};
Player.setVelocity = function(x, y, z) {};
Player.getVelocity = function() {return {"x":0,"y":0,"z":0};};
Player.addVelocity = function(x, y, z) {};
Player.experience = function() {return {};};
Player.getExperience = function() {};
Player.setExperience = function(exp) {};
Player.addExperience = function(exp) {};
Player.level = function() {return {};};
Player.getLevel = function() {};
Player.setLevel = function(level) {};
Player.addLevel = function(level) {};
Player.flying = function() {return {};};
Player.getFlyingEnabled = function() {return true;};
Player.setFlyingEnabled = function(enabled) {};
Player.getFlying = function() {};
Player.setFlying = function(enabled) {};
Player.exhaustion = function() {return {};};
Player.getExhaustion = function() {};
Player.setExhaustion = function(value) {};
Player.hunger = function() {return {};};
Player.getHunger = function() {return 20;};
Player.setHunger = function(value) {};
Player.saturation = function() {return {};};
Player.getSaturation = function() {return 20;};
Player.setSaturation = function(value) {};
Player.health = function() {return {};};
Player.getHealth = function() {};
Player.setHealth = function(value) {};
Player.score = function() {return {};};
Player.getScore = function() {};
Player.setFov = function(fov) {};
Player.resetFov = function() {};
Player.setCameraEntity = function(ent) {};
Player.resetCameraEntity = function() {};

var Game = {};
Game.prevent = function() {};
Game.message = function(msg) {};
Game.tipMessage = function(msg) {};
Game.dialogMessage = function(message, title) {};
Game.setDifficulty = function(difficulty) {};
Game.getDifficulty = function() {};
Game.setGameMode = function(gameMode) {};
Game.getGameMode = function() {return 1;};
Game.getMinecraftVersion = function() {return "1.11.4";};
Game.getEngineVersion = function() {return "2.0";};
Game.spendItemsInCreative = false;
Game.isItemSpendingAllowed = function() {};
function Render(params) {};
function Texture(path) {};
function EntityModel(parentModel) {};
function EntityModelWatcher(entity, model) {};
function EntityAIClass(customPrototype) {};
function EntityAIWatcher(customPrototype) {};

var EntityAI = {};
EntityAI.Idle = {};
EntityAI.Idle.getDefaultPriority = function() {return 1;};
EntityAI.Idle.getDefaultName = function() {return "idle";};
EntityAI.Idle.params = {};
EntityAI.Idle.setParams = function(params) {};
EntityAI.Idle.executionStarted = function() {};
EntityAI.Idle.executionEnded = function() {};
EntityAI.Idle.executionPaused = function() {};
EntityAI.Idle.executionResumed = function() {};
EntityAI.Idle.execute = function() {};
EntityAI.Idle.__execute = function() {};
EntityAI.Idle.setExecutionTimer = function(timer) {};
EntityAI.Idle.removeExecutionTimer = function() {};
EntityAI.Idle.data = {};
EntityAI.Idle.data.executionTimer = -1;
EntityAI.Idle.isInstance = false;
EntityAI.Idle.parent = null;
EntityAI.Idle.entity = null;
EntityAI.Idle.instantiate = function(parent, name) {return {"params":{},"data":{"executionTimer":-1},"isInstance":true,"parent":"test"};};
EntityAI.Idle.aiEntityChanged = function(entity) {};
EntityAI.Idle.finishExecution = function() {};
EntityAI.Idle.changeSelfPriority = function(priority) {};
EntityAI.Idle.enableAI = function(name, priority, extra) {};
EntityAI.Idle.disableAI = function(name) {};
EntityAI.Idle.setPriority = function(name, priority) {};
EntityAI.Idle.getAI = function(name) {};
EntityAI.Idle.getPriority = function(name) {};
EntityAI.Idle.attackedBy = function(entity) {};
EntityAI.Idle.hurtBy = function(entity) {};
EntityAI.Idle.projectileHit = function(projectile) {};
EntityAI.Idle.death = function(entity) {};
EntityAI.Idle.getDefaultPrioriy = function() {return 1;};
EntityAI.Follow = {};
EntityAI.Follow.getDefaultPriority = function() {return 1;};
EntityAI.Follow.getDefaultName = function() {return "basic-entity-ai";};
EntityAI.Follow.params = {};
EntityAI.Follow.params.speed = 0.2;
EntityAI.Follow.params.jumpVel = 0.45;
EntityAI.Follow.params.rotateSpeed = 0.4;
EntityAI.Follow.params.rotateRatio = 0.5;
EntityAI.Follow.params.rotateHead = true;
EntityAI.Follow.params.denyY = true;
EntityAI.Follow.setParams = function(params) {};
EntityAI.Follow.executionStarted = function() {};
EntityAI.Follow.executionEnded = function() {};
EntityAI.Follow.executionPaused = function() {};
EntityAI.Follow.executionResumed = function() {};
EntityAI.Follow.execute = function() {};
EntityAI.Follow.__execute = function() {};
EntityAI.Follow.setExecutionTimer = function(timer) {};
EntityAI.Follow.removeExecutionTimer = function() {};
EntityAI.Follow.data = {};
EntityAI.Follow.data.target = null;
EntityAI.Follow.data.targetEntity = null;
EntityAI.Follow.data.movingYaw = 0;
EntityAI.Follow.data.executionTimer = -1;
EntityAI.Follow.isInstance = false;
EntityAI.Follow.parent = null;
EntityAI.Follow.entity = null;
EntityAI.Follow.instantiate = function(parent, name) {return {"params":{"speed":0.2,"jumpVel":0.45,"rotateSpeed":0.4,"rotateRatio":0.5,"rotateHead":true,"denyY":true},"data":{"target":null,"targetEntity":null,"movingYaw":0,"executionTimer":-1},"isInstance":true,"parent":"test"};};
EntityAI.Follow.aiEntityChanged = function(entity) {};
EntityAI.Follow.finishExecution = function() {};
EntityAI.Follow.changeSelfPriority = function(priority) {};
EntityAI.Follow.enableAI = function(name, priority, extra) {};
EntityAI.Follow.disableAI = function(name) {};
EntityAI.Follow.setPriority = function(name, priority) {};
EntityAI.Follow.getAI = function(name) {};
EntityAI.Follow.getPriority = function(name) {};
EntityAI.Follow.attackedBy = function(entity) {};
EntityAI.Follow.hurtBy = function(entity) {};
EntityAI.Follow.projectileHit = function(projectile) {};
EntityAI.Follow.death = function(entity) {};
EntityAI.Panic = {};
EntityAI.Panic.getDefaultPriority = function() {return 3;};
EntityAI.Panic.getDefaultName = function() {return "panic";};
EntityAI.Panic.params = {};
EntityAI.Panic.params.speed = 0.22;
EntityAI.Panic.params.angular_speed = 0.5;
EntityAI.Panic.setParams = function(params) {};
EntityAI.Panic.executionStarted = function() {};
EntityAI.Panic.executionEnded = function() {};
EntityAI.Panic.executionPaused = function() {};
EntityAI.Panic.executionResumed = function() {};
EntityAI.Panic.execute = function() {/* java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Number.longValue()' on a null object reference */};
EntityAI.Panic.__execute = function() {/* java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Number.longValue()' on a null object reference */};
EntityAI.Panic.setExecutionTimer = function(timer) {};
EntityAI.Panic.removeExecutionTimer = function() {};
EntityAI.Panic.data = {};
EntityAI.Panic.data.yaw = 5.63392648412884;
EntityAI.Panic.data.add = -0.20908450175670207;
EntityAI.Panic.data.executionTimer = -1;
EntityAI.Panic.isInstance = false;
EntityAI.Panic.parent = null;
EntityAI.Panic.entity = null;
EntityAI.Panic.instantiate = function(parent, name) {return {"params":{"speed":0.22,"angular_speed":0.5},"data":{"yaw":5.63392648412884,"add":-0.20908450175670207,"executionTimer":-1},"isInstance":true,"parent":"test"};};
EntityAI.Panic.aiEntityChanged = function(entity) {};
EntityAI.Panic.finishExecution = function() {};
EntityAI.Panic.changeSelfPriority = function(priority) {};
EntityAI.Panic.enableAI = function(name, priority, extra) {};
EntityAI.Panic.disableAI = function(name) {};
EntityAI.Panic.setPriority = function(name, priority) {};
EntityAI.Panic.getAI = function(name) {};
EntityAI.Panic.getPriority = function(name) {};
EntityAI.Panic.attackedBy = function(entity) {};
EntityAI.Panic.hurtBy = function(entity) {};
EntityAI.Panic.projectileHit = function(projectile) {};
EntityAI.Panic.death = function(entity) {};
EntityAI.Panic.randomize = function() {};
EntityAI.Wander = {};
EntityAI.Wander.getDefaultPriority = function() {return 2;};
EntityAI.Wander.getDefaultName = function() {return "wander";};
EntityAI.Wander.params = {};
EntityAI.Wander.params.speed = 0.08;
EntityAI.Wander.params.angular_speed = 0.1;
EntityAI.Wander.params.delay_weight = 0.3;
EntityAI.Wander.setParams = function(params) {};
EntityAI.Wander.executionStarted = function() {};
EntityAI.Wander.executionEnded = function() {};
EntityAI.Wander.executionPaused = function() {};
EntityAI.Wander.executionResumed = function() {};
EntityAI.Wander.execute = function() {/* java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Number.longValue()' on a null object reference */};
EntityAI.Wander.__execute = function() {/* java.lang.NullPointerException: Attempt to invoke virtual method 'long java.lang.Number.longValue()' on a null object reference */};
EntityAI.Wander.setExecutionTimer = function(timer) {};
EntityAI.Wander.removeExecutionTimer = function() {};
EntityAI.Wander.data = {};
EntityAI.Wander.data.yaw = 4.645235427645263;
EntityAI.Wander.data.add = 0;
EntityAI.Wander.data.delay = false;
EntityAI.Wander.data._delay = true;
EntityAI.Wander.data.executionTimer = -1;
EntityAI.Wander.isInstance = false;
EntityAI.Wander.parent = null;
EntityAI.Wander.entity = null;
EntityAI.Wander.instantiate = function(parent, name) {return {"params":{"speed":0.08,"angular_speed":0.1,"delay_weight":0.3},"data":{"yaw":4.645235427645263,"add":0,"delay":false,"_delay":true,"executionTimer":-1},"isInstance":true,"parent":"test"};};
EntityAI.Wander.aiEntityChanged = function(entity) {};
EntityAI.Wander.finishExecution = function() {};
EntityAI.Wander.changeSelfPriority = function(priority) {};
EntityAI.Wander.enableAI = function(name, priority, extra) {};
EntityAI.Wander.disableAI = function(name) {};
EntityAI.Wander.setPriority = function(name, priority) {};
EntityAI.Wander.getAI = function(name) {};
EntityAI.Wander.getPriority = function(name) {};
EntityAI.Wander.attackedBy = function(entity) {};
EntityAI.Wander.hurtBy = function(entity) {};
EntityAI.Wander.projectileHit = function(projectile) {};
EntityAI.Wander.death = function(entity) {};
EntityAI.Wander.randomize = function() {};
EntityAI.Attack = {};
EntityAI.Attack.getDefaultPriority = function() {return 1;};
EntityAI.Attack.getDefaultName = function() {return "basic-entity-ai";};
EntityAI.Attack.params = {};
EntityAI.Attack.params.attack_damage = 5;
EntityAI.Attack.params.attack_range = 2.5;
EntityAI.Attack.params.attack_rate = 12;
EntityAI.Attack.setParams = function(params) {};
EntityAI.Attack.executionStarted = function() {};
EntityAI.Attack.executionEnded = function() {};
EntityAI.Attack.executionPaused = function() {};
EntityAI.Attack.executionResumed = function() {};
EntityAI.Attack.execute = function() {};
EntityAI.Attack.__execute = function() {};
EntityAI.Attack.setExecutionTimer = function(timer) {};
EntityAI.Attack.removeExecutionTimer = function() {};
EntityAI.Attack.data = {};
EntityAI.Attack.data.timer = 0;
EntityAI.Attack.data.target = null;
EntityAI.Attack.data.executionTimer = -1;
EntityAI.Attack.isInstance = false;
EntityAI.Attack.parent = null;
EntityAI.Attack.entity = null;
EntityAI.Attack.instantiate = function(parent, name) {return {"params":{"attack_damage":5,"attack_range":2.5,"attack_rate":12},"data":{"timer":0,"target":null,"executionTimer":-1},"isInstance":true,"parent":"test"};};
EntityAI.Attack.aiEntityChanged = function(entity) {};
EntityAI.Attack.finishExecution = function() {};
EntityAI.Attack.changeSelfPriority = function(priority) {};
EntityAI.Attack.enableAI = function(name, priority, extra) {};
EntityAI.Attack.disableAI = function(name) {};
EntityAI.Attack.setPriority = function(name, priority) {};
EntityAI.Attack.getAI = function(name) {};
EntityAI.Attack.getPriority = function(name) {};
EntityAI.Attack.attackedBy = function(entity) {};
EntityAI.Attack.hurtBy = function(entity) {};
EntityAI.Attack.projectileHit = function(projectile) {};
EntityAI.Attack.death = function(entity) {};
EntityAI.Swim = {};
EntityAI.Swim.getDefaultPriority = function() {return -1;};
EntityAI.Swim.getDefaultName = function() {return "swim";};
EntityAI.Swim.params = {};
EntityAI.Swim.params.velocity = 0.2;
EntityAI.Swim.setParams = function(params) {};
EntityAI.Swim.executionStarted = function() {};
EntityAI.Swim.executionEnded = function() {};
EntityAI.Swim.executionPaused = function() {};
EntityAI.Swim.executionResumed = function() {};
EntityAI.Swim.execute = function() {};
EntityAI.Swim.__execute = function() {};
EntityAI.Swim.setExecutionTimer = function(timer) {};
EntityAI.Swim.removeExecutionTimer = function() {};
EntityAI.Swim.data = {};
EntityAI.Swim.data.executionTimer = -1;
EntityAI.Swim.isInstance = false;
EntityAI.Swim.parent = null;
EntityAI.Swim.entity = null;
EntityAI.Swim.instantiate = function(parent, name) {return {"params":{"velocity":0.2},"data":{"executionTimer":-1},"isInstance":true,"parent":"test","inWater":false};};
EntityAI.Swim.aiEntityChanged = function(entity) {};
EntityAI.Swim.finishExecution = function() {};
EntityAI.Swim.changeSelfPriority = function(priority) {};
EntityAI.Swim.enableAI = function(name, priority, extra) {};
EntityAI.Swim.disableAI = function(name) {};
EntityAI.Swim.setPriority = function(name, priority) {};
EntityAI.Swim.getAI = function(name) {};
EntityAI.Swim.getPriority = function(name) {};
EntityAI.Swim.attackedBy = function(entity) {};
EntityAI.Swim.hurtBy = function(entity) {};
EntityAI.Swim.projectileHit = function(projectile) {};
EntityAI.Swim.death = function(entity) {};
EntityAI.Swim.inWater = false;
EntityAI.PanicWatcher = {};
EntityAI.PanicWatcher.parent = null;
EntityAI.PanicWatcher.getDefaultPriority = function() {return -1;};
EntityAI.PanicWatcher.getDefaultName = function() {return "basic-entity-ai";};
EntityAI.PanicWatcher.params = {};
EntityAI.PanicWatcher.params.panic_time = 200;
EntityAI.PanicWatcher.params.priority_panic = 5;
EntityAI.PanicWatcher.params.priority_default = 1;
EntityAI.PanicWatcher.params.name = "panic";
EntityAI.PanicWatcher.setParams = function(params) {};
EntityAI.PanicWatcher.executionStarted = function() {};
EntityAI.PanicWatcher.executionEnded = function() {};
EntityAI.PanicWatcher.executionPaused = function() {};
EntityAI.PanicWatcher.executionResumed = function() {};
EntityAI.PanicWatcher.execute = function() {};
EntityAI.PanicWatcher.__execute = function() {};
EntityAI.PanicWatcher.setExecutionTimer = function(timer) {};
EntityAI.PanicWatcher.removeExecutionTimer = function() {};
EntityAI.PanicWatcher.data = {};
EntityAI.PanicWatcher.data.timer = -1;
EntityAI.PanicWatcher.data.executionTimer = -1;
EntityAI.PanicWatcher.isInstance = false;
EntityAI.PanicWatcher.entity = null;
EntityAI.PanicWatcher.instantiate = function(parent, name) {return {"parent":"test","params":{"panic_time":200,"priority_panic":5,"priority_default":1,"name":"panic"},"data":{"timer":-1,"executionTimer":-1},"isInstance":true};};
EntityAI.PanicWatcher.aiEntityChanged = function(entity) {};
EntityAI.PanicWatcher.finishExecution = function() {};
EntityAI.PanicWatcher.changeSelfPriority = function(priority) {};
EntityAI.PanicWatcher.enableAI = function(name, priority, extra) {};
EntityAI.PanicWatcher.disableAI = function(name) {};
EntityAI.PanicWatcher.setPriority = function(name, priority) {};
EntityAI.PanicWatcher.getAI = function(name) {};
EntityAI.PanicWatcher.getPriority = function(name) {};
EntityAI.PanicWatcher.attackedBy = function(entity) {};
EntityAI.PanicWatcher.hurtBy = function() {};
EntityAI.PanicWatcher.projectileHit = function(projectile) {};
EntityAI.PanicWatcher.death = function(entity) {};

var GenerationUtils = {};
GenerationUtils.isTerrainBlock = function(id) {return true;};
GenerationUtils.isTransparentBlock = function(id) {};
GenerationUtils.canSeeSky = function(x, y, z) {};
GenerationUtils.randomXZ = function(cx, cz) {return {"x":null,"z":null};};
GenerationUtils.randomCoords = function(cx, cz, lowest, highest) {return {"x":null,"z":null,"y":97};};
GenerationUtils.findSurface = function(x, y, z) {return {"x":0,"y":-1,"z":0};};
GenerationUtils.findHighSurface = function(x, z) {return {"x":0,"y":-1,"z":0};};
GenerationUtils.findLowSurface = function(x, z) {return {"x":0,"y":-1,"z":0};};
GenerationUtils.__lockedReal = {};
GenerationUtils.__lockedReal.id = 0;
GenerationUtils.__lockedReal.data = 0;
GenerationUtils.lockInBlock = function(id, data, checkerTile, checkerMode) {};
GenerationUtils.setLockedBlock = function(x, y, z) {};
GenerationUtils.genMinable = function(x, y, z, params) {/* Cannot read property "ratio" from undefined */};
GenerationUtils.generateOre = function(x, y, z, id, data, amount, noStoneCheck) {};

var Animation = {};
Animation.base = function(x, y, z) {};
Animation.Base = function(x, y, z) {};
Animation.item = function(x, y, z) {};
Animation.Item = function(x, y, z) {};

var Particles = {};

var IDRegistry = {};

var IDData = {};
IDData.item = {};
IDData.block = {};
IDData.block.test = 8192;

var Block = {};
Block.idSource = {};
Block.idSource.test = 8192;
Block.dropFunctions = {};
Block.dropFunctions.1 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.2 = function(coords, id, data, level, enchant) {/* Cannot read property "silk" from undefined */};
Block.dropFunctions.4 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.13 = function(coords, id, data, level, enchant) {/* Cannot read property "fortune" from undefined */};
Block.dropFunctions.14 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.15 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.16 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.20 = function(coords, id, data, level, enchant) {/* Cannot read property "silk" from undefined */};
Block.dropFunctions.21 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.24 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.30 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.22 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.41 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.42 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.43 = function(coords, id, data, level) {return [];};
Block.dropFunctions.44 = function(coords, id, data, level) {return [];};
Block.dropFunctions.45 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.48 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.49 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.52 = function(coords, id, data, level, enchant) {/* Cannot read property "experience" from undefined */};
Block.dropFunctions.56 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.57 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.61 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.62 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.67 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.70 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.71 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.73 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.74 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.78 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.80 = function(coords, id, data, level, enchant) {/* Cannot read property "silk" from undefined */};
Block.dropFunctions.87 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.98 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.101 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.102 = function(coords, id, data, level, enchant) {/* Cannot read property "silk" from undefined */};
Block.dropFunctions.108 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.109 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.110 = function(coords, id, data, level, enchant) {/* Cannot read property "silk" from undefined */};
Block.dropFunctions.112 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.113 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.114 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.116 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.117 = function(coords, id, data, level) {return [];};
Block.dropFunctions.118 = function(coords, id, data, level) {return [];};
Block.dropFunctions.121 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.125 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.128 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.129 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.130 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.133 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.139 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.135 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.147 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.148 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.152 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.153 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.154 = function(coords, id, data, level) {return [];};
Block.dropFunctions.155 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.156 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.159 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.167 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.168 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.172 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.173 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.179 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.180 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.181 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.182 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.198 = function(coords, id, data, level, enchant) {/* Cannot read property "silk" from undefined */};
Block.dropFunctions.201 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.203 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.206 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.213 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.215 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.216 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.219 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.220 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.221 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.222 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.223 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.224 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.225 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.226 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.227 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.228 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.229 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.231 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.232 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.233 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.234 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.235 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.236 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.245 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.251 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.243 = function(coords, id, data, level, enchant) {/* Cannot read property "silk" from undefined */};
Block.dropFunctions.257 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.258 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.259 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.266 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.386 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.387 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.388 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.389 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.390 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.391 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.392 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.417 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.421 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.422 = function(coords, id, data, level, enchant) {return [];};
Block.dropFunctions.424 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.425 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.426 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.427 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.428 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.429 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.430 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.431 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.432 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.433 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.434 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.435 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.438 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.439 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.440 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.450 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.451 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.452 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.453 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.454 = function(coords, id, data, level) {return [];};
Block.dropFunctions.461 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.463 = function(blockCoords, blockID, blockData, diggingLevel) {};
Block.dropFunctions.465 = function(coords, id, data, level) {return [];};
Block.dropFunctions.469 = function(coords, id, data, level) {return [];};
Block.popResourceFunctions = {};
Block.getNumericId = function(id) {return 1;};
Block.createBlock = function(namedID, defineData, blockType) {/* java.lang.NullPointerException: Attempt to invoke virtual method 'java.lang.Object[] org.mozilla.javascript.ScriptableObject.getAllIds()' on a null object reference */};
Block.createBlockWithRotation = function(namedID, defineData, blockType) {};
Block.isNativeTile = function(id) {return true;};
Block.convertBlockToItemId = function(id) {return 1;};
Block.covertItemToBlockId = function(id) {return 1;};
Block.registerDropFunctionForID = function(numericID, dropFunc, level) {return true;};
Block.registerDropFunction = function(namedID, dropFunc, level) {return true;};
Block.defaultDropFunction = function(blockCoords, blockID, blockData, diggingLevel) {return null;};
Block.registerPopResourcesFunctionForID = function(numericID, func) {return true;};
Block.registerPopResourcesFunction = function(nameID, func) {/* "namedID" is not defined. */};
Block.getDropFunction = function(id) {return function(blockCoords, blockID, blockData, diggingLevel) {};};
Block.setDestroyLevelForID = function(id, level, resetData) {};
Block.setDestroyLevel = function(namedID, level) {};
Block.setDestroyTime = function(namedID, time) {};
Block.isSolid = function(numericID) {return true;};
Block.getDestroyTime = function(numericID) {return 1.5;};
Block.getExplosionResistance = function(numericID) {return 30;};
Block.getFriction = function(numericID) {return 0.6000000238418579;};
Block.getTranslucency = function(numericID) {};
Block.getLightLevel = function(numericID) {};
Block.getLightOpacity = function(numericID) {return 15;};
Block.getRenderLayer = function(numericID) {return 2;};
Block.getRenderType = function(numericID) {};
Block.getBlockAtlasTextureCoords = function(name, id) {return {"u1":0.36328125,"v1":0.0390625,"u2":0.37109375,"v2":0.0546875};};
Block.setTempDestroyTime = function(numericID, time) {};
Block.setBlockMaterial = function(namedID, material, level) {return true;};
Block.setRedstoneTile = function(namedID, data, isRedstone) {};
Block.onBlockDestroyed = function(coords, fullTile, byHand) {/* Cannot read property "id" from undefined */};
Block.onBlockPoppedResources = function(coords, block, f, i) {/* Cannot read property "id" from undefined */};
Block.getBlockDropViaItem = function(block, item, coords) {return null;};
Block.placeFuncs = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
Block.registerPlaceFunctionForID = function(block, func) {};
Block.registerPlaceFunction = function(namedID, func) {};
Block.getPlaceFunc = function(block) {};
Block.setBlockShape = function(id, pos1, pos2, data) {};
Block.setShape = function(id, x1, y1, z1, x2, y2, z2, data) {/* java.lang.NullPointerException: Attempt to invoke virtual method 'boolean android.graphics.Bitmap.isRecycled()' on a null object reference */};
Block.createSpecialType = function(description, nameKey) {return "_CE";};
Block.TYPE_BASE = "createBlock";
Block.TYPE_ROTATION = "createBlockWithRotation";
Block.setPrototype = function(namedID, Prototype) {/* Cannot read property "__validBlockTypes" from undefined */};
Block.setRandomTickCallback = function(id, callback) {};
Block.setAnimateTickCallback = function(id, callback) {};

var BlockRenderer = {};

var ICRender = {};

var Item = {};
Item.idSource = {};
Item.useFunctions = {};
Item.throwableFunctions = {};
Item.getNumericId = function(id) {return 1;};
Item.getItemById = function(id) {return null;};
Item.createItem = function(namedID, name, texture, params) {};
Item.createFoodItem = function(namedID, name, texture, params) {return null;};
Item.createFuelItem = function(namedID, name, texture, params) {/* java.lang.RuntimeException: creation of fuel items is not yet supported */};
Item.createArmorItem = function(namedID, name, texture, params) {};
Item.createThrowableItem = function(namedID, name, texture, params) {};
Item.isNativeItem = function(id) {};
Item.getMaxDamage = function(id) {};
Item.getMaxStack = function(id) {return 64;};
Item.getName = function(id, data, encode) {return "Stone";};
Item.isValid = function(id, data) {return true;};
Item.addToCreative = function(id, count, data, extra) {};
Item.addCreativeGroup = function(name, displayedName, ids) {};
Item.describeItem = function(numericID, description) {/* Cannot read property "category" from undefined */};
Item.setCategory = function(id, category) {/* Cannot call method "setCreativeCategory" of null */};
Item.setEnchantType = function(id, enchant, value) {/* Cannot call method "setEnchantType" of null */};
Item.setArmorDamageable = function(id, val) {/* Cannot call method "setArmorDamageable" of null */};
Item.addRepairItemIds = function(id, items) {};
Item.setToolRender = function(id, enabled) {/* Cannot call method "setHandEquipped" of null */};
Item.setMaxDamage = function(id, maxdamage) {/* Cannot call method "setMaxDamage" of null */};
Item.setGlint = function(id, enabled) {/* Cannot call method "setGlint" of null */};
Item.setLiquidClip = function(id, enabled) {/* Cannot call method "setLiquidClip" of null */};
Item.setStackedByData = function(id, enabled) {};
Item.setProperties = function(id, props) {/* Cannot call method "setProperties" of null */};
Item.setUseAnimation = function(id, animType) {/* Cannot call method "setUseAnimation" of null */};
Item.setMaxUseDuration = function(id, duration) {/* Cannot call method "setMaxUseDuration" of null */};
Item.registerUseFunctionForID = function(numericID, useFunc) {return true;};
Item.registerUseFunction = function(namedID, useFunc) {};
Item.onItemUsed = function(coords, item, block) {};
Item.registerThrowableFunctionForID = function(numericID, useFunc) {return true;};
Item.registerThrowableFunction = function(namedID, useFunc) {};
Item.onProjectileHit = function(projectile, item, target) {};
Item.iconOverrideFunctions = {};
Item.registerIconOverrideFunction = function(namedID, func) {};
Item.onIconOverride = function(item) {};
Item.nameOverrideFunctions = {};
Item.registerNameOverrideFunction = function(namedID, func) {};
Item.onNameOverride = function(item, name, translation) {};
Item.noTargetUseFunctions = {};
Item.registerNoTargetUseFunction = function(namedID, func) {};
Item.onUseNoTarget = function(item) {};
Item.usingReleasedFunctions = {};
Item.registerUsingReleasedFunction = function(namedID, func) {};
Item.onUsingReleased = function(item, ticks) {};
Item.usingCompleteFunctions = {};
Item.registerUsingCompleteFunction = function(namedID, func) {};
Item.onUsingComplete = function(item) {};
Item.dispenseFunctions = {};
Item.registerDispenseFunction = function(namedID, func) {};
Item.onDispense = function(coords, item) {};
Item.TYPE_BASE = "createItem";
Item.TYPE_FOOD = "createFoodItem";
Item.TYPE_ARMOR = "createArmorItem";
Item.TYPE_THROWABLE = "createThrowableItem";
Item.setPrototype = function(namedID, Prototype) {/* Cannot read property "__validItemTypes" from undefined */};

var Recipes = {};

var ToolAPI = {};
ToolAPI.blockMaterials = {};
ToolAPI.blockMaterials.stone = {};
ToolAPI.blockMaterials.stone.multiplier = 3.3333333333333335;
ToolAPI.blockMaterials.stone.name = "stone";
ToolAPI.blockMaterials.wood = {};
ToolAPI.blockMaterials.wood.multiplier = 1;
ToolAPI.blockMaterials.wood.name = "wood";
ToolAPI.blockMaterials.dirt = {};
ToolAPI.blockMaterials.dirt.multiplier = 1;
ToolAPI.blockMaterials.dirt.name = "dirt";
ToolAPI.blockMaterials.plant = {};
ToolAPI.blockMaterials.plant.multiplier = 1;
ToolAPI.blockMaterials.plant.name = "plant";
ToolAPI.blockMaterials.fibre = {};
ToolAPI.blockMaterials.fibre.multiplier = 1;
ToolAPI.blockMaterials.fibre.name = "fibre";
ToolAPI.blockMaterials.cobweb = {};
ToolAPI.blockMaterials.cobweb.multiplier = 3.3333333333333335;
ToolAPI.blockMaterials.cobweb.name = "cobweb";
ToolAPI.blockMaterials.unbreaking = {};
ToolAPI.blockMaterials.unbreaking.multiplier = 999999999;
ToolAPI.blockMaterials.unbreaking.name = "unbreaking";
ToolAPI.toolMaterials = {};
ToolAPI.toolMaterials.wood = {};
ToolAPI.toolMaterials.wood.level = 1;
ToolAPI.toolMaterials.wood.durability = 60;
ToolAPI.toolMaterials.wood.damage = 2;
ToolAPI.toolMaterials.wood.efficiency = 2;
ToolAPI.toolMaterials.wood.name = "wood";
ToolAPI.toolMaterials.stone = {};
ToolAPI.toolMaterials.stone.level = 2;
ToolAPI.toolMaterials.stone.durability = 132;
ToolAPI.toolMaterials.stone.damage = 3;
ToolAPI.toolMaterials.stone.efficiency = 4;
ToolAPI.toolMaterials.stone.name = "stone";
ToolAPI.toolMaterials.iron = {};
ToolAPI.toolMaterials.iron.level = 3;
ToolAPI.toolMaterials.iron.durability = 251;
ToolAPI.toolMaterials.iron.damage = 4;
ToolAPI.toolMaterials.iron.efficiency = 6;
ToolAPI.toolMaterials.iron.name = "iron";
ToolAPI.toolMaterials.golden = {};
ToolAPI.toolMaterials.golden.level = 1;
ToolAPI.toolMaterials.golden.durability = 33;
ToolAPI.toolMaterials.golden.damage = 2;
ToolAPI.toolMaterials.golden.efficiency = 12;
ToolAPI.toolMaterials.golden.name = "golden";
ToolAPI.toolMaterials.diamond = {};
ToolAPI.toolMaterials.diamond.level = 4;
ToolAPI.toolMaterials.diamond.durability = 1562;
ToolAPI.toolMaterials.diamond.damage = 5;
ToolAPI.toolMaterials.diamond.efficiency = 8;
ToolAPI.toolMaterials.diamond.name = "diamond";
ToolAPI.toolData = {};
ToolAPI.toolData.270 = {};
ToolAPI.toolData.270.isNative = true;
ToolAPI.toolData.270.damage = 1;
ToolAPI.toolData.270.brokenId = 0;
ToolAPI.toolData.270.toolMaterial = {};
ToolAPI.toolData.270.toolMaterial.level = 1;
ToolAPI.toolData.270.toolMaterial.durability = 60;
ToolAPI.toolData.270.toolMaterial.damage = 2;
ToolAPI.toolData.270.toolMaterial.efficiency = 2;
ToolAPI.toolData.270.toolMaterial.name = "wood";
ToolAPI.toolData.270.blockMaterials = {};
ToolAPI.toolData.270.blockMaterials.stone = true;
ToolAPI.toolData.270.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.274 = {};
ToolAPI.toolData.274.isNative = true;
ToolAPI.toolData.274.damage = 1;
ToolAPI.toolData.274.brokenId = 0;
ToolAPI.toolData.274.toolMaterial = {};
ToolAPI.toolData.274.toolMaterial.level = 2;
ToolAPI.toolData.274.toolMaterial.durability = 132;
ToolAPI.toolData.274.toolMaterial.damage = 3;
ToolAPI.toolData.274.toolMaterial.efficiency = 4;
ToolAPI.toolData.274.toolMaterial.name = "stone";
ToolAPI.toolData.274.blockMaterials = {};
ToolAPI.toolData.274.blockMaterials.stone = true;
ToolAPI.toolData.274.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.257 = {};
ToolAPI.toolData.257.isNative = true;
ToolAPI.toolData.257.damage = 1;
ToolAPI.toolData.257.brokenId = 0;
ToolAPI.toolData.257.toolMaterial = {};
ToolAPI.toolData.257.toolMaterial.level = 3;
ToolAPI.toolData.257.toolMaterial.durability = 251;
ToolAPI.toolData.257.toolMaterial.damage = 4;
ToolAPI.toolData.257.toolMaterial.efficiency = 6;
ToolAPI.toolData.257.toolMaterial.name = "iron";
ToolAPI.toolData.257.blockMaterials = {};
ToolAPI.toolData.257.blockMaterials.stone = true;
ToolAPI.toolData.257.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.285 = {};
ToolAPI.toolData.285.isNative = true;
ToolAPI.toolData.285.damage = 1;
ToolAPI.toolData.285.brokenId = 0;
ToolAPI.toolData.285.toolMaterial = {};
ToolAPI.toolData.285.toolMaterial.level = 1;
ToolAPI.toolData.285.toolMaterial.durability = 33;
ToolAPI.toolData.285.toolMaterial.damage = 2;
ToolAPI.toolData.285.toolMaterial.efficiency = 12;
ToolAPI.toolData.285.toolMaterial.name = "golden";
ToolAPI.toolData.285.blockMaterials = {};
ToolAPI.toolData.285.blockMaterials.stone = true;
ToolAPI.toolData.285.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.278 = {};
ToolAPI.toolData.278.isNative = true;
ToolAPI.toolData.278.damage = 1;
ToolAPI.toolData.278.brokenId = 0;
ToolAPI.toolData.278.toolMaterial = {};
ToolAPI.toolData.278.toolMaterial.level = 4;
ToolAPI.toolData.278.toolMaterial.durability = 1562;
ToolAPI.toolData.278.toolMaterial.damage = 5;
ToolAPI.toolData.278.toolMaterial.efficiency = 8;
ToolAPI.toolData.278.toolMaterial.name = "diamond";
ToolAPI.toolData.278.blockMaterials = {};
ToolAPI.toolData.278.blockMaterials.stone = true;
ToolAPI.toolData.278.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.271 = {};
ToolAPI.toolData.271.isNative = true;
ToolAPI.toolData.271.damage = 2;
ToolAPI.toolData.271.brokenId = 0;
ToolAPI.toolData.271.toolMaterial = {};
ToolAPI.toolData.271.toolMaterial.level = 1;
ToolAPI.toolData.271.toolMaterial.durability = 60;
ToolAPI.toolData.271.toolMaterial.damage = 2;
ToolAPI.toolData.271.toolMaterial.efficiency = 2;
ToolAPI.toolData.271.toolMaterial.name = "wood";
ToolAPI.toolData.271.blockMaterials = {};
ToolAPI.toolData.271.blockMaterials.wood = true;
ToolAPI.toolData.271.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.275 = {};
ToolAPI.toolData.275.isNative = true;
ToolAPI.toolData.275.damage = 2;
ToolAPI.toolData.275.brokenId = 0;
ToolAPI.toolData.275.toolMaterial = {};
ToolAPI.toolData.275.toolMaterial.level = 2;
ToolAPI.toolData.275.toolMaterial.durability = 132;
ToolAPI.toolData.275.toolMaterial.damage = 3;
ToolAPI.toolData.275.toolMaterial.efficiency = 4;
ToolAPI.toolData.275.toolMaterial.name = "stone";
ToolAPI.toolData.275.blockMaterials = {};
ToolAPI.toolData.275.blockMaterials.wood = true;
ToolAPI.toolData.275.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.258 = {};
ToolAPI.toolData.258.isNative = true;
ToolAPI.toolData.258.damage = 2;
ToolAPI.toolData.258.brokenId = 0;
ToolAPI.toolData.258.toolMaterial = {};
ToolAPI.toolData.258.toolMaterial.level = 3;
ToolAPI.toolData.258.toolMaterial.durability = 251;
ToolAPI.toolData.258.toolMaterial.damage = 4;
ToolAPI.toolData.258.toolMaterial.efficiency = 6;
ToolAPI.toolData.258.toolMaterial.name = "iron";
ToolAPI.toolData.258.blockMaterials = {};
ToolAPI.toolData.258.blockMaterials.wood = true;
ToolAPI.toolData.258.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.286 = {};
ToolAPI.toolData.286.isNative = true;
ToolAPI.toolData.286.damage = 2;
ToolAPI.toolData.286.brokenId = 0;
ToolAPI.toolData.286.toolMaterial = {};
ToolAPI.toolData.286.toolMaterial.level = 1;
ToolAPI.toolData.286.toolMaterial.durability = 33;
ToolAPI.toolData.286.toolMaterial.damage = 2;
ToolAPI.toolData.286.toolMaterial.efficiency = 12;
ToolAPI.toolData.286.toolMaterial.name = "golden";
ToolAPI.toolData.286.blockMaterials = {};
ToolAPI.toolData.286.blockMaterials.wood = true;
ToolAPI.toolData.286.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.279 = {};
ToolAPI.toolData.279.isNative = true;
ToolAPI.toolData.279.damage = 2;
ToolAPI.toolData.279.brokenId = 0;
ToolAPI.toolData.279.toolMaterial = {};
ToolAPI.toolData.279.toolMaterial.level = 4;
ToolAPI.toolData.279.toolMaterial.durability = 1562;
ToolAPI.toolData.279.toolMaterial.damage = 5;
ToolAPI.toolData.279.toolMaterial.efficiency = 8;
ToolAPI.toolData.279.toolMaterial.name = "diamond";
ToolAPI.toolData.279.blockMaterials = {};
ToolAPI.toolData.279.blockMaterials.wood = true;
ToolAPI.toolData.279.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.269 = {};
ToolAPI.toolData.269.isNative = true;
ToolAPI.toolData.269.damage = 0;
ToolAPI.toolData.269.brokenId = 0;
ToolAPI.toolData.269.toolMaterial = {};
ToolAPI.toolData.269.toolMaterial.level = 1;
ToolAPI.toolData.269.toolMaterial.durability = 60;
ToolAPI.toolData.269.toolMaterial.damage = 2;
ToolAPI.toolData.269.toolMaterial.efficiency = 2;
ToolAPI.toolData.269.toolMaterial.name = "wood";
ToolAPI.toolData.269.blockMaterials = {};
ToolAPI.toolData.269.blockMaterials.dirt = true;
ToolAPI.toolData.269.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.273 = {};
ToolAPI.toolData.273.isNative = true;
ToolAPI.toolData.273.damage = 0;
ToolAPI.toolData.273.brokenId = 0;
ToolAPI.toolData.273.toolMaterial = {};
ToolAPI.toolData.273.toolMaterial.level = 2;
ToolAPI.toolData.273.toolMaterial.durability = 132;
ToolAPI.toolData.273.toolMaterial.damage = 3;
ToolAPI.toolData.273.toolMaterial.efficiency = 4;
ToolAPI.toolData.273.toolMaterial.name = "stone";
ToolAPI.toolData.273.blockMaterials = {};
ToolAPI.toolData.273.blockMaterials.dirt = true;
ToolAPI.toolData.273.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.256 = {};
ToolAPI.toolData.256.isNative = true;
ToolAPI.toolData.256.damage = 0;
ToolAPI.toolData.256.brokenId = 0;
ToolAPI.toolData.256.toolMaterial = {};
ToolAPI.toolData.256.toolMaterial.level = 3;
ToolAPI.toolData.256.toolMaterial.durability = 251;
ToolAPI.toolData.256.toolMaterial.damage = 4;
ToolAPI.toolData.256.toolMaterial.efficiency = 6;
ToolAPI.toolData.256.toolMaterial.name = "iron";
ToolAPI.toolData.256.blockMaterials = {};
ToolAPI.toolData.256.blockMaterials.dirt = true;
ToolAPI.toolData.256.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.284 = {};
ToolAPI.toolData.284.isNative = true;
ToolAPI.toolData.284.damage = 0;
ToolAPI.toolData.284.brokenId = 0;
ToolAPI.toolData.284.toolMaterial = {};
ToolAPI.toolData.284.toolMaterial.level = 1;
ToolAPI.toolData.284.toolMaterial.durability = 33;
ToolAPI.toolData.284.toolMaterial.damage = 2;
ToolAPI.toolData.284.toolMaterial.efficiency = 12;
ToolAPI.toolData.284.toolMaterial.name = "golden";
ToolAPI.toolData.284.blockMaterials = {};
ToolAPI.toolData.284.blockMaterials.dirt = true;
ToolAPI.toolData.284.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.toolData.277 = {};
ToolAPI.toolData.277.isNative = true;
ToolAPI.toolData.277.damage = 0;
ToolAPI.toolData.277.brokenId = 0;
ToolAPI.toolData.277.toolMaterial = {};
ToolAPI.toolData.277.toolMaterial.level = 4;
ToolAPI.toolData.277.toolMaterial.durability = 1562;
ToolAPI.toolData.277.toolMaterial.damage = 5;
ToolAPI.toolData.277.toolMaterial.efficiency = 8;
ToolAPI.toolData.277.toolMaterial.name = "diamond";
ToolAPI.toolData.277.blockMaterials = {};
ToolAPI.toolData.277.blockMaterials.dirt = true;
ToolAPI.toolData.277.calcDestroyTime = function(tool, coords, block, timeData, defaultTime) {};
ToolAPI.blockData = {};
ToolAPI.blockData.1 = {};
ToolAPI.blockData.1.material = {};
ToolAPI.blockData.1.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.1.material.name = "stone";
ToolAPI.blockData.1.level = 1;
ToolAPI.blockData.1.isNative = true;
ToolAPI.blockData.4 = {};
ToolAPI.blockData.4.material = {};
ToolAPI.blockData.4.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.4.material.name = "stone";
ToolAPI.blockData.4.level = 1;
ToolAPI.blockData.4.isNative = true;
ToolAPI.blockData.14 = {};
ToolAPI.blockData.14.material = {};
ToolAPI.blockData.14.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.14.material.name = "stone";
ToolAPI.blockData.14.level = 3;
ToolAPI.blockData.14.isNative = true;
ToolAPI.blockData.15 = {};
ToolAPI.blockData.15.material = {};
ToolAPI.blockData.15.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.15.material.name = "stone";
ToolAPI.blockData.15.level = 2;
ToolAPI.blockData.15.isNative = true;
ToolAPI.blockData.16 = {};
ToolAPI.blockData.16.material = {};
ToolAPI.blockData.16.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.16.material.name = "stone";
ToolAPI.blockData.16.level = 1;
ToolAPI.blockData.16.isNative = true;
ToolAPI.blockData.21 = {};
ToolAPI.blockData.21.material = {};
ToolAPI.blockData.21.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.21.material.name = "stone";
ToolAPI.blockData.21.level = 2;
ToolAPI.blockData.21.isNative = true;
ToolAPI.blockData.22 = {};
ToolAPI.blockData.22.material = {};
ToolAPI.blockData.22.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.22.material.name = "stone";
ToolAPI.blockData.22.level = 2;
ToolAPI.blockData.22.isNative = true;
ToolAPI.blockData.23 = {};
ToolAPI.blockData.23.material = {};
ToolAPI.blockData.23.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.23.material.name = "stone";
ToolAPI.blockData.23.level = 0;
ToolAPI.blockData.23.isNative = true;
ToolAPI.blockData.24 = {};
ToolAPI.blockData.24.material = {};
ToolAPI.blockData.24.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.24.material.name = "stone";
ToolAPI.blockData.24.level = 1;
ToolAPI.blockData.24.isNative = true;
ToolAPI.blockData.27 = {};
ToolAPI.blockData.27.material = {};
ToolAPI.blockData.27.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.27.material.name = "stone";
ToolAPI.blockData.27.level = 0;
ToolAPI.blockData.27.isNative = true;
ToolAPI.blockData.28 = {};
ToolAPI.blockData.28.material = {};
ToolAPI.blockData.28.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.28.material.name = "stone";
ToolAPI.blockData.28.level = 0;
ToolAPI.blockData.28.isNative = true;
ToolAPI.blockData.29 = {};
ToolAPI.blockData.29.material = {};
ToolAPI.blockData.29.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.29.material.name = "stone";
ToolAPI.blockData.29.level = 0;
ToolAPI.blockData.29.isNative = true;
ToolAPI.blockData.33 = {};
ToolAPI.blockData.33.material = {};
ToolAPI.blockData.33.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.33.material.name = "stone";
ToolAPI.blockData.33.level = 0;
ToolAPI.blockData.33.isNative = true;
ToolAPI.blockData.41 = {};
ToolAPI.blockData.41.material = {};
ToolAPI.blockData.41.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.41.material.name = "stone";
ToolAPI.blockData.41.level = 3;
ToolAPI.blockData.41.isNative = true;
ToolAPI.blockData.42 = {};
ToolAPI.blockData.42.material = {};
ToolAPI.blockData.42.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.42.material.name = "stone";
ToolAPI.blockData.42.level = 2;
ToolAPI.blockData.42.isNative = true;
ToolAPI.blockData.43 = {};
ToolAPI.blockData.43.material = {};
ToolAPI.blockData.43.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.43.material.name = "stone";
ToolAPI.blockData.43.level = 1;
ToolAPI.blockData.43.isNative = true;
ToolAPI.blockData.44 = {};
ToolAPI.blockData.44.material = {};
ToolAPI.blockData.44.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.44.material.name = "stone";
ToolAPI.blockData.44.level = 1;
ToolAPI.blockData.44.isNative = true;
ToolAPI.blockData.45 = {};
ToolAPI.blockData.45.material = {};
ToolAPI.blockData.45.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.45.material.name = "stone";
ToolAPI.blockData.45.level = 1;
ToolAPI.blockData.45.isNative = true;
ToolAPI.blockData.48 = {};
ToolAPI.blockData.48.material = {};
ToolAPI.blockData.48.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.48.material.name = "stone";
ToolAPI.blockData.48.level = 1;
ToolAPI.blockData.48.isNative = true;
ToolAPI.blockData.49 = {};
ToolAPI.blockData.49.material = {};
ToolAPI.blockData.49.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.49.material.name = "stone";
ToolAPI.blockData.49.level = 4;
ToolAPI.blockData.49.isNative = true;
ToolAPI.blockData.52 = {};
ToolAPI.blockData.52.material = {};
ToolAPI.blockData.52.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.52.material.name = "stone";
ToolAPI.blockData.52.level = 1;
ToolAPI.blockData.52.isNative = true;
ToolAPI.blockData.56 = {};
ToolAPI.blockData.56.material = {};
ToolAPI.blockData.56.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.56.material.name = "stone";
ToolAPI.blockData.56.level = 3;
ToolAPI.blockData.56.isNative = true;
ToolAPI.blockData.57 = {};
ToolAPI.blockData.57.material = {};
ToolAPI.blockData.57.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.57.material.name = "stone";
ToolAPI.blockData.57.level = 3;
ToolAPI.blockData.57.isNative = true;
ToolAPI.blockData.61 = {};
ToolAPI.blockData.61.material = {};
ToolAPI.blockData.61.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.61.material.name = "stone";
ToolAPI.blockData.61.level = 1;
ToolAPI.blockData.61.isNative = true;
ToolAPI.blockData.62 = {};
ToolAPI.blockData.62.material = {};
ToolAPI.blockData.62.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.62.material.name = "stone";
ToolAPI.blockData.62.level = 1;
ToolAPI.blockData.62.isNative = true;
ToolAPI.blockData.66 = {};
ToolAPI.blockData.66.material = {};
ToolAPI.blockData.66.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.66.material.name = "stone";
ToolAPI.blockData.66.level = 0;
ToolAPI.blockData.66.isNative = true;
ToolAPI.blockData.67 = {};
ToolAPI.blockData.67.material = {};
ToolAPI.blockData.67.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.67.material.name = "stone";
ToolAPI.blockData.67.level = 1;
ToolAPI.blockData.67.isNative = true;
ToolAPI.blockData.70 = {};
ToolAPI.blockData.70.material = {};
ToolAPI.blockData.70.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.70.material.name = "stone";
ToolAPI.blockData.70.level = 1;
ToolAPI.blockData.70.isNative = true;
ToolAPI.blockData.71 = {};
ToolAPI.blockData.71.material = {};
ToolAPI.blockData.71.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.71.material.name = "stone";
ToolAPI.blockData.71.level = 2;
ToolAPI.blockData.71.isNative = true;
ToolAPI.blockData.73 = {};
ToolAPI.blockData.73.material = {};
ToolAPI.blockData.73.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.73.material.name = "stone";
ToolAPI.blockData.73.level = 3;
ToolAPI.blockData.73.isNative = true;
ToolAPI.blockData.74 = {};
ToolAPI.blockData.74.material = {};
ToolAPI.blockData.74.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.74.material.name = "stone";
ToolAPI.blockData.74.level = 3;
ToolAPI.blockData.74.isNative = true;
ToolAPI.blockData.77 = {};
ToolAPI.blockData.77.material = {};
ToolAPI.blockData.77.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.77.material.name = "stone";
ToolAPI.blockData.77.level = 0;
ToolAPI.blockData.77.isNative = true;
ToolAPI.blockData.79 = {};
ToolAPI.blockData.79.material = {};
ToolAPI.blockData.79.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.79.material.name = "stone";
ToolAPI.blockData.79.level = 0;
ToolAPI.blockData.79.isNative = true;
ToolAPI.blockData.87 = {};
ToolAPI.blockData.87.material = {};
ToolAPI.blockData.87.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.87.material.name = "stone";
ToolAPI.blockData.87.level = 1;
ToolAPI.blockData.87.isNative = true;
ToolAPI.blockData.89 = {};
ToolAPI.blockData.89.material = {};
ToolAPI.blockData.89.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.89.material.name = "stone";
ToolAPI.blockData.89.level = 0;
ToolAPI.blockData.89.isNative = true;
ToolAPI.blockData.97 = {};
ToolAPI.blockData.97.material = {};
ToolAPI.blockData.97.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.97.material.name = "stone";
ToolAPI.blockData.97.level = 0;
ToolAPI.blockData.97.isNative = true;
ToolAPI.blockData.98 = {};
ToolAPI.blockData.98.material = {};
ToolAPI.blockData.98.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.98.material.name = "stone";
ToolAPI.blockData.98.level = 1;
ToolAPI.blockData.98.isNative = true;
ToolAPI.blockData.101 = {};
ToolAPI.blockData.101.material = {};
ToolAPI.blockData.101.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.101.material.name = "stone";
ToolAPI.blockData.101.level = 2;
ToolAPI.blockData.101.isNative = true;
ToolAPI.blockData.108 = {};
ToolAPI.blockData.108.material = {};
ToolAPI.blockData.108.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.108.material.name = "stone";
ToolAPI.blockData.108.level = 1;
ToolAPI.blockData.108.isNative = true;
ToolAPI.blockData.109 = {};
ToolAPI.blockData.109.material = {};
ToolAPI.blockData.109.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.109.material.name = "stone";
ToolAPI.blockData.109.level = 1;
ToolAPI.blockData.109.isNative = true;
ToolAPI.blockData.112 = {};
ToolAPI.blockData.112.material = {};
ToolAPI.blockData.112.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.112.material.name = "stone";
ToolAPI.blockData.112.level = 1;
ToolAPI.blockData.112.isNative = true;
ToolAPI.blockData.113 = {};
ToolAPI.blockData.113.material = {};
ToolAPI.blockData.113.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.113.material.name = "stone";
ToolAPI.blockData.113.level = 1;
ToolAPI.blockData.113.isNative = true;
ToolAPI.blockData.114 = {};
ToolAPI.blockData.114.material = {};
ToolAPI.blockData.114.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.114.material.name = "stone";
ToolAPI.blockData.114.level = 1;
ToolAPI.blockData.114.isNative = true;
ToolAPI.blockData.116 = {};
ToolAPI.blockData.116.material = {};
ToolAPI.blockData.116.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.116.material.name = "stone";
ToolAPI.blockData.116.level = 2;
ToolAPI.blockData.116.isNative = true;
ToolAPI.blockData.117 = {};
ToolAPI.blockData.117.material = {};
ToolAPI.blockData.117.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.117.material.name = "stone";
ToolAPI.blockData.117.level = 1;
ToolAPI.blockData.117.isNative = true;
ToolAPI.blockData.118 = {};
ToolAPI.blockData.118.material = {};
ToolAPI.blockData.118.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.118.material.name = "stone";
ToolAPI.blockData.118.level = 1;
ToolAPI.blockData.118.isNative = true;
ToolAPI.blockData.120 = {};
ToolAPI.blockData.120.material = {};
ToolAPI.blockData.120.material.multiplier = 999999999;
ToolAPI.blockData.120.material.name = "unbreaking";
ToolAPI.blockData.120.level = 0;
ToolAPI.blockData.120.isNative = true;
ToolAPI.blockData.121 = {};
ToolAPI.blockData.121.material = {};
ToolAPI.blockData.121.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.121.material.name = "stone";
ToolAPI.blockData.121.level = 2;
ToolAPI.blockData.121.isNative = true;
ToolAPI.blockData.123 = {};
ToolAPI.blockData.123.material = {};
ToolAPI.blockData.123.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.123.material.name = "stone";
ToolAPI.blockData.123.level = 0;
ToolAPI.blockData.123.isNative = true;
ToolAPI.blockData.124 = {};
ToolAPI.blockData.124.material = {};
ToolAPI.blockData.124.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.124.material.name = "stone";
ToolAPI.blockData.124.level = 0;
ToolAPI.blockData.124.isNative = true;
ToolAPI.blockData.125 = {};
ToolAPI.blockData.125.material = {};
ToolAPI.blockData.125.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.125.material.name = "stone";
ToolAPI.blockData.125.level = 1;
ToolAPI.blockData.125.isNative = true;
ToolAPI.blockData.126 = {};
ToolAPI.blockData.126.material = {};
ToolAPI.blockData.126.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.126.material.name = "stone";
ToolAPI.blockData.126.level = 0;
ToolAPI.blockData.126.isNative = true;
ToolAPI.blockData.128 = {};
ToolAPI.blockData.128.material = {};
ToolAPI.blockData.128.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.128.material.name = "stone";
ToolAPI.blockData.128.level = 1;
ToolAPI.blockData.128.isNative = true;
ToolAPI.blockData.129 = {};
ToolAPI.blockData.129.material = {};
ToolAPI.blockData.129.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.129.material.name = "stone";
ToolAPI.blockData.129.level = 3;
ToolAPI.blockData.129.isNative = true;
ToolAPI.blockData.130 = {};
ToolAPI.blockData.130.material = {};
ToolAPI.blockData.130.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.130.material.name = "stone";
ToolAPI.blockData.130.level = 1;
ToolAPI.blockData.130.isNative = true;
ToolAPI.blockData.133 = {};
ToolAPI.blockData.133.material = {};
ToolAPI.blockData.133.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.133.material.name = "stone";
ToolAPI.blockData.133.level = 3;
ToolAPI.blockData.133.isNative = true;
ToolAPI.blockData.138 = {};
ToolAPI.blockData.138.material = {};
ToolAPI.blockData.138.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.138.material.name = "stone";
ToolAPI.blockData.138.level = 0;
ToolAPI.blockData.138.isNative = true;
ToolAPI.blockData.139 = {};
ToolAPI.blockData.139.material = {};
ToolAPI.blockData.139.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.139.material.name = "stone";
ToolAPI.blockData.139.level = 1;
ToolAPI.blockData.139.isNative = true;
ToolAPI.blockData.145 = {};
ToolAPI.blockData.145.material = {};
ToolAPI.blockData.145.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.145.material.name = "stone";
ToolAPI.blockData.145.level = 0;
ToolAPI.blockData.145.isNative = true;
ToolAPI.blockData.147 = {};
ToolAPI.blockData.147.material = {};
ToolAPI.blockData.147.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.147.material.name = "stone";
ToolAPI.blockData.147.level = 1;
ToolAPI.blockData.147.isNative = true;
ToolAPI.blockData.148 = {};
ToolAPI.blockData.148.material = {};
ToolAPI.blockData.148.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.148.material.name = "stone";
ToolAPI.blockData.148.level = 1;
ToolAPI.blockData.148.isNative = true;
ToolAPI.blockData.152 = {};
ToolAPI.blockData.152.material = {};
ToolAPI.blockData.152.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.152.material.name = "stone";
ToolAPI.blockData.152.level = 1;
ToolAPI.blockData.152.isNative = true;
ToolAPI.blockData.153 = {};
ToolAPI.blockData.153.material = {};
ToolAPI.blockData.153.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.153.material.name = "stone";
ToolAPI.blockData.153.level = 2;
ToolAPI.blockData.153.isNative = true;
ToolAPI.blockData.154 = {};
ToolAPI.blockData.154.material = {};
ToolAPI.blockData.154.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.154.material.name = "stone";
ToolAPI.blockData.154.level = 1;
ToolAPI.blockData.154.isNative = true;
ToolAPI.blockData.155 = {};
ToolAPI.blockData.155.material = {};
ToolAPI.blockData.155.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.155.material.name = "stone";
ToolAPI.blockData.155.level = 1;
ToolAPI.blockData.155.isNative = true;
ToolAPI.blockData.156 = {};
ToolAPI.blockData.156.material = {};
ToolAPI.blockData.156.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.156.material.name = "stone";
ToolAPI.blockData.156.level = 1;
ToolAPI.blockData.156.isNative = true;
ToolAPI.blockData.159 = {};
ToolAPI.blockData.159.material = {};
ToolAPI.blockData.159.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.159.material.name = "stone";
ToolAPI.blockData.159.level = 1;
ToolAPI.blockData.159.isNative = true;
ToolAPI.blockData.167 = {};
ToolAPI.blockData.167.material = {};
ToolAPI.blockData.167.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.167.material.name = "stone";
ToolAPI.blockData.167.level = 2;
ToolAPI.blockData.167.isNative = true;
ToolAPI.blockData.168 = {};
ToolAPI.blockData.168.material = {};
ToolAPI.blockData.168.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.168.material.name = "stone";
ToolAPI.blockData.168.level = 1;
ToolAPI.blockData.168.isNative = true;
ToolAPI.blockData.172 = {};
ToolAPI.blockData.172.material = {};
ToolAPI.blockData.172.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.172.material.name = "stone";
ToolAPI.blockData.172.level = 1;
ToolAPI.blockData.172.isNative = true;
ToolAPI.blockData.173 = {};
ToolAPI.blockData.173.material = {};
ToolAPI.blockData.173.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.173.material.name = "stone";
ToolAPI.blockData.173.level = 1;
ToolAPI.blockData.173.isNative = true;
ToolAPI.blockData.174 = {};
ToolAPI.blockData.174.material = {};
ToolAPI.blockData.174.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.174.material.name = "stone";
ToolAPI.blockData.174.level = 0;
ToolAPI.blockData.174.isNative = true;
ToolAPI.blockData.179 = {};
ToolAPI.blockData.179.material = {};
ToolAPI.blockData.179.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.179.material.name = "stone";
ToolAPI.blockData.179.level = 1;
ToolAPI.blockData.179.isNative = true;
ToolAPI.blockData.180 = {};
ToolAPI.blockData.180.material = {};
ToolAPI.blockData.180.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.180.material.name = "stone";
ToolAPI.blockData.180.level = 1;
ToolAPI.blockData.180.isNative = true;
ToolAPI.blockData.181 = {};
ToolAPI.blockData.181.material = {};
ToolAPI.blockData.181.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.181.material.name = "stone";
ToolAPI.blockData.181.level = 1;
ToolAPI.blockData.181.isNative = true;
ToolAPI.blockData.182 = {};
ToolAPI.blockData.182.material = {};
ToolAPI.blockData.182.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.182.material.name = "stone";
ToolAPI.blockData.182.level = 1;
ToolAPI.blockData.182.isNative = true;
ToolAPI.blockData.201 = {};
ToolAPI.blockData.201.material = {};
ToolAPI.blockData.201.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.201.material.name = "stone";
ToolAPI.blockData.201.level = 1;
ToolAPI.blockData.201.isNative = true;
ToolAPI.blockData.203 = {};
ToolAPI.blockData.203.material = {};
ToolAPI.blockData.203.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.203.material.name = "stone";
ToolAPI.blockData.203.level = 1;
ToolAPI.blockData.203.isNative = true;
ToolAPI.blockData.205 = {};
ToolAPI.blockData.205.material = {};
ToolAPI.blockData.205.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.205.material.name = "stone";
ToolAPI.blockData.205.level = 0;
ToolAPI.blockData.205.isNative = true;
ToolAPI.blockData.206 = {};
ToolAPI.blockData.206.material = {};
ToolAPI.blockData.206.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.206.material.name = "stone";
ToolAPI.blockData.206.level = 1;
ToolAPI.blockData.206.isNative = true;
ToolAPI.blockData.213 = {};
ToolAPI.blockData.213.material = {};
ToolAPI.blockData.213.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.213.material.name = "stone";
ToolAPI.blockData.213.level = 1;
ToolAPI.blockData.213.isNative = true;
ToolAPI.blockData.215 = {};
ToolAPI.blockData.215.material = {};
ToolAPI.blockData.215.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.215.material.name = "stone";
ToolAPI.blockData.215.level = 1;
ToolAPI.blockData.215.isNative = true;
ToolAPI.blockData.216 = {};
ToolAPI.blockData.216.material = {};
ToolAPI.blockData.216.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.216.material.name = "stone";
ToolAPI.blockData.216.level = 1;
ToolAPI.blockData.216.isNative = true;
ToolAPI.blockData.218 = {};
ToolAPI.blockData.218.material = {};
ToolAPI.blockData.218.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.218.material.name = "stone";
ToolAPI.blockData.218.level = 0;
ToolAPI.blockData.218.isNative = true;
ToolAPI.blockData.219 = {};
ToolAPI.blockData.219.material = {};
ToolAPI.blockData.219.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.219.material.name = "stone";
ToolAPI.blockData.219.level = 1;
ToolAPI.blockData.219.isNative = true;
ToolAPI.blockData.220 = {};
ToolAPI.blockData.220.material = {};
ToolAPI.blockData.220.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.220.material.name = "stone";
ToolAPI.blockData.220.level = 1;
ToolAPI.blockData.220.isNative = true;
ToolAPI.blockData.221 = {};
ToolAPI.blockData.221.material = {};
ToolAPI.blockData.221.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.221.material.name = "stone";
ToolAPI.blockData.221.level = 1;
ToolAPI.blockData.221.isNative = true;
ToolAPI.blockData.222 = {};
ToolAPI.blockData.222.material = {};
ToolAPI.blockData.222.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.222.material.name = "stone";
ToolAPI.blockData.222.level = 1;
ToolAPI.blockData.222.isNative = true;
ToolAPI.blockData.223 = {};
ToolAPI.blockData.223.material = {};
ToolAPI.blockData.223.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.223.material.name = "stone";
ToolAPI.blockData.223.level = 1;
ToolAPI.blockData.223.isNative = true;
ToolAPI.blockData.224 = {};
ToolAPI.blockData.224.material = {};
ToolAPI.blockData.224.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.224.material.name = "stone";
ToolAPI.blockData.224.level = 1;
ToolAPI.blockData.224.isNative = true;
ToolAPI.blockData.225 = {};
ToolAPI.blockData.225.material = {};
ToolAPI.blockData.225.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.225.material.name = "stone";
ToolAPI.blockData.225.level = 1;
ToolAPI.blockData.225.isNative = true;
ToolAPI.blockData.226 = {};
ToolAPI.blockData.226.material = {};
ToolAPI.blockData.226.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.226.material.name = "stone";
ToolAPI.blockData.226.level = 1;
ToolAPI.blockData.226.isNative = true;
ToolAPI.blockData.227 = {};
ToolAPI.blockData.227.material = {};
ToolAPI.blockData.227.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.227.material.name = "stone";
ToolAPI.blockData.227.level = 1;
ToolAPI.blockData.227.isNative = true;
ToolAPI.blockData.228 = {};
ToolAPI.blockData.228.material = {};
ToolAPI.blockData.228.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.228.material.name = "stone";
ToolAPI.blockData.228.level = 1;
ToolAPI.blockData.228.isNative = true;
ToolAPI.blockData.229 = {};
ToolAPI.blockData.229.material = {};
ToolAPI.blockData.229.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.229.material.name = "stone";
ToolAPI.blockData.229.level = 1;
ToolAPI.blockData.229.isNative = true;
ToolAPI.blockData.231 = {};
ToolAPI.blockData.231.material = {};
ToolAPI.blockData.231.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.231.material.name = "stone";
ToolAPI.blockData.231.level = 1;
ToolAPI.blockData.231.isNative = true;
ToolAPI.blockData.232 = {};
ToolAPI.blockData.232.material = {};
ToolAPI.blockData.232.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.232.material.name = "stone";
ToolAPI.blockData.232.level = 1;
ToolAPI.blockData.232.isNative = true;
ToolAPI.blockData.233 = {};
ToolAPI.blockData.233.material = {};
ToolAPI.blockData.233.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.233.material.name = "stone";
ToolAPI.blockData.233.level = 1;
ToolAPI.blockData.233.isNative = true;
ToolAPI.blockData.234 = {};
ToolAPI.blockData.234.material = {};
ToolAPI.blockData.234.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.234.material.name = "stone";
ToolAPI.blockData.234.level = 1;
ToolAPI.blockData.234.isNative = true;
ToolAPI.blockData.235 = {};
ToolAPI.blockData.235.material = {};
ToolAPI.blockData.235.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.235.material.name = "stone";
ToolAPI.blockData.235.level = 1;
ToolAPI.blockData.235.isNative = true;
ToolAPI.blockData.236 = {};
ToolAPI.blockData.236.material = {};
ToolAPI.blockData.236.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.236.material.name = "stone";
ToolAPI.blockData.236.level = 1;
ToolAPI.blockData.236.isNative = true;
ToolAPI.blockData.245 = {};
ToolAPI.blockData.245.material = {};
ToolAPI.blockData.245.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.245.material.name = "stone";
ToolAPI.blockData.245.level = 1;
ToolAPI.blockData.245.isNative = true;
ToolAPI.blockData.251 = {};
ToolAPI.blockData.251.material = {};
ToolAPI.blockData.251.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.251.material.name = "stone";
ToolAPI.blockData.251.level = 1;
ToolAPI.blockData.251.isNative = true;
ToolAPI.blockData.257 = {};
ToolAPI.blockData.257.material = {};
ToolAPI.blockData.257.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.257.material.name = "stone";
ToolAPI.blockData.257.level = 1;
ToolAPI.blockData.257.isNative = true;
ToolAPI.blockData.258 = {};
ToolAPI.blockData.258.material = {};
ToolAPI.blockData.258.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.258.material.name = "stone";
ToolAPI.blockData.258.level = 1;
ToolAPI.blockData.258.isNative = true;
ToolAPI.blockData.259 = {};
ToolAPI.blockData.259.material = {};
ToolAPI.blockData.259.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.259.material.name = "stone";
ToolAPI.blockData.259.level = 1;
ToolAPI.blockData.259.isNative = true;
ToolAPI.blockData.266 = {};
ToolAPI.blockData.266.material = {};
ToolAPI.blockData.266.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.266.material.name = "stone";
ToolAPI.blockData.266.level = 0;
ToolAPI.blockData.266.isNative = true;
ToolAPI.blockData.387 = {};
ToolAPI.blockData.387.material = {};
ToolAPI.blockData.387.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.387.material.name = "stone";
ToolAPI.blockData.387.level = 0;
ToolAPI.blockData.387.isNative = true;
ToolAPI.blockData.412 = {};
ToolAPI.blockData.412.material = {};
ToolAPI.blockData.412.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.412.material.name = "stone";
ToolAPI.blockData.412.level = 0;
ToolAPI.blockData.412.isNative = true;
ToolAPI.blockData.417 = {};
ToolAPI.blockData.417.material = {};
ToolAPI.blockData.417.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.417.material.name = "stone";
ToolAPI.blockData.417.level = 1;
ToolAPI.blockData.417.isNative = true;
ToolAPI.blockData.421 = {};
ToolAPI.blockData.421.material = {};
ToolAPI.blockData.421.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.421.material.name = "stone";
ToolAPI.blockData.421.level = 1;
ToolAPI.blockData.421.isNative = true;
ToolAPI.blockData.422 = {};
ToolAPI.blockData.422.material = {};
ToolAPI.blockData.422.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.422.material.name = "stone";
ToolAPI.blockData.422.level = 1;
ToolAPI.blockData.422.isNative = true;
ToolAPI.blockData.423 = {};
ToolAPI.blockData.423.material = {};
ToolAPI.blockData.423.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.423.material.name = "stone";
ToolAPI.blockData.423.level = 0;
ToolAPI.blockData.423.isNative = true;
ToolAPI.blockData.424 = {};
ToolAPI.blockData.424.material = {};
ToolAPI.blockData.424.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.424.material.name = "stone";
ToolAPI.blockData.424.level = 1;
ToolAPI.blockData.424.isNative = true;
ToolAPI.blockData.425 = {};
ToolAPI.blockData.425.material = {};
ToolAPI.blockData.425.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.425.material.name = "stone";
ToolAPI.blockData.425.level = 1;
ToolAPI.blockData.425.isNative = true;
ToolAPI.blockData.426 = {};
ToolAPI.blockData.426.material = {};
ToolAPI.blockData.426.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.426.material.name = "stone";
ToolAPI.blockData.426.level = 1;
ToolAPI.blockData.426.isNative = true;
ToolAPI.blockData.427 = {};
ToolAPI.blockData.427.material = {};
ToolAPI.blockData.427.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.427.material.name = "stone";
ToolAPI.blockData.427.level = 1;
ToolAPI.blockData.427.isNative = true;
ToolAPI.blockData.428 = {};
ToolAPI.blockData.428.material = {};
ToolAPI.blockData.428.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.428.material.name = "stone";
ToolAPI.blockData.428.level = 1;
ToolAPI.blockData.428.isNative = true;
ToolAPI.blockData.429 = {};
ToolAPI.blockData.429.material = {};
ToolAPI.blockData.429.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.429.material.name = "stone";
ToolAPI.blockData.429.level = 1;
ToolAPI.blockData.429.isNative = true;
ToolAPI.blockData.430 = {};
ToolAPI.blockData.430.material = {};
ToolAPI.blockData.430.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.430.material.name = "stone";
ToolAPI.blockData.430.level = 1;
ToolAPI.blockData.430.isNative = true;
ToolAPI.blockData.431 = {};
ToolAPI.blockData.431.material = {};
ToolAPI.blockData.431.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.431.material.name = "stone";
ToolAPI.blockData.431.level = 1;
ToolAPI.blockData.431.isNative = true;
ToolAPI.blockData.432 = {};
ToolAPI.blockData.432.material = {};
ToolAPI.blockData.432.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.432.material.name = "stone";
ToolAPI.blockData.432.level = 1;
ToolAPI.blockData.432.isNative = true;
ToolAPI.blockData.433 = {};
ToolAPI.blockData.433.material = {};
ToolAPI.blockData.433.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.433.material.name = "stone";
ToolAPI.blockData.433.level = 1;
ToolAPI.blockData.433.isNative = true;
ToolAPI.blockData.434 = {};
ToolAPI.blockData.434.material = {};
ToolAPI.blockData.434.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.434.material.name = "stone";
ToolAPI.blockData.434.level = 1;
ToolAPI.blockData.434.isNative = true;
ToolAPI.blockData.435 = {};
ToolAPI.blockData.435.material = {};
ToolAPI.blockData.435.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.435.material.name = "stone";
ToolAPI.blockData.435.level = 1;
ToolAPI.blockData.435.isNative = true;
ToolAPI.blockData.438 = {};
ToolAPI.blockData.438.material = {};
ToolAPI.blockData.438.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.438.material.name = "stone";
ToolAPI.blockData.438.level = 1;
ToolAPI.blockData.438.isNative = true;
ToolAPI.blockData.439 = {};
ToolAPI.blockData.439.material = {};
ToolAPI.blockData.439.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.439.material.name = "stone";
ToolAPI.blockData.439.level = 1;
ToolAPI.blockData.439.isNative = true;
ToolAPI.blockData.440 = {};
ToolAPI.blockData.440.material = {};
ToolAPI.blockData.440.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.440.material.name = "stone";
ToolAPI.blockData.440.level = 1;
ToolAPI.blockData.440.isNative = true;
ToolAPI.blockData.450 = {};
ToolAPI.blockData.450.material = {};
ToolAPI.blockData.450.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.450.material.name = "stone";
ToolAPI.blockData.450.level = 1;
ToolAPI.blockData.450.isNative = true;
ToolAPI.blockData.451 = {};
ToolAPI.blockData.451.material = {};
ToolAPI.blockData.451.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.451.material.name = "stone";
ToolAPI.blockData.451.level = 1;
ToolAPI.blockData.451.isNative = true;
ToolAPI.blockData.469 = {};
ToolAPI.blockData.469.material = {};
ToolAPI.blockData.469.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.469.material.name = "stone";
ToolAPI.blockData.469.level = 1;
ToolAPI.blockData.469.isNative = true;
ToolAPI.blockData.452 = {};
ToolAPI.blockData.452.material = {};
ToolAPI.blockData.452.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.452.material.name = "stone";
ToolAPI.blockData.452.level = 1;
ToolAPI.blockData.452.isNative = true;
ToolAPI.blockData.453 = {};
ToolAPI.blockData.453.material = {};
ToolAPI.blockData.453.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.453.material.name = "stone";
ToolAPI.blockData.453.level = 1;
ToolAPI.blockData.453.isNative = true;
ToolAPI.blockData.454 = {};
ToolAPI.blockData.454.material = {};
ToolAPI.blockData.454.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.454.material.name = "stone";
ToolAPI.blockData.454.level = 1;
ToolAPI.blockData.454.isNative = true;
ToolAPI.blockData.461 = {};
ToolAPI.blockData.461.material = {};
ToolAPI.blockData.461.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.461.material.name = "stone";
ToolAPI.blockData.461.level = 1;
ToolAPI.blockData.461.isNative = true;
ToolAPI.blockData.463 = {};
ToolAPI.blockData.463.material = {};
ToolAPI.blockData.463.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.463.material.name = "stone";
ToolAPI.blockData.463.level = 1;
ToolAPI.blockData.463.isNative = true;
ToolAPI.blockData.465 = {};
ToolAPI.blockData.465.material = {};
ToolAPI.blockData.465.material.multiplier = 3.3333333333333335;
ToolAPI.blockData.465.material.name = "stone";
ToolAPI.blockData.465.level = 1;
ToolAPI.blockData.465.isNative = true;
ToolAPI.blockData.5 = {};
ToolAPI.blockData.5.material = {};
ToolAPI.blockData.5.material.multiplier = 1;
ToolAPI.blockData.5.material.name = "wood";
ToolAPI.blockData.5.level = 0;
ToolAPI.blockData.5.isNative = true;
ToolAPI.blockData.17 = {};
ToolAPI.blockData.17.material = {};
ToolAPI.blockData.17.material.multiplier = 1;
ToolAPI.blockData.17.material.name = "wood";
ToolAPI.blockData.17.level = 0;
ToolAPI.blockData.17.isNative = true;
ToolAPI.blockData.25 = {};
ToolAPI.blockData.25.material = {};
ToolAPI.blockData.25.material.multiplier = 1;
ToolAPI.blockData.25.material.name = "wood";
ToolAPI.blockData.25.level = 0;
ToolAPI.blockData.25.isNative = true;
ToolAPI.blockData.47 = {};
ToolAPI.blockData.47.material = {};
ToolAPI.blockData.47.material.multiplier = 1;
ToolAPI.blockData.47.material.name = "wood";
ToolAPI.blockData.47.level = 0;
ToolAPI.blockData.47.isNative = true;
ToolAPI.blockData.53 = {};
ToolAPI.blockData.53.material = {};
ToolAPI.blockData.53.material.multiplier = 1;
ToolAPI.blockData.53.material.name = "wood";
ToolAPI.blockData.53.level = 0;
ToolAPI.blockData.53.isNative = true;
ToolAPI.blockData.54 = {};
ToolAPI.blockData.54.material = {};
ToolAPI.blockData.54.material.multiplier = 1;
ToolAPI.blockData.54.material.name = "wood";
ToolAPI.blockData.54.level = 0;
ToolAPI.blockData.54.isNative = true;
ToolAPI.blockData.58 = {};
ToolAPI.blockData.58.material = {};
ToolAPI.blockData.58.material.multiplier = 1;
ToolAPI.blockData.58.material.name = "wood";
ToolAPI.blockData.58.level = 0;
ToolAPI.blockData.58.isNative = true;
ToolAPI.blockData.63 = {};
ToolAPI.blockData.63.material = {};
ToolAPI.blockData.63.material.multiplier = 1;
ToolAPI.blockData.63.material.name = "wood";
ToolAPI.blockData.63.level = 0;
ToolAPI.blockData.63.isNative = true;
ToolAPI.blockData.68 = {};
ToolAPI.blockData.68.material = {};
ToolAPI.blockData.68.material.multiplier = 1;
ToolAPI.blockData.68.material.name = "wood";
ToolAPI.blockData.68.level = 0;
ToolAPI.blockData.68.isNative = true;
ToolAPI.blockData.64 = {};
ToolAPI.blockData.64.material = {};
ToolAPI.blockData.64.material.multiplier = 1;
ToolAPI.blockData.64.material.name = "wood";
ToolAPI.blockData.64.level = 0;
ToolAPI.blockData.64.isNative = true;
ToolAPI.blockData.65 = {};
ToolAPI.blockData.65.material = {};
ToolAPI.blockData.65.material.multiplier = 1;
ToolAPI.blockData.65.material.name = "wood";
ToolAPI.blockData.65.level = 0;
ToolAPI.blockData.65.isNative = true;
ToolAPI.blockData.72 = {};
ToolAPI.blockData.72.material = {};
ToolAPI.blockData.72.material.multiplier = 1;
ToolAPI.blockData.72.material.name = "wood";
ToolAPI.blockData.72.level = 0;
ToolAPI.blockData.72.isNative = true;
ToolAPI.blockData.85 = {};
ToolAPI.blockData.85.material = {};
ToolAPI.blockData.85.material.multiplier = 1;
ToolAPI.blockData.85.material.name = "wood";
ToolAPI.blockData.85.level = 0;
ToolAPI.blockData.85.isNative = true;
ToolAPI.blockData.86 = {};
ToolAPI.blockData.86.material = {};
ToolAPI.blockData.86.material.multiplier = 1;
ToolAPI.blockData.86.material.name = "wood";
ToolAPI.blockData.86.level = 0;
ToolAPI.blockData.86.isNative = true;
ToolAPI.blockData.91 = {};
ToolAPI.blockData.91.material = {};
ToolAPI.blockData.91.material.multiplier = 1;
ToolAPI.blockData.91.material.name = "wood";
ToolAPI.blockData.91.level = 0;
ToolAPI.blockData.91.isNative = true;
ToolAPI.blockData.96 = {};
ToolAPI.blockData.96.material = {};
ToolAPI.blockData.96.material.multiplier = 1;
ToolAPI.blockData.96.material.name = "wood";
ToolAPI.blockData.96.level = 0;
ToolAPI.blockData.96.isNative = true;
ToolAPI.blockData.99 = {};
ToolAPI.blockData.99.material = {};
ToolAPI.blockData.99.material.multiplier = 1;
ToolAPI.blockData.99.material.name = "wood";
ToolAPI.blockData.99.level = 0;
ToolAPI.blockData.99.isNative = true;
ToolAPI.blockData.100 = {};
ToolAPI.blockData.100.material = {};
ToolAPI.blockData.100.material.multiplier = 1;
ToolAPI.blockData.100.material.name = "wood";
ToolAPI.blockData.100.level = 0;
ToolAPI.blockData.100.isNative = true;
ToolAPI.blockData.103 = {};
ToolAPI.blockData.103.material = {};
ToolAPI.blockData.103.material.multiplier = 1;
ToolAPI.blockData.103.material.name = "wood";
ToolAPI.blockData.103.level = 0;
ToolAPI.blockData.103.isNative = true;
ToolAPI.blockData.107 = {};
ToolAPI.blockData.107.material = {};
ToolAPI.blockData.107.material.multiplier = 1;
ToolAPI.blockData.107.material.name = "wood";
ToolAPI.blockData.107.level = 0;
ToolAPI.blockData.107.isNative = true;
ToolAPI.blockData.127 = {};
ToolAPI.blockData.127.material = {};
ToolAPI.blockData.127.material.multiplier = 1;
ToolAPI.blockData.127.material.name = "wood";
ToolAPI.blockData.127.level = 0;
ToolAPI.blockData.127.isNative = true;
ToolAPI.blockData.134 = {};
ToolAPI.blockData.134.material = {};
ToolAPI.blockData.134.material.multiplier = 1;
ToolAPI.blockData.134.material.name = "wood";
ToolAPI.blockData.134.level = 0;
ToolAPI.blockData.134.isNative = true;
ToolAPI.blockData.135 = {};
ToolAPI.blockData.135.material = {};
ToolAPI.blockData.135.material.multiplier = 1;
ToolAPI.blockData.135.material.name = "wood";
ToolAPI.blockData.135.level = 2;
ToolAPI.blockData.135.isNative = true;
ToolAPI.blockData.136 = {};
ToolAPI.blockData.136.material = {};
ToolAPI.blockData.136.material.multiplier = 1;
ToolAPI.blockData.136.material.name = "wood";
ToolAPI.blockData.136.level = 0;
ToolAPI.blockData.136.isNative = true;
ToolAPI.blockData.163 = {};
ToolAPI.blockData.163.material = {};
ToolAPI.blockData.163.material.multiplier = 1;
ToolAPI.blockData.163.material.name = "wood";
ToolAPI.blockData.163.level = 0;
ToolAPI.blockData.163.isNative = true;
ToolAPI.blockData.164 = {};
ToolAPI.blockData.164.material = {};
ToolAPI.blockData.164.material.multiplier = 1;
ToolAPI.blockData.164.material.name = "wood";
ToolAPI.blockData.164.level = 0;
ToolAPI.blockData.164.isNative = true;
ToolAPI.blockData.143 = {};
ToolAPI.blockData.143.material = {};
ToolAPI.blockData.143.material.multiplier = 1;
ToolAPI.blockData.143.material.name = "wood";
ToolAPI.blockData.143.level = 0;
ToolAPI.blockData.143.isNative = true;
ToolAPI.blockData.146 = {};
ToolAPI.blockData.146.material = {};
ToolAPI.blockData.146.material.multiplier = 1;
ToolAPI.blockData.146.material.name = "wood";
ToolAPI.blockData.146.level = 0;
ToolAPI.blockData.146.isNative = true;
ToolAPI.blockData.151 = {};
ToolAPI.blockData.151.material = {};
ToolAPI.blockData.151.material.multiplier = 1;
ToolAPI.blockData.151.material.name = "wood";
ToolAPI.blockData.151.level = 0;
ToolAPI.blockData.151.isNative = true;
ToolAPI.blockData.178 = {};
ToolAPI.blockData.178.material = {};
ToolAPI.blockData.178.material.multiplier = 1;
ToolAPI.blockData.178.material.name = "wood";
ToolAPI.blockData.178.level = 0;
ToolAPI.blockData.178.isNative = true;
ToolAPI.blockData.157 = {};
ToolAPI.blockData.157.material = {};
ToolAPI.blockData.157.material.multiplier = 1;
ToolAPI.blockData.157.material.name = "wood";
ToolAPI.blockData.157.level = 0;
ToolAPI.blockData.157.isNative = true;
ToolAPI.blockData.158 = {};
ToolAPI.blockData.158.material = {};
ToolAPI.blockData.158.material.multiplier = 1;
ToolAPI.blockData.158.material.name = "wood";
ToolAPI.blockData.158.level = 0;
ToolAPI.blockData.158.isNative = true;
ToolAPI.blockData.162 = {};
ToolAPI.blockData.162.material = {};
ToolAPI.blockData.162.material.multiplier = 1;
ToolAPI.blockData.162.material.name = "wood";
ToolAPI.blockData.162.level = 0;
ToolAPI.blockData.162.isNative = true;
ToolAPI.blockData.183 = {};
ToolAPI.blockData.183.material = {};
ToolAPI.blockData.183.material.multiplier = 1;
ToolAPI.blockData.183.material.name = "wood";
ToolAPI.blockData.183.level = 0;
ToolAPI.blockData.183.isNative = true;
ToolAPI.blockData.184 = {};
ToolAPI.blockData.184.material = {};
ToolAPI.blockData.184.material.multiplier = 1;
ToolAPI.blockData.184.material.name = "wood";
ToolAPI.blockData.184.level = 0;
ToolAPI.blockData.184.isNative = true;
ToolAPI.blockData.185 = {};
ToolAPI.blockData.185.material = {};
ToolAPI.blockData.185.material.multiplier = 1;
ToolAPI.blockData.185.material.name = "wood";
ToolAPI.blockData.185.level = 0;
ToolAPI.blockData.185.isNative = true;
ToolAPI.blockData.186 = {};
ToolAPI.blockData.186.material = {};
ToolAPI.blockData.186.material.multiplier = 1;
ToolAPI.blockData.186.material.name = "wood";
ToolAPI.blockData.186.level = 0;
ToolAPI.blockData.186.isNative = true;
ToolAPI.blockData.187 = {};
ToolAPI.blockData.187.material = {};
ToolAPI.blockData.187.material.multiplier = 1;
ToolAPI.blockData.187.material.name = "wood";
ToolAPI.blockData.187.level = 0;
ToolAPI.blockData.187.isNative = true;
ToolAPI.blockData.193 = {};
ToolAPI.blockData.193.material = {};
ToolAPI.blockData.193.material.multiplier = 1;
ToolAPI.blockData.193.material.name = "wood";
ToolAPI.blockData.193.level = 0;
ToolAPI.blockData.193.isNative = true;
ToolAPI.blockData.194 = {};
ToolAPI.blockData.194.material = {};
ToolAPI.blockData.194.material.multiplier = 1;
ToolAPI.blockData.194.material.name = "wood";
ToolAPI.blockData.194.level = 0;
ToolAPI.blockData.194.isNative = true;
ToolAPI.blockData.195 = {};
ToolAPI.blockData.195.material = {};
ToolAPI.blockData.195.material.multiplier = 1;
ToolAPI.blockData.195.material.name = "wood";
ToolAPI.blockData.195.level = 0;
ToolAPI.blockData.195.isNative = true;
ToolAPI.blockData.196 = {};
ToolAPI.blockData.196.material = {};
ToolAPI.blockData.196.material.multiplier = 1;
ToolAPI.blockData.196.material.name = "wood";
ToolAPI.blockData.196.level = 0;
ToolAPI.blockData.196.isNative = true;
ToolAPI.blockData.197 = {};
ToolAPI.blockData.197.material = {};
ToolAPI.blockData.197.material.multiplier = 1;
ToolAPI.blockData.197.material.name = "wood";
ToolAPI.blockData.197.level = 0;
ToolAPI.blockData.197.isNative = true;
ToolAPI.blockData.260 = {};
ToolAPI.blockData.260.material = {};
ToolAPI.blockData.260.material.multiplier = 1;
ToolAPI.blockData.260.material.name = "wood";
ToolAPI.blockData.260.level = 0;
ToolAPI.blockData.260.isNative = true;
ToolAPI.blockData.261 = {};
ToolAPI.blockData.261.material = {};
ToolAPI.blockData.261.material.multiplier = 1;
ToolAPI.blockData.261.material.name = "wood";
ToolAPI.blockData.261.level = 0;
ToolAPI.blockData.261.isNative = true;
ToolAPI.blockData.262 = {};
ToolAPI.blockData.262.material = {};
ToolAPI.blockData.262.material.multiplier = 1;
ToolAPI.blockData.262.material.name = "wood";
ToolAPI.blockData.262.level = 0;
ToolAPI.blockData.262.isNative = true;
ToolAPI.blockData.263 = {};
ToolAPI.blockData.263.material = {};
ToolAPI.blockData.263.material.multiplier = 1;
ToolAPI.blockData.263.material.name = "wood";
ToolAPI.blockData.263.level = 0;
ToolAPI.blockData.263.isNative = true;
ToolAPI.blockData.264 = {};
ToolAPI.blockData.264.material = {};
ToolAPI.blockData.264.material.multiplier = 1;
ToolAPI.blockData.264.material.name = "wood";
ToolAPI.blockData.264.level = 0;
ToolAPI.blockData.264.isNative = true;
ToolAPI.blockData.265 = {};
ToolAPI.blockData.265.material = {};
ToolAPI.blockData.265.material.multiplier = 1;
ToolAPI.blockData.265.material.name = "wood";
ToolAPI.blockData.265.level = 0;
ToolAPI.blockData.265.isNative = true;
ToolAPI.blockData.395 = {};
ToolAPI.blockData.395.material = {};
ToolAPI.blockData.395.material.multiplier = 1;
ToolAPI.blockData.395.material.name = "wood";
ToolAPI.blockData.395.level = 0;
ToolAPI.blockData.395.isNative = true;
ToolAPI.blockData.396 = {};
ToolAPI.blockData.396.material = {};
ToolAPI.blockData.396.material.multiplier = 1;
ToolAPI.blockData.396.material.name = "wood";
ToolAPI.blockData.396.level = 0;
ToolAPI.blockData.396.isNative = true;
ToolAPI.blockData.397 = {};
ToolAPI.blockData.397.material = {};
ToolAPI.blockData.397.material.multiplier = 1;
ToolAPI.blockData.397.material.name = "wood";
ToolAPI.blockData.397.level = 0;
ToolAPI.blockData.397.isNative = true;
ToolAPI.blockData.398 = {};
ToolAPI.blockData.398.material = {};
ToolAPI.blockData.398.material.multiplier = 1;
ToolAPI.blockData.398.material.name = "wood";
ToolAPI.blockData.398.level = 0;
ToolAPI.blockData.398.isNative = true;
ToolAPI.blockData.399 = {};
ToolAPI.blockData.399.material = {};
ToolAPI.blockData.399.material.multiplier = 1;
ToolAPI.blockData.399.material.name = "wood";
ToolAPI.blockData.399.level = 0;
ToolAPI.blockData.399.isNative = true;
ToolAPI.blockData.400 = {};
ToolAPI.blockData.400.material = {};
ToolAPI.blockData.400.material.multiplier = 1;
ToolAPI.blockData.400.material.name = "wood";
ToolAPI.blockData.400.level = 0;
ToolAPI.blockData.400.isNative = true;
ToolAPI.blockData.401 = {};
ToolAPI.blockData.401.material = {};
ToolAPI.blockData.401.material.multiplier = 1;
ToolAPI.blockData.401.material.name = "wood";
ToolAPI.blockData.401.level = 0;
ToolAPI.blockData.401.isNative = true;
ToolAPI.blockData.402 = {};
ToolAPI.blockData.402.material = {};
ToolAPI.blockData.402.material.multiplier = 1;
ToolAPI.blockData.402.material.name = "wood";
ToolAPI.blockData.402.level = 0;
ToolAPI.blockData.402.isNative = true;
ToolAPI.blockData.403 = {};
ToolAPI.blockData.403.material = {};
ToolAPI.blockData.403.material.multiplier = 1;
ToolAPI.blockData.403.material.name = "wood";
ToolAPI.blockData.403.level = 0;
ToolAPI.blockData.403.isNative = true;
ToolAPI.blockData.404 = {};
ToolAPI.blockData.404.material = {};
ToolAPI.blockData.404.material.multiplier = 1;
ToolAPI.blockData.404.material.name = "wood";
ToolAPI.blockData.404.level = 0;
ToolAPI.blockData.404.isNative = true;
ToolAPI.blockData.405 = {};
ToolAPI.blockData.405.material = {};
ToolAPI.blockData.405.material.multiplier = 1;
ToolAPI.blockData.405.material.name = "wood";
ToolAPI.blockData.405.level = 0;
ToolAPI.blockData.405.isNative = true;
ToolAPI.blockData.406 = {};
ToolAPI.blockData.406.material = {};
ToolAPI.blockData.406.material.multiplier = 1;
ToolAPI.blockData.406.material.name = "wood";
ToolAPI.blockData.406.level = 0;
ToolAPI.blockData.406.isNative = true;
ToolAPI.blockData.407 = {};
ToolAPI.blockData.407.material = {};
ToolAPI.blockData.407.material.multiplier = 1;
ToolAPI.blockData.407.material.name = "wood";
ToolAPI.blockData.407.level = 0;
ToolAPI.blockData.407.isNative = true;
ToolAPI.blockData.408 = {};
ToolAPI.blockData.408.material = {};
ToolAPI.blockData.408.material.multiplier = 1;
ToolAPI.blockData.408.material.name = "wood";
ToolAPI.blockData.408.level = 0;
ToolAPI.blockData.408.isNative = true;
ToolAPI.blockData.409 = {};
ToolAPI.blockData.409.material = {};
ToolAPI.blockData.409.material.multiplier = 1;
ToolAPI.blockData.409.material.name = "wood";
ToolAPI.blockData.409.level = 0;
ToolAPI.blockData.409.isNative = true;
ToolAPI.blockData.410 = {};
ToolAPI.blockData.410.material = {};
ToolAPI.blockData.410.material.multiplier = 1;
ToolAPI.blockData.410.material.name = "wood";
ToolAPI.blockData.410.level = 0;
ToolAPI.blockData.410.isNative = true;
ToolAPI.blockData.436 = {};
ToolAPI.blockData.436.material = {};
ToolAPI.blockData.436.material.multiplier = 1;
ToolAPI.blockData.436.material.name = "wood";
ToolAPI.blockData.436.level = 0;
ToolAPI.blockData.436.isNative = true;
ToolAPI.blockData.437 = {};
ToolAPI.blockData.437.material = {};
ToolAPI.blockData.437.material.multiplier = 1;
ToolAPI.blockData.437.material.name = "wood";
ToolAPI.blockData.437.level = 0;
ToolAPI.blockData.437.isNative = true;
ToolAPI.blockData.441 = {};
ToolAPI.blockData.441.material = {};
ToolAPI.blockData.441.material.multiplier = 1;
ToolAPI.blockData.441.material.name = "wood";
ToolAPI.blockData.441.level = 0;
ToolAPI.blockData.441.isNative = true;
ToolAPI.blockData.442 = {};
ToolAPI.blockData.442.material = {};
ToolAPI.blockData.442.material.multiplier = 1;
ToolAPI.blockData.442.material.name = "wood";
ToolAPI.blockData.442.level = 0;
ToolAPI.blockData.442.isNative = true;
ToolAPI.blockData.443 = {};
ToolAPI.blockData.443.material = {};
ToolAPI.blockData.443.material.multiplier = 1;
ToolAPI.blockData.443.material.name = "wood";
ToolAPI.blockData.443.level = 0;
ToolAPI.blockData.443.isNative = true;
ToolAPI.blockData.444 = {};
ToolAPI.blockData.444.material = {};
ToolAPI.blockData.444.material.multiplier = 1;
ToolAPI.blockData.444.material.name = "wood";
ToolAPI.blockData.444.level = 0;
ToolAPI.blockData.444.isNative = true;
ToolAPI.blockData.445 = {};
ToolAPI.blockData.445.material = {};
ToolAPI.blockData.445.material.multiplier = 1;
ToolAPI.blockData.445.material.name = "wood";
ToolAPI.blockData.445.level = 0;
ToolAPI.blockData.445.isNative = true;
ToolAPI.blockData.446 = {};
ToolAPI.blockData.446.material = {};
ToolAPI.blockData.446.material.multiplier = 1;
ToolAPI.blockData.446.material.name = "wood";
ToolAPI.blockData.446.level = 0;
ToolAPI.blockData.446.isNative = true;
ToolAPI.blockData.449 = {};
ToolAPI.blockData.449.material = {};
ToolAPI.blockData.449.material.multiplier = 1;
ToolAPI.blockData.449.material.name = "wood";
ToolAPI.blockData.449.level = 0;
ToolAPI.blockData.449.isNative = true;
ToolAPI.blockData.455 = {};
ToolAPI.blockData.455.material = {};
ToolAPI.blockData.455.material.multiplier = 1;
ToolAPI.blockData.455.material.name = "wood";
ToolAPI.blockData.455.level = 0;
ToolAPI.blockData.455.isNative = true;
ToolAPI.blockData.456 = {};
ToolAPI.blockData.456.material = {};
ToolAPI.blockData.456.material.multiplier = 1;
ToolAPI.blockData.456.material.name = "wood";
ToolAPI.blockData.456.level = 0;
ToolAPI.blockData.456.isNative = true;
ToolAPI.blockData.457 = {};
ToolAPI.blockData.457.material = {};
ToolAPI.blockData.457.material.multiplier = 1;
ToolAPI.blockData.457.material.name = "wood";
ToolAPI.blockData.457.level = 0;
ToolAPI.blockData.457.isNative = true;
ToolAPI.blockData.458 = {};
ToolAPI.blockData.458.material = {};
ToolAPI.blockData.458.material.multiplier = 1;
ToolAPI.blockData.458.material.name = "wood";
ToolAPI.blockData.458.level = 0;
ToolAPI.blockData.458.isNative = true;
ToolAPI.blockData.459 = {};
ToolAPI.blockData.459.material = {};
ToolAPI.blockData.459.material.multiplier = 1;
ToolAPI.blockData.459.material.name = "wood";
ToolAPI.blockData.459.level = 0;
ToolAPI.blockData.459.isNative = true;
ToolAPI.blockData.464 = {};
ToolAPI.blockData.464.material = {};
ToolAPI.blockData.464.material.multiplier = 1;
ToolAPI.blockData.464.material.name = "wood";
ToolAPI.blockData.464.level = 0;
ToolAPI.blockData.464.isNative = true;
ToolAPI.blockData.467 = {};
ToolAPI.blockData.467.material = {};
ToolAPI.blockData.467.material.multiplier = 1;
ToolAPI.blockData.467.material.name = "wood";
ToolAPI.blockData.467.level = 0;
ToolAPI.blockData.467.isNative = true;
ToolAPI.blockData.468 = {};
ToolAPI.blockData.468.material = {};
ToolAPI.blockData.468.material.multiplier = 1;
ToolAPI.blockData.468.material.name = "wood";
ToolAPI.blockData.468.level = 0;
ToolAPI.blockData.468.isNative = true;
ToolAPI.blockData.2 = {};
ToolAPI.blockData.2.material = {};
ToolAPI.blockData.2.material.multiplier = 1;
ToolAPI.blockData.2.material.name = "dirt";
ToolAPI.blockData.2.level = 0;
ToolAPI.blockData.2.isNative = true;
ToolAPI.blockData.3 = {};
ToolAPI.blockData.3.material = {};
ToolAPI.blockData.3.material.multiplier = 1;
ToolAPI.blockData.3.material.name = "dirt";
ToolAPI.blockData.3.level = 0;
ToolAPI.blockData.3.isNative = true;
ToolAPI.blockData.12 = {};
ToolAPI.blockData.12.material = {};
ToolAPI.blockData.12.material.multiplier = 1;
ToolAPI.blockData.12.material.name = "dirt";
ToolAPI.blockData.12.level = 0;
ToolAPI.blockData.12.isNative = true;
ToolAPI.blockData.13 = {};
ToolAPI.blockData.13.material = {};
ToolAPI.blockData.13.material.multiplier = 1;
ToolAPI.blockData.13.material.name = "dirt";
ToolAPI.blockData.13.level = 0;
ToolAPI.blockData.13.isNative = true;
ToolAPI.blockData.60 = {};
ToolAPI.blockData.60.material = {};
ToolAPI.blockData.60.material.multiplier = 1;
ToolAPI.blockData.60.material.name = "dirt";
ToolAPI.blockData.60.level = 0;
ToolAPI.blockData.60.isNative = true;
ToolAPI.blockData.78 = {};
ToolAPI.blockData.78.material = {};
ToolAPI.blockData.78.material.multiplier = 1;
ToolAPI.blockData.78.material.name = "dirt";
ToolAPI.blockData.78.level = 0;
ToolAPI.blockData.78.isNative = true;
ToolAPI.blockData.80 = {};
ToolAPI.blockData.80.material = {};
ToolAPI.blockData.80.material.multiplier = 1;
ToolAPI.blockData.80.material.name = "dirt";
ToolAPI.blockData.80.level = 0;
ToolAPI.blockData.80.isNative = true;
ToolAPI.blockData.82 = {};
ToolAPI.blockData.82.material = {};
ToolAPI.blockData.82.material.multiplier = 1;
ToolAPI.blockData.82.material.name = "dirt";
ToolAPI.blockData.82.level = 0;
ToolAPI.blockData.82.isNative = true;
ToolAPI.blockData.88 = {};
ToolAPI.blockData.88.material = {};
ToolAPI.blockData.88.material.multiplier = 1;
ToolAPI.blockData.88.material.name = "dirt";
ToolAPI.blockData.88.level = 0;
ToolAPI.blockData.88.isNative = true;
ToolAPI.blockData.110 = {};
ToolAPI.blockData.110.material = {};
ToolAPI.blockData.110.material.multiplier = 1;
ToolAPI.blockData.110.material.name = "dirt";
ToolAPI.blockData.110.level = 0;
ToolAPI.blockData.110.isNative = true;
ToolAPI.blockData.198 = {};
ToolAPI.blockData.198.material = {};
ToolAPI.blockData.198.material.multiplier = 1;
ToolAPI.blockData.198.material.name = "dirt";
ToolAPI.blockData.198.level = 0;
ToolAPI.blockData.198.isNative = true;
ToolAPI.blockData.237 = {};
ToolAPI.blockData.237.material = {};
ToolAPI.blockData.237.material.multiplier = 1;
ToolAPI.blockData.237.material.name = "dirt";
ToolAPI.blockData.237.level = 0;
ToolAPI.blockData.237.isNative = true;
ToolAPI.blockData.243 = {};
ToolAPI.blockData.243.material = {};
ToolAPI.blockData.243.material.multiplier = 1;
ToolAPI.blockData.243.material.name = "dirt";
ToolAPI.blockData.243.level = 0;
ToolAPI.blockData.243.isNative = true;
ToolAPI.blockData.30 = {};
ToolAPI.blockData.30.material = {};
ToolAPI.blockData.30.material.multiplier = 1;
ToolAPI.blockData.30.material.name = "fibre";
ToolAPI.blockData.30.level = 1;
ToolAPI.blockData.30.isNative = true;
ToolAPI.blockData.6 = {};
ToolAPI.blockData.6.material = {};
ToolAPI.blockData.6.material.multiplier = 1;
ToolAPI.blockData.6.material.name = "plant";
ToolAPI.blockData.6.level = 0;
ToolAPI.blockData.6.isNative = true;
ToolAPI.blockData.18 = {};
ToolAPI.blockData.18.material = {};
ToolAPI.blockData.18.material.multiplier = 1;
ToolAPI.blockData.18.material.name = "plant";
ToolAPI.blockData.18.level = 0;
ToolAPI.blockData.18.isNative = true;
ToolAPI.blockData.161 = {};
ToolAPI.blockData.161.material = {};
ToolAPI.blockData.161.material.multiplier = 1;
ToolAPI.blockData.161.material.name = "plant";
ToolAPI.blockData.161.level = 0;
ToolAPI.blockData.161.isNative = true;
ToolAPI.blockData.31 = {};
ToolAPI.blockData.31.material = {};
ToolAPI.blockData.31.material.multiplier = 1;
ToolAPI.blockData.31.material.name = "plant";
ToolAPI.blockData.31.level = 0;
ToolAPI.blockData.31.isNative = true;
ToolAPI.blockData.32 = {};
ToolAPI.blockData.32.material = {};
ToolAPI.blockData.32.material.multiplier = 1;
ToolAPI.blockData.32.material.name = "plant";
ToolAPI.blockData.32.level = 0;
ToolAPI.blockData.32.isNative = true;
ToolAPI.blockData.81 = {};
ToolAPI.blockData.81.material = {};
ToolAPI.blockData.81.material.multiplier = 1;
ToolAPI.blockData.81.material.name = "plant";
ToolAPI.blockData.81.level = 0;
ToolAPI.blockData.81.isNative = true;
ToolAPI.blockData.106 = {};
ToolAPI.blockData.106.material = {};
ToolAPI.blockData.106.material.multiplier = 1;
ToolAPI.blockData.106.material.name = "plant";
ToolAPI.blockData.106.level = 0;
ToolAPI.blockData.106.isNative = true;
ToolAPI.blockData.111 = {};
ToolAPI.blockData.111.material = {};
ToolAPI.blockData.111.material.multiplier = 1;
ToolAPI.blockData.111.material.name = "plant";
ToolAPI.blockData.111.level = 0;
ToolAPI.blockData.111.isNative = true;
ToolAPI.blockData.175 = {};
ToolAPI.blockData.175.material = {};
ToolAPI.blockData.175.material.multiplier = 1;
ToolAPI.blockData.175.material.name = "plant";
ToolAPI.blockData.175.level = 0;
ToolAPI.blockData.175.isNative = true;
ToolAPI.blockData.8 = {};
ToolAPI.blockData.8.material = {};
ToolAPI.blockData.8.material.multiplier = 999999999;
ToolAPI.blockData.8.material.name = "unbreaking";
ToolAPI.blockData.8.level = 0;
ToolAPI.blockData.8.isNative = true;
ToolAPI.blockData.9 = {};
ToolAPI.blockData.9.material = {};
ToolAPI.blockData.9.material.multiplier = 999999999;
ToolAPI.blockData.9.material.name = "unbreaking";
ToolAPI.blockData.9.level = 0;
ToolAPI.blockData.9.isNative = true;
ToolAPI.blockData.10 = {};
ToolAPI.blockData.10.material = {};
ToolAPI.blockData.10.material.multiplier = 999999999;
ToolAPI.blockData.10.material.name = "unbreaking";
ToolAPI.blockData.10.level = 0;
ToolAPI.blockData.10.isNative = true;
ToolAPI.blockData.11 = {};
ToolAPI.blockData.11.material = {};
ToolAPI.blockData.11.material.multiplier = 999999999;
ToolAPI.blockData.11.material.name = "unbreaking";
ToolAPI.blockData.11.level = 0;
ToolAPI.blockData.11.isNative = true;
ToolAPI.blockData.7 = {};
ToolAPI.blockData.7.material = {};
ToolAPI.blockData.7.material.multiplier = 999999999;
ToolAPI.blockData.7.material.name = "unbreaking";
ToolAPI.blockData.7.level = 0;
ToolAPI.blockData.7.isNative = true;
ToolAPI.blockData.95 = {};
ToolAPI.blockData.95.material = {};
ToolAPI.blockData.95.material.multiplier = 999999999;
ToolAPI.blockData.95.material.name = "unbreaking";
ToolAPI.blockData.95.level = 0;
ToolAPI.blockData.95.isNative = true;
ToolAPI.needDamagableItemFix = false;
ToolAPI.addBlockMaterial = function(name, breakingMultiplier) {};
ToolAPI.addToolMaterial = function(name, material) {/* Cannot read property "efficiency" from undefined */};
ToolAPI.registerTool = function(id, toolMaterial, blockMaterials, params) {};
ToolAPI.registerSword = function(id, toolMaterial, params) {};
ToolAPI.registerBlockMaterial = function(uid, materialName, level, isNative) {};
ToolAPI.registerBlockDiggingLevel = function(uid, level) {};
ToolAPI.registerBlockMaterialAsArray = function(materialName, UIDs, isNative) {};
ToolAPI.refresh = function() {};
ToolAPI.getBlockData = function(blockID) {return {"material":{"multiplier":3.3333333333333335,"name":"stone"},"level":1,"isNative":true};};
ToolAPI.getBlockMaterial = function(blockID) {return {"multiplier":3.3333333333333335,"name":"stone"};};
ToolAPI.getBlockDestroyLevel = function(blockID) {return 1;};
ToolAPI.getEnchantExtraData = function(extra) {/* Cannot find function getEnchants in object [object Object]. */};
ToolAPI.fortuneDropModifier = function(drop, level) {/* Cannot read property "length" from undefined */};
ToolAPI.getDestroyTimeViaTool = function(fullBlock, toolItem, coords, ignoreNative) {return 1.5;};
ToolAPI.getToolData = function(itemID) {return null;};
ToolAPI.getToolLevel = function(itemID) {};
ToolAPI.getToolLevelViaBlock = function(itemID, blockID) {};
ToolAPI.getCarriedToolData = function() {return null;};
ToolAPI.getCarriedToolLevel = function() {};
ToolAPI.startDestroyHook = function(coords, block, carried) {/* Cannot read property "id" from undefined */};
ToolAPI.destroyBlockHook = function(coords, block, item) {/* Cannot read property "id" from undefined */};
ToolAPI.LastAttackTime = 0;
ToolAPI.playerAttackHook = function(attacker, victim, item) {/* Cannot read property "id" from undefined */};
ToolAPI.resetEngine = function() {};
ToolAPI.dropExpOrbs = function(x, y, z, value) {};
ToolAPI.dropOreExp = function(coords, minVal, maxVal, modifier) {};
ToolAPI.getBlockMaterialName = function(blockID) {return "stone";};

var Armor = {};
Armor.registerFuncs = function(id, funcs) {};
Armor.preventDamaging = function(id) {};

var LiquidRegistry = {};
LiquidRegistry.liquidStorageSaverId = 1306847136;
LiquidRegistry.liquids = {};
LiquidRegistry.liquids.water = {};
LiquidRegistry.liquids.water.key = "water";
LiquidRegistry.liquids.water.name = "water";
LiquidRegistry.liquids.water.uiTextures = ["_liquid_water_texture_0"];
LiquidRegistry.liquids.water.uiCache = {};
LiquidRegistry.liquids.water.modelTextures = [];
LiquidRegistry.liquids.water.addUITexture = function(name) {};
LiquidRegistry.liquids.water.addModelTexture = function(name) {};
LiquidRegistry.liquids.lava = {};
LiquidRegistry.liquids.lava.key = "lava";
LiquidRegistry.liquids.lava.name = "lava";
LiquidRegistry.liquids.lava.uiTextures = ["_liquid_lava_texture_0"];
LiquidRegistry.liquids.lava.uiCache = {};
LiquidRegistry.liquids.lava.modelTextures = [];
LiquidRegistry.liquids.lava.addUITexture = function(name) {};
LiquidRegistry.liquids.lava.addModelTexture = function(name) {};
LiquidRegistry.liquids.milk = {};
LiquidRegistry.liquids.milk.key = "milk";
LiquidRegistry.liquids.milk.name = "milk";
LiquidRegistry.liquids.milk.uiTextures = ["_liquid_milk_texture_0"];
LiquidRegistry.liquids.milk.uiCache = {};
LiquidRegistry.liquids.milk.modelTextures = [];
LiquidRegistry.liquids.milk.addUITexture = function(name) {};
LiquidRegistry.liquids.milk.addModelTexture = function(name) {};
LiquidRegistry.registerLiquid = function(key, name, uiTextures, modelTextures) {};
LiquidRegistry.getLiquidData = function(key) {return {"key":"lava","name":"test","uiTextures":[],"uiCache":{},"modelTextures":[]};};
LiquidRegistry.isExists = function(key) {return true;};
LiquidRegistry.getLiquidName = function(key) {return "test";};
LiquidRegistry.getLiquidUITexture = function(key, width, height) {return "missing_texture";};
LiquidRegistry.getLiquidUIBitmap = function() {};
LiquidRegistry.FullByEmpty = {};
LiquidRegistry.FullByEmpty.325:0:water = {};
LiquidRegistry.FullByEmpty.325:0:water.id = 325;
LiquidRegistry.FullByEmpty.325:0:water.data = 8;
LiquidRegistry.FullByEmpty.374:0:water = {};
LiquidRegistry.FullByEmpty.374:0:water.id = 373;
LiquidRegistry.FullByEmpty.374:0:water.data = 0;
LiquidRegistry.FullByEmpty.325:0:lava = {};
LiquidRegistry.FullByEmpty.325:0:lava.id = 325;
LiquidRegistry.FullByEmpty.325:0:lava.data = 10;
LiquidRegistry.FullByEmpty.325:0:milk = {};
LiquidRegistry.FullByEmpty.325:0:milk.id = 325;
LiquidRegistry.FullByEmpty.325:0:milk.data = 1;
LiquidRegistry.EmptyByFull = {};
LiquidRegistry.EmptyByFull.325:8 = {};
LiquidRegistry.EmptyByFull.325:8.id = 325;
LiquidRegistry.EmptyByFull.325:8.data = 0;
LiquidRegistry.EmptyByFull.325:8.liquid = "water";
LiquidRegistry.EmptyByFull.373:0 = {};
LiquidRegistry.EmptyByFull.373:0.id = 374;
LiquidRegistry.EmptyByFull.373:0.data = 0;
LiquidRegistry.EmptyByFull.373:0.liquid = "water";
LiquidRegistry.EmptyByFull.325:10 = {};
LiquidRegistry.EmptyByFull.325:10.id = 325;
LiquidRegistry.EmptyByFull.325:10.data = 0;
LiquidRegistry.EmptyByFull.325:10.liquid = "lava";
LiquidRegistry.EmptyByFull.325:1 = {};
LiquidRegistry.EmptyByFull.325:1.id = 325;
LiquidRegistry.EmptyByFull.325:1.data = 0;
LiquidRegistry.EmptyByFull.325:1.liquid = "milk";
LiquidRegistry.registerItem = function(liquid, empty, full) {/* "key" is not defined. */};
LiquidRegistry.getEmptyItem = function(id, data) {};
LiquidRegistry.getItemLiquid = function(id, data) {};
LiquidRegistry.getFullItem = function(id, data, liquid) {};
LiquidRegistry.Storage = function(tileEntity) {};

var Native = {};
Native.ArmorType = {};
Native.ArmorType.boots = 3;
Native.ArmorType.chestplate = 1;
Native.ArmorType.helmet = 0;
Native.ArmorType.leggings = 2;
Native.ItemCategory = {};
Native.ItemCategory.DECORATION = 2;
Native.ItemCategory.FOOD = 4;
Native.ItemCategory.INTERNAL = 0;
Native.ItemCategory.MATERIAL = 1;
Native.ItemCategory.TOOL = 3;
Native.ParticleType = {};
Native.ParticleType.angryVillager = 32;
Native.ParticleType.bubble = 1;
Native.ParticleType.cloud = 4;
Native.ParticleType.crit = 2;
Native.ParticleType.dripLava = 24;
Native.ParticleType.dripWater = 23;
Native.ParticleType.enchantmenttable = 32;
Native.ParticleType.fallingDust = 26;
Native.ParticleType.flame = 7;
Native.ParticleType.happyVillager = 33;
Native.ParticleType.heart = 17;
Native.ParticleType.hugeexplosion = 14;
Native.ParticleType.hugeexplosionSeed = 15;
Native.ParticleType.ink = 25;
Native.ParticleType.itemBreak = 12;
Native.ParticleType.largeexplode = 5;
Native.ParticleType.lava = 8;
Native.ParticleType.mobFlame = 16;
Native.ParticleType.note = 36;
Native.ParticleType.portal = 20;
Native.ParticleType.rainSplash = 21;
Native.ParticleType.redstone = 10;
Native.ParticleType.slime = 30;
Native.ParticleType.smoke = 4;
Native.ParticleType.smoke2 = 9;
Native.ParticleType.snowballpoof = 13;
Native.ParticleType.spell = 29;
Native.ParticleType.spell2 = 28;
Native.ParticleType.spell3 = 27;
Native.ParticleType.splash = 22;
Native.ParticleType.suspendedTown = 19;
Native.ParticleType.terrain = 16;
Native.ParticleType.waterWake = 31;
Native.Color = {};
Native.Color.AQUA = "§b";
Native.Color.BEGIN = "§";
Native.Color.BLACK = "§0";
Native.Color.BLUE = "§9";
Native.Color.BOLD = "§l";
Native.Color.DARK_AQUA = "§3";
Native.Color.DARK_BLUE = "§1";
Native.Color.DARK_GRAY = "§8";
Native.Color.DARK_GREEN = "§2";
Native.Color.DARK_PURPLE = "§5";
Native.Color.DARK_RED = "§4";
Native.Color.GOLD = "§6";
Native.Color.GRAY = "§7";
Native.Color.GREEN = "§a";
Native.Color.ITALIC = "§o";
Native.Color.LIGHT_PURPLE = "§d";
Native.Color.OBFUSCATED = "§k";
Native.Color.RED = "§c";
Native.Color.RESET = "§r";
Native.Color.STRIKETHROUGH = "§m";
Native.Color.UNDERLINE = "§n";
Native.Color.WHITE = "§f";
Native.Color.YELLOW = "§e";
Native.EntityType = {};
Native.EntityType.AREA_EFFECT_CLOUD = 95;
Native.EntityType.ARMOR_STAND = 61;
Native.EntityType.ARROW = 80;
Native.EntityType.BAT = 19;
Native.EntityType.BLAZE = 43;
Native.EntityType.BOAT = 90;
Native.EntityType.CAT = 75;
Native.EntityType.CAVE_SPIDER = 40;
Native.EntityType.CHEST_MINECART = 98;
Native.EntityType.CHICKEN = 10;
Native.EntityType.COD = 112;
Native.EntityType.COMMAND_BLOCK_MINECART = 100;
Native.EntityType.COW = 11;
Native.EntityType.CREEPER = 33;
Native.EntityType.DOLPHIN = 31;
Native.EntityType.DONKEY = 24;
Native.EntityType.DRAGON_FIREBOLL = 79;
Native.EntityType.DROWNED = 110;
Native.EntityType.EGG = 82;
Native.EntityType.ENDERMAN = 38;
Native.EntityType.ENDERMITE = 55;
Native.EntityType.ENDER_CRYSTAL = 71;
Native.EntityType.ENDER_DRAGON = 53;
Native.EntityType.ENDER_GUARDIAN = 50;
Native.EntityType.ENDER_GUARDIAN_GHOST = 120;
Native.EntityType.ENDER_PEARL = 87;
Native.EntityType.EVOCATION_FANG = 103;
Native.EntityType.EVOCATION_ILLAGER = 104;
Native.EntityType.EXPERIENCE_ORB = 69;
Native.EntityType.EXPERIENCE_POTION = 68;
Native.EntityType.EYE_OF_ENDER_SIGNAL = 70;
Native.EntityType.FALLING_BLOCK = 66;
Native.EntityType.FIREBALL = 85;
Native.EntityType.FIREWORKS_ROCKET = 72;
Native.EntityType.FISHING_HOOK = 77;
Native.EntityType.GHAST = 41;
Native.EntityType.GUARDIAN = 49;
Native.EntityType.HOPPER_MINECART = 96;
Native.EntityType.HORSE = 23;
Native.EntityType.HUSK = 47;
Native.EntityType.IRON_GOLEM = 20;
Native.EntityType.ITEM = 64;
Native.EntityType.LAVA_SLIME = 42;
Native.EntityType.LEASH_KNOT = 88;
Native.EntityType.LIGHTNING_BOLT = 93;
Native.EntityType.LINGERING_POTION = 101;
Native.EntityType.LLAMA = 29;
Native.EntityType.LLAMA_SPLIT = 102;
Native.EntityType.MINECART = 84;
Native.EntityType.MOVING_BLOCK = 67;
Native.EntityType.MULE = 25;
Native.EntityType.MUSHROOM_COW = 16;
Native.EntityType.OCELOT = 22;
Native.EntityType.PAINTING = 83;
Native.EntityType.PANDA = 113;
Native.EntityType.PARROT = 30;
Native.EntityType.PHANTOM = 58;
Native.EntityType.PIG = 12;
Native.EntityType.PIG_ZOMBIE = 36;
Native.EntityType.PILLAGER = 114;
Native.EntityType.PLAYER = 63;
Native.EntityType.POLAR_BEAR = 28;
Native.EntityType.PRIMED_TNT = 65;
Native.EntityType.PUFFERFISH = 108;
Native.EntityType.RABBIT = 18;
Native.EntityType.RAVAGER = 59;
Native.EntityType.SALMON = 109;
Native.EntityType.SHEEP = 13;
Native.EntityType.SHIELD = 117;
Native.EntityType.SHULKER = 54;
Native.EntityType.SHULKER_BULLET = 76;
Native.EntityType.SILVERFISH = 39;
Native.EntityType.SKELETON = 34;
Native.EntityType.SKELETON_HORSE = 26;
Native.EntityType.SLIME = 37;
Native.EntityType.SMALL_FIREBALL = 94;
Native.EntityType.SNOWBALL = 81;
Native.EntityType.SNOW_GOLEM = 21;
Native.EntityType.SPIDER = 35;
Native.EntityType.SQUID = 17;
Native.EntityType.STRAY = 46;
Native.EntityType.THROWN_POTION = 86;
Native.EntityType.THROWN_TRIDENT = 73;
Native.EntityType.TNT_COMMAND = 97;
Native.EntityType.TROPICALFISH = 111;
Native.EntityType.TURTLE = 74;
Native.EntityType.VEX = 105;
Native.EntityType.VILLAGER = 15;
Native.EntityType.VILLAGER_V2 = 115;
Native.EntityType.VINDICATOR = 57;
Native.EntityType.WANDERING_TRADER = 118;
Native.EntityType.WHITCH = 45;
Native.EntityType.WHITHER = 52;
Native.EntityType.WHITHER_SKELETON = 48;
Native.EntityType.WHITHER_SKULL = 89;
Native.EntityType.WHITHER_SKULL_DANGEROUS = 91;
Native.EntityType.WOLF = 14;
Native.EntityType.ZOMBIE = 32;
Native.EntityType.ZOMBIE_HORSE = 27;
Native.EntityType.ZOMBIE_VILLAGER = 44;
Native.EntityType.ZOMBIE_VILLAGE_V2 = 116;
Native.MobRenderType = {};
Native.MobRenderType.arrow = 25;
Native.MobRenderType.bat = 10;
Native.MobRenderType.blaze = 18;
Native.MobRenderType.boat = 35;
Native.MobRenderType.camera = 48;
Native.MobRenderType.chicken = 5;
Native.MobRenderType.cow = 6;
Native.MobRenderType.creeper = 22;
Native.MobRenderType.egg = 28;
Native.MobRenderType.enderman = 24;
Native.MobRenderType.expPotion = 45;
Native.MobRenderType.experienceOrb = 40;
Native.MobRenderType.fallingTile = 33;
Native.MobRenderType.fireball = 37;
Native.MobRenderType.fishHook = 26;
Native.MobRenderType.ghast = 17;
Native.MobRenderType.human = 3;
Native.MobRenderType.ironGolem = 42;
Native.MobRenderType.item = 4;
Native.MobRenderType.lavaSlime = 16;
Native.MobRenderType.lightningBolt = 41;
Native.MobRenderType.map = 50;
Native.MobRenderType.minecart = 34;
Native.MobRenderType.mushroomCow = 7;
Native.MobRenderType.ocelot = 43;
Native.MobRenderType.painting = 32;
Native.MobRenderType.pig = 8;
Native.MobRenderType.player = 27;
Native.MobRenderType.rabbit = 46;
Native.MobRenderType.sheep = 9;
Native.MobRenderType.silverfish = 21;
Native.MobRenderType.skeleton = 19;
Native.MobRenderType.slime = 23;
Native.MobRenderType.smallFireball = 38;
Native.MobRenderType.snowGolem = 44;
Native.MobRenderType.snowball = 29;
Native.MobRenderType.spider = 20;
Native.MobRenderType.squid = 36;
Native.MobRenderType.thrownPotion = 31;
Native.MobRenderType.tnt = 2;
Native.MobRenderType.unknownItem = 30;
Native.MobRenderType.villager = 12;
Native.MobRenderType.villagerZombie = 39;
Native.MobRenderType.witch = 47;
Native.MobRenderType.wolf = 11;
Native.MobRenderType.zombie = 14;
Native.MobRenderType.zombiePigman = 15;
Native.PotionEffect = {};
Native.PotionEffect.absorption = 22;
Native.PotionEffect.bad_omen = 28;
Native.PotionEffect.blindness = 15;
Native.PotionEffect.conduit_power = 26;
Native.PotionEffect.confusion = 9;
Native.PotionEffect.damageBoost = 5;
Native.PotionEffect.damageResistance = 11;
Native.PotionEffect.digSlowdown = 4;
Native.PotionEffect.digSpeed = 3;
Native.PotionEffect.fatal_poison = 25;
Native.PotionEffect.fireResistance = 12;
Native.PotionEffect.harm = 7;
Native.PotionEffect.heal = 6;
Native.PotionEffect.healthBoost = 21;
Native.PotionEffect.hunger = 17;
Native.PotionEffect.invisibility = 14;
Native.PotionEffect.jump = 8;
Native.PotionEffect.levitation = 24;
Native.PotionEffect.movementSlowdown = 2;
Native.PotionEffect.movementSpeed = 1;
Native.PotionEffect.nightVision = 16;
Native.PotionEffect.poison = 19;
Native.PotionEffect.regeneration = 10;
Native.PotionEffect.saturation = 23;
Native.PotionEffect.slow_falling = 27;
Native.PotionEffect.village_hero = 29;
Native.PotionEffect.waterBreathing = 13;
Native.PotionEffect.weakness = 18;
Native.PotionEffect.wither = 20;
Native.Dimension = {};
Native.Dimension.END = 2;
Native.Dimension.NETHER = 1;
Native.Dimension.NORMAL = 0;
Native.ItemAnimation = {};
Native.ItemAnimation.bow = 4;
Native.ItemAnimation.normal = 0;
Native.BlockSide = {};
Native.BlockSide.DOWN = 0;
Native.BlockSide.EAST = 5;
Native.BlockSide.NORTH = 2;
Native.BlockSide.SOUTH = 3;
Native.BlockSide.UP = 1;
Native.BlockSide.WEST = 4;
Native.Enchantment = {};
Native.Enchantment.AQUA_AFFINITY = 7;
Native.Enchantment.BANE_OF_ARTHROPODS = 11;
Native.Enchantment.BINDING_CURSE = 27;
Native.Enchantment.BLAST_PROTECTION = 3;
Native.Enchantment.CHANNELING = 32;
Native.Enchantment.DEPTH_STRIDER = 8;
Native.Enchantment.EFFICIENCY = 15;
Native.Enchantment.FEATHER_FALLING = 2;
Native.Enchantment.FIRE_ASPECT = 13;
Native.Enchantment.FIRE_PROTECTION = 1;
Native.Enchantment.FLAME = 21;
Native.Enchantment.FORTUNE = 18;
Native.Enchantment.FROST_WALKER = 25;
Native.Enchantment.IMPALING = 29;
Native.Enchantment.INFINITY = 22;
Native.Enchantment.KNOCKBACK = 12;
Native.Enchantment.LOOTING = 14;
Native.Enchantment.LOYALTY = 31;
Native.Enchantment.LUCK_OF_THE_SEA = 23;
Native.Enchantment.LURE = 24;
Native.Enchantment.MENDING = 26;
Native.Enchantment.POWER = 19;
Native.Enchantment.PROJECTILE_PROTECTION = 4;
Native.Enchantment.PROTECTION = 0;
Native.Enchantment.PUNCH = 20;
Native.Enchantment.RESPIRATION = 6;
Native.Enchantment.RIPTIDE = 30;
Native.Enchantment.SHARPNESS = 9;
Native.Enchantment.SILK_TOUCH = 16;
Native.Enchantment.SMITE = 10;
Native.Enchantment.THORNS = 5;
Native.Enchantment.UNBREAKING = 17;
Native.Enchantment.VANISHING_CURSE = 28;
Native.EnchantType = {};
Native.EnchantType.all = 16383;
Native.EnchantType.axe = 512;
Native.EnchantType.book = 16383;
Native.EnchantType.boots = 4;
Native.EnchantType.bow = 32;
Native.EnchantType.chestplate = 8;
Native.EnchantType.fishingRod = 4096;
Native.EnchantType.flintAndSteel = 256;
Native.EnchantType.helmet = 1;
Native.EnchantType.hoe = 64;
Native.EnchantType.leggings = 2;
Native.EnchantType.pickaxe = 1024;
Native.EnchantType.shears = 128;
Native.EnchantType.shovel = 2048;
Native.EnchantType.weapon = 16;
Native.BlockRenderLayer = {};
Native.BlockRenderLayer.alpha = 4099;
Native.BlockRenderLayer.alpha_seasons = 5;
Native.BlockRenderLayer.alpha_single_side = 4;
Native.BlockRenderLayer.blend = 6;
Native.BlockRenderLayer.doubleside = 2;
Native.BlockRenderLayer.far = 9;
Native.BlockRenderLayer.opaque = 0;
Native.BlockRenderLayer.opaque_seasons = 1;
Native.BlockRenderLayer.seasons_far = 10;
Native.BlockRenderLayer.seasons_far_alpha = 11;
Native.BlockRenderLayer.water = 7;
Native.GameMode = {};
Native.GameMode.ADVENTURE = 2;
Native.GameMode.CREATIVE = 1;
Native.GameMode.SPECTATOR = 3;
Native.GameMode.SURVIVAL = 0;
Native.GameDifficulty = {};
Native.GameDifficulty.EASY = 1;
Native.GameDifficulty.HARD = 3;
Native.GameDifficulty.NORMAL = 2;
Native.GameDifficulty.PEACEFUL = 0;
function alert() {};
function ItemExtraData() {};
function RenderMesh() {};